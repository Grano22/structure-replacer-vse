{"version":3,"file":"extension.js","mappings":"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IAAK,YACL,IAAK,YACL,IAAK,QACL,IAAK,UACL,IAAK,SACL,IAAK,YACL,IAAK,UACL,IAAK,eACL,IAAK,SACL,IAAK,UACL,IAAK,eACL,IAAK,gBACL,IAAK,cACL,IAAK,cACL,IAAK,iBACL,IAAK,cACL,IAAK,cACL,IAAK,aACL,IAAK,cACL,IAAK,aACL,IAAK,aACL,IAAK,QACL,IAAK,QACL,IAAK,eACL,IAAK,gBACL,IAAK,eACL,IAAK,gBACL,IAAK,gBACL,IAAK,OACL,IAAK,OACL,IAAK,iBACL,IAAK,qBACL,IAAK,aACL,IAAK,iBACL,IAAK,wBACL,IAAK,wBACL,IAAK,eACL,IAAK,aACL,IAAK,gBACL,IAAK,gBACL,IAAK,eACL,IAAK,gBACL,IAAK,cACL,IAAK,eACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,eACL,IAAK,aACL,IAAK,iBACL,IAAK,iBACL,IAAK,UACL,IAAK,aACL,IAAK,UACL,IAAK,aACL,IAAK,UACL,IAAK,UACL,IAAK,YACL,IAAK,cACL,IAAK,eACL,IAAK,QACL,IAAK,WACL,IAAK,cACL,IAAK,YACL,IAAK,UACL,IAAK,QACL,IAAK,cACL,IAAK,WACL,IAAK,SACL,IAAK,cACL,IAAK,SACL,IAAK,YACL,IAAK,WACL,IAAK,eACL,IAAK,aACL,IAAK,6BACL,IAAK,YACL,IAAK,YACL,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,YACL,IAAK,aACL,IAAK,WACL,IAAK,SACL,IAAK,kBACL,IAAK,gBACL,IAAK,YACL,IAAK,aACL,IAAK,aACL,IAAK,uBACL,IAAK,cACL,IAAK,eACL,IAAK,YACL,IAAK,gBACL,IAAK,aACL,IAAK,aACL,IAAK,QACL,IAAK,cACL,IAAK,cACL,IAAK,mBACL,IAAK,QAEPD,MA7RiB,CACjBiI,gBAAiB,IACjBV,MAAO,IACPiI,0BAA2B,IAC3BT,kBAAmB,IACnBG,SAAU,IACVmC,2BAA4B,IAC5BjC,iBAAkB,IAClBmC,aAAc,IACdjC,aAAc,IACdzH,QAAS,IACTE,QAAS,IACTjB,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","sources":["webpack://data-replacer/./node_modules/php-parser/src/ast.js","webpack://data-replacer/./node_modules/php-parser/src/ast/array.js","webpack://data-replacer/./node_modules/php-parser/src/ast/arrowfunc.js","webpack://data-replacer/./node_modules/php-parser/src/ast/assign.js","webpack://data-replacer/./node_modules/php-parser/src/ast/assignref.js","webpack://data-replacer/./node_modules/php-parser/src/ast/bin.js","webpack://data-replacer/./node_modules/php-parser/src/ast/block.js","webpack://data-replacer/./node_modules/php-parser/src/ast/boolean.js","webpack://data-replacer/./node_modules/php-parser/src/ast/break.js","webpack://data-replacer/./node_modules/php-parser/src/ast/byref.js","webpack://data-replacer/./node_modules/php-parser/src/ast/call.js","webpack://data-replacer/./node_modules/php-parser/src/ast/case.js","webpack://data-replacer/./node_modules/php-parser/src/ast/cast.js","webpack://data-replacer/./node_modules/php-parser/src/ast/catch.js","webpack://data-replacer/./node_modules/php-parser/src/ast/class.js","webpack://data-replacer/./node_modules/php-parser/src/ast/classconstant.js","webpack://data-replacer/./node_modules/php-parser/src/ast/clone.js","webpack://data-replacer/./node_modules/php-parser/src/ast/closure.js","webpack://data-replacer/./node_modules/php-parser/src/ast/comment.js","webpack://data-replacer/./node_modules/php-parser/src/ast/commentblock.js","webpack://data-replacer/./node_modules/php-parser/src/ast/commentline.js","webpack://data-replacer/./node_modules/php-parser/src/ast/constant.js","webpack://data-replacer/./node_modules/php-parser/src/ast/constantstatement.js","webpack://data-replacer/./node_modules/php-parser/src/ast/continue.js","webpack://data-replacer/./node_modules/php-parser/src/ast/declaration.js","webpack://data-replacer/./node_modules/php-parser/src/ast/declare.js","webpack://data-replacer/./node_modules/php-parser/src/ast/declaredirective.js","webpack://data-replacer/./node_modules/php-parser/src/ast/do.js","webpack://data-replacer/./node_modules/php-parser/src/ast/echo.js","webpack://data-replacer/./node_modules/php-parser/src/ast/empty.js","webpack://data-replacer/./node_modules/php-parser/src/ast/encapsed.js","webpack://data-replacer/./node_modules/php-parser/src/ast/encapsedpart.js","webpack://data-replacer/./node_modules/php-parser/src/ast/entry.js","webpack://data-replacer/./node_modules/php-parser/src/ast/error.js","webpack://data-replacer/./node_modules/php-parser/src/ast/eval.js","webpack://data-replacer/./node_modules/php-parser/src/ast/exit.js","webpack://data-replacer/./node_modules/php-parser/src/ast/expression.js","webpack://data-replacer/./node_modules/php-parser/src/ast/expressionstatement.js","webpack://data-replacer/./node_modules/php-parser/src/ast/for.js","webpack://data-replacer/./node_modules/php-parser/src/ast/foreach.js","webpack://data-replacer/./node_modules/php-parser/src/ast/function.js","webpack://data-replacer/./node_modules/php-parser/src/ast/global.js","webpack://data-replacer/./node_modules/php-parser/src/ast/goto.js","webpack://data-replacer/./node_modules/php-parser/src/ast/halt.js","webpack://data-replacer/./node_modules/php-parser/src/ast/identifier.js","webpack://data-replacer/./node_modules/php-parser/src/ast/if.js","webpack://data-replacer/./node_modules/php-parser/src/ast/include.js","webpack://data-replacer/./node_modules/php-parser/src/ast/inline.js","webpack://data-replacer/./node_modules/php-parser/src/ast/interface.js","webpack://data-replacer/./node_modules/php-parser/src/ast/isset.js","webpack://data-replacer/./node_modules/php-parser/src/ast/label.js","webpack://data-replacer/./node_modules/php-parser/src/ast/list.js","webpack://data-replacer/./node_modules/php-parser/src/ast/literal.js","webpack://data-replacer/./node_modules/php-parser/src/ast/location.js","webpack://data-replacer/./node_modules/php-parser/src/ast/lookup.js","webpack://data-replacer/./node_modules/php-parser/src/ast/magic.js","webpack://data-replacer/./node_modules/php-parser/src/ast/method.js","webpack://data-replacer/./node_modules/php-parser/src/ast/name.js","webpack://data-replacer/./node_modules/php-parser/src/ast/namespace.js","webpack://data-replacer/./node_modules/php-parser/src/ast/new.js","webpack://data-replacer/./node_modules/php-parser/src/ast/node.js","webpack://data-replacer/./node_modules/php-parser/src/ast/noop.js","webpack://data-replacer/./node_modules/php-parser/src/ast/nowdoc.js","webpack://data-replacer/./node_modules/php-parser/src/ast/nullkeyword.js","webpack://data-replacer/./node_modules/php-parser/src/ast/number.js","webpack://data-replacer/./node_modules/php-parser/src/ast/offsetlookup.js","webpack://data-replacer/./node_modules/php-parser/src/ast/operation.js","webpack://data-replacer/./node_modules/php-parser/src/ast/parameter.js","webpack://data-replacer/./node_modules/php-parser/src/ast/parentreference.js","webpack://data-replacer/./node_modules/php-parser/src/ast/position.js","webpack://data-replacer/./node_modules/php-parser/src/ast/post.js","webpack://data-replacer/./node_modules/php-parser/src/ast/pre.js","webpack://data-replacer/./node_modules/php-parser/src/ast/print.js","webpack://data-replacer/./node_modules/php-parser/src/ast/program.js","webpack://data-replacer/./node_modules/php-parser/src/ast/property.js","webpack://data-replacer/./node_modules/php-parser/src/ast/propertylookup.js","webpack://data-replacer/./node_modules/php-parser/src/ast/propertystatement.js","webpack://data-replacer/./node_modules/php-parser/src/ast/reference.js","webpack://data-replacer/./node_modules/php-parser/src/ast/retif.js","webpack://data-replacer/./node_modules/php-parser/src/ast/return.js","webpack://data-replacer/./node_modules/php-parser/src/ast/selfreference.js","webpack://data-replacer/./node_modules/php-parser/src/ast/silent.js","webpack://data-replacer/./node_modules/php-parser/src/ast/statement.js","webpack://data-replacer/./node_modules/php-parser/src/ast/static.js","webpack://data-replacer/./node_modules/php-parser/src/ast/staticlookup.js","webpack://data-replacer/./node_modules/php-parser/src/ast/staticreference.js","webpack://data-replacer/./node_modules/php-parser/src/ast/staticvariable.js","webpack://data-replacer/./node_modules/php-parser/src/ast/string.js","webpack://data-replacer/./node_modules/php-parser/src/ast/switch.js","webpack://data-replacer/./node_modules/php-parser/src/ast/throw.js","webpack://data-replacer/./node_modules/php-parser/src/ast/trait.js","webpack://data-replacer/./node_modules/php-parser/src/ast/traitalias.js","webpack://data-replacer/./node_modules/php-parser/src/ast/traitprecedence.js","webpack://data-replacer/./node_modules/php-parser/src/ast/traituse.js","webpack://data-replacer/./node_modules/php-parser/src/ast/try.js","webpack://data-replacer/./node_modules/php-parser/src/ast/typereference.js","webpack://data-replacer/./node_modules/php-parser/src/ast/unary.js","webpack://data-replacer/./node_modules/php-parser/src/ast/unset.js","webpack://data-replacer/./node_modules/php-parser/src/ast/usegroup.js","webpack://data-replacer/./node_modules/php-parser/src/ast/useitem.js","webpack://data-replacer/./node_modules/php-parser/src/ast/variable.js","webpack://data-replacer/./node_modules/php-parser/src/ast/variadic.js","webpack://data-replacer/./node_modules/php-parser/src/ast/while.js","webpack://data-replacer/./node_modules/php-parser/src/ast/yield.js","webpack://data-replacer/./node_modules/php-parser/src/ast/yieldfrom.js","webpack://data-replacer/./node_modules/php-parser/src/index.js","webpack://data-replacer/./node_modules/php-parser/src/lexer.js","webpack://data-replacer/./node_modules/php-parser/src/lexer/comments.js","webpack://data-replacer/./node_modules/php-parser/src/lexer/initial.js","webpack://data-replacer/./node_modules/php-parser/src/lexer/numbers.js","webpack://data-replacer/./node_modules/php-parser/src/lexer/property.js","webpack://data-replacer/./node_modules/php-parser/src/lexer/scripting.js","webpack://data-replacer/./node_modules/php-parser/src/lexer/strings.js","webpack://data-replacer/./node_modules/php-parser/src/lexer/tokens.js","webpack://data-replacer/./node_modules/php-parser/src/lexer/utils.js","webpack://data-replacer/./node_modules/php-parser/src/parser.js","webpack://data-replacer/./node_modules/php-parser/src/parser/array.js","webpack://data-replacer/./node_modules/php-parser/src/parser/class.js","webpack://data-replacer/./node_modules/php-parser/src/parser/comment.js","webpack://data-replacer/./node_modules/php-parser/src/parser/expr.js","webpack://data-replacer/./node_modules/php-parser/src/parser/function.js","webpack://data-replacer/./node_modules/php-parser/src/parser/if.js","webpack://data-replacer/./node_modules/php-parser/src/parser/loops.js","webpack://data-replacer/./node_modules/php-parser/src/parser/main.js","webpack://data-replacer/./node_modules/php-parser/src/parser/namespace.js","webpack://data-replacer/./node_modules/php-parser/src/parser/scalar.js","webpack://data-replacer/./node_modules/php-parser/src/parser/statement.js","webpack://data-replacer/./node_modules/php-parser/src/parser/switch.js","webpack://data-replacer/./node_modules/php-parser/src/parser/try.js","webpack://data-replacer/./node_modules/php-parser/src/parser/utils.js","webpack://data-replacer/./node_modules/php-parser/src/parser/variable.js","webpack://data-replacer/./node_modules/php-parser/src/tokens.js","webpack://data-replacer/./src/converter/AbstractStructureConverter.ts","webpack://data-replacer/./src/converter/CurrentLangStructureConverter.ts","webpack://data-replacer/./src/converter/JSONStructureConverter.ts","webpack://data-replacer/./src/converter/PHPArrayStructureConverter.ts","webpack://data-replacer/./src/converter/XMLStructureConverter.ts","webpack://data-replacer/./src/converter/YMLStructureConverter.ts","webpack://data-replacer/./src/converter/fromCurrLang/CurrentLangStructurePartialConverter.ts","webpack://data-replacer/./src/converter/fromCurrLang/ToJSONStructureConverter.ts","webpack://data-replacer/./src/converter/fromCurrLang/ToPHPArrayStructureConverter.ts","webpack://data-replacer/./src/converter/fromCurrLang/ToSQLTableDefinitionStructureConveter.ts","webpack://data-replacer/./src/converter/fromCurrLang/ToXMLStructureConverter.ts","webpack://data-replacer/./src/converter/fromCurrLang/ToYMLStructureConverter.ts","webpack://data-replacer/./src/detector/StructureDetectionStrategy.ts","webpack://data-replacer/./src/detector/StructureDetector.ts","webpack://data-replacer/./src/fasades/DataReplacerExtensionFasade.ts","webpack://data-replacer/./src/gui/quickPickMenu/items.ts","webpack://data-replacer/./src/gui/sidepanel/SidepanelMenuProvider.ts","webpack://data-replacer/./src/libs/JSObject/JSObject.ts","webpack://data-replacer/./src/libs/PHPArray/PHPArray.ts","webpack://data-replacer/./src/libs/XMLStruct/XMLStruct.ts","webpack://data-replacer/./src/managers/StructuresDefinitionManager.ts","webpack://data-replacer/./src/results/validationResult.ts","webpack://data-replacer/./src/structures/StructureDefinition.ts","webpack://data-replacer/./src/structures/StructureDefinitionFactory.ts","webpack://data-replacer/./src/structures/definitions.ts","webpack://data-replacer/./src/throwable/Exception.ts","webpack://data-replacer/./src/throwable/ReportError.ts","webpack://data-replacer/./src/throwable/StructureConvertionException.ts","webpack://data-replacer/./src/throwable/StructureValidationException.ts","webpack://data-replacer/./src/throwable/TypeReportError.ts","webpack://data-replacer/./src/tools/tools.ts","webpack://data-replacer/./src/validators/AbstractStructureValidator.ts","webpack://data-replacer/./src/validators/JSONStructureValidator.ts","webpack://data-replacer/./src/validators/PHPArrayStructureValidator.ts","webpack://data-replacer/./src/validators/StringableStructureValidator.ts","webpack://data-replacer/./src/validators/XMLStructureValidator.ts","webpack://data-replacer/./src/validators/YMLStructureValidator.ts","webpack://data-replacer/./node_modules/xmldom/lib/dom-parser.js","webpack://data-replacer/./node_modules/xmldom/lib/dom.js","webpack://data-replacer/./node_modules/xmldom/lib/entities.js","webpack://data-replacer/./node_modules/xmldom/lib/sax.js","webpack://data-replacer/./node_modules/yamljs/lib/Dumper.js","webpack://data-replacer/./node_modules/yamljs/lib/Escaper.js","webpack://data-replacer/./node_modules/yamljs/lib/Exception/DumpException.js","webpack://data-replacer/./node_modules/yamljs/lib/Exception/ParseException.js","webpack://data-replacer/./node_modules/yamljs/lib/Exception/ParseMore.js","webpack://data-replacer/./node_modules/yamljs/lib/Inline.js","webpack://data-replacer/./node_modules/yamljs/lib/Parser.js","webpack://data-replacer/./node_modules/yamljs/lib/Pattern.js","webpack://data-replacer/./node_modules/yamljs/lib/Unescaper.js","webpack://data-replacer/./node_modules/yamljs/lib/Utils.js","webpack://data-replacer/./node_modules/yamljs/lib/Yaml.js","webpack://data-replacer/external commonjs \"vscode\"","webpack://data-replacer/external node-commonjs \"fs\"","webpack://data-replacer/webpack/bootstrap","webpack://data-replacer/./src/extension.ts"],"sourcesContent":["/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Location = require(\"./ast/location\");\nconst Position = require(\"./ast/position\");\n\n/**\n * ## Class hierarchy\n *\n * - [Location](#location)\n * - [Position](#position)\n * - [Node](#node)\n *   - [Noop](#noop)\n *   - [NullKeyword](#nullkeyword)\n *   - [StaticVariable](#staticvariable)\n *   - [EncapsedPart](#encapsedpart)\n *   - [Constant](#constant)\n *   - [Identifier](#identifier)\n *   - [Reference](#reference)\n *     - [TypeReference](#typereference)\n *     - [ParentReference](#parentreference)\n *     - [StaticReference](#staticreference)\n *     - [SelfReference](#selfreference)\n *     - [Name](#name)\n *   - [TraitUse](#traituse)\n *   - [TraitAlias](#traitalias)\n *   - [TraitPrecedence](#traitprecedence)\n *   - [Comment](#comment)\n *     - [CommentLine](#commentline)\n *     - [CommentBlock](#commentblock)\n *   - [Error](#error)\n *   - [Expression](#expression)\n *     - [Entry](#entry)\n *     - [ArrowFunc](#arrowfunc)\n *     - [Closure](#closure)\n *     - [ByRef](#byref)\n *     - [Silent](#silent)\n *     - [RetIf](#retif)\n *     - [New](#new)\n *     - [Include](#include)\n *     - [Call](#call)\n *     - [Eval](#eval)\n *     - [Exit](#exit)\n *     - [Clone](#clone)\n *     - [Assign](#assign)\n *     - [AssignRef](#assignref)\n *     - [Array](#array)\n *     - [List](#list)\n *     - [Variable](#variable)\n *     - [Variadic](#variadic)\n *     - [Yield](#yield)\n *     - [YieldFrom](#yieldfrom)\n *     - [Print](#print)\n *     - [Isset](#isset)\n *     - [Empty](#empty)\n *     - [Lookup](#lookup)\n *       - [PropertyLookup](#propertylookup)\n *       - [StaticLookup](#staticlookup)\n *       - [OffsetLookup](#offsetlookup)\n *     - [Operation](#operation)\n *       - [Pre](#pre)\n *       - [Post](#post)\n *       - [Bin](#bin)\n *       - [Unary](#unary)\n *       - [Cast](#cast)\n *     - [Literal](#literal)\n *       - [Boolean](#boolean)\n *       - [String](#string)\n *       - [Number](#number)\n *       - [Inline](#inline)\n *       - [Magic](#magic)\n *       - [Nowdoc](#nowdoc)\n *       - [Encapsed](#encapsed)\n *   - [Statement](#statement)\n *     - [ConstantStatement](#constantstatement)\n *       - [ClassConstant](#classconstant)\n *     - [Return](#return)\n *     - [Label](#label)\n *     - [Continue](#continue)\n *     - [Case](#case)\n *     - [Break](#break)\n *     - [Echo](#echo)\n *     - [Unset](#unset)\n *     - [Halt](#halt)\n *     - [Declare](#declare)\n *     - [Global](#global)\n *     - [Static](#static)\n *     - [If](#if)\n *     - [Do](#do)\n *     - [While](#while)\n *     - [For](#for)\n *     - [Foreach](#foreach)\n *     - [Switch](#switch)\n *     - [Goto](#goto)\n *     - [Try](#try)\n *     - [Catch](#catch)\n *     - [Throw](#throw)\n *     - [UseGroup](#usegroup)\n *     - [UseItem](#useitem)\n *     - [Block](#block)\n *       - [Program](#program)\n *       - [Namespace](#namespace)\n *     - [PropertyStatement](#propertystatement)\n *     - [Property](#property)\n *     - [Declaration](#declaration)\n *       - [Class](#class)\n *       - [Interface](#interface)\n *       - [Trait](#trait)\n *       - [Function](#function)\n *         - [Method](#method)\n *       - [Parameter](#parameter)\n * ---\n */\n\n/**\n * The AST builder class\n * @constructor AST\n * @memberOf module:php-parser\n * @tutorial AST\n * @property {Boolean} withPositions - Should locate any node (by default false)\n * @property {Boolean} withSource - Should extract the node original code (by default false)\n */\nconst AST = function (withPositions, withSource) {\n  this.withPositions = withPositions;\n  this.withSource = withSource;\n};\n\n/**\n * Create a position node from specified parser\n * including it's lexer current state\n * @private\n * @function AST#position\n * @memberOf module:php-parser\n * @param {Parser} parser\n * @return {Position}\n */\nAST.prototype.position = function (parser) {\n  return new Position(\n    parser.lexer.yylloc.first_line,\n    parser.lexer.yylloc.first_column,\n    parser.lexer.yylloc.first_offset\n  );\n};\n\n// operators in ascending order of precedence\nAST.precedence = {};\n[\n  [\"or\"],\n  [\"xor\"],\n  [\"and\"],\n  [\"=\"],\n  [\"?\"],\n  [\"??\"],\n  [\"||\"],\n  [\"&&\"],\n  [\"|\"],\n  [\"^\"],\n  [\"&\"],\n  [\"==\", \"!=\", \"===\", \"!==\", /* '<>', */ \"<=>\"],\n  [\"<\", \"<=\", \">\", \">=\"],\n  [\"<<\", \">>\"],\n  [\"+\", \"-\", \".\"],\n  [\"*\", \"/\", \"%\"],\n  [\"!\"],\n  [\"instanceof\"],\n  [\"cast\", \"silent\"],\n  [\"**\"],\n  // TODO: [ (array)\n  // TODO: clone, new\n].forEach(function (list, index) {\n  list.forEach(function (operator) {\n    AST.precedence[operator] = index + 1;\n  });\n});\n\n/**\n * @private\n * @function AST#isRightAssociative\n * @memberOf module:php-parser\n * @param operator\n * @return {boolean}\n */\nAST.prototype.isRightAssociative = function (operator) {\n  return operator === \"**\" || operator === \"??\";\n};\n\n/**\n * Change parent node informations after swapping childs\n * @private\n * @function AST#swapLocations\n * @memberOf module:php-parser\n */\nAST.prototype.swapLocations = function (target, first, last, parser) {\n  if (this.withPositions) {\n    target.loc.start = first.loc.start;\n    target.loc.end = last.loc.end;\n    if (this.withSource) {\n      target.loc.source = parser.lexer._input.substring(\n        target.loc.start.offset,\n        target.loc.end.offset\n      );\n    }\n  }\n};\n\n/**\n * Includes locations from first & last into the target\n * @private\n * @function AST#resolveLocations\n * @memberOf module:php-parser\n */\nAST.prototype.resolveLocations = function (target, first, last, parser) {\n  if (this.withPositions) {\n    if (target.loc.start.offset > first.loc.start.offset) {\n      target.loc.start = first.loc.start;\n    }\n    if (target.loc.end.offset < last.loc.end.offset) {\n      target.loc.end = last.loc.end;\n    }\n    if (this.withSource) {\n      target.loc.source = parser.lexer._input.substring(\n        target.loc.start.offset,\n        target.loc.end.offset\n      );\n    }\n  }\n};\n\n/**\n * Check and fix precence, by default using right\n * @private\n * @function AST#resolvePrecedence\n * @memberOf module:php-parser\n */\nAST.prototype.resolvePrecedence = function (result, parser) {\n  let buffer, lLevel, rLevel;\n  // handling precendence\n  if (result.kind === \"call\") {\n    // including what argument into location\n    this.resolveLocations(result, result.what, result, parser);\n  } else if (\n    result.kind === \"propertylookup\" ||\n    result.kind === \"staticlookup\" ||\n    (result.kind === \"offsetlookup\" && result.offset)\n  ) {\n    // including what argument into location\n    this.resolveLocations(result, result.what, result.offset, parser);\n  } else if (result.kind === \"bin\") {\n    if (result.right && !result.right.parenthesizedExpression) {\n      if (result.right.kind === \"bin\") {\n        lLevel = AST.precedence[result.type];\n        rLevel = AST.precedence[result.right.type];\n        if (\n          lLevel &&\n          rLevel &&\n          rLevel <= lLevel &&\n          (result.type !== result.right.type ||\n            !this.isRightAssociative(result.type))\n        ) {\n          // https://github.com/glayzzle/php-parser/issues/79\n          // shift precedence\n          buffer = result.right;\n          result.right = result.right.left;\n          this.swapLocations(result, result.left, result.right, parser);\n          buffer.left = this.resolvePrecedence(result, parser);\n          this.swapLocations(buffer, buffer.left, buffer.right, parser);\n          result = buffer;\n        }\n      } else if (result.right.kind === \"retif\") {\n        lLevel = AST.precedence[result.type];\n        rLevel = AST.precedence[\"?\"];\n        if (lLevel && rLevel && rLevel <= lLevel) {\n          buffer = result.right;\n          result.right = result.right.test;\n          this.swapLocations(result, result.left, result.right, parser);\n          buffer.test = this.resolvePrecedence(result, parser);\n          this.swapLocations(buffer, buffer.test, buffer.falseExpr, parser);\n          result = buffer;\n        }\n      }\n    }\n  } else if (\n    (result.kind === \"silent\" || result.kind === \"cast\") &&\n    result.expr &&\n    !result.expr.parenthesizedExpression\n  ) {\n    // https://github.com/glayzzle/php-parser/issues/172\n    if (result.expr.kind === \"bin\") {\n      buffer = result.expr;\n      result.expr = result.expr.left;\n      this.swapLocations(result, result, result.expr, parser);\n      buffer.left = this.resolvePrecedence(result, parser);\n      this.swapLocations(buffer, buffer.left, buffer.right, parser);\n      result = buffer;\n    } else if (result.expr.kind === \"retif\") {\n      buffer = result.expr;\n      result.expr = result.expr.test;\n      this.swapLocations(result, result, result.expr, parser);\n      buffer.test = this.resolvePrecedence(result, parser);\n      this.swapLocations(buffer, buffer.test, buffer.falseExpr, parser);\n      result = buffer;\n    }\n  } else if (result.kind === \"unary\") {\n    // https://github.com/glayzzle/php-parser/issues/75\n    if (result.what && !result.what.parenthesizedExpression) {\n      // unary precedence is allways lower\n      if (result.what.kind === \"bin\") {\n        buffer = result.what;\n        result.what = result.what.left;\n        this.swapLocations(result, result, result.what, parser);\n        buffer.left = this.resolvePrecedence(result, parser);\n        this.swapLocations(buffer, buffer.left, buffer.right, parser);\n        result = buffer;\n      } else if (result.what.kind === \"retif\") {\n        buffer = result.what;\n        result.what = result.what.test;\n        this.swapLocations(result, result, result.what, parser);\n        buffer.test = this.resolvePrecedence(result, parser);\n        this.swapLocations(buffer, buffer.test, buffer.falseExpr, parser);\n        result = buffer;\n      }\n    }\n  } else if (result.kind === \"retif\") {\n    // https://github.com/glayzzle/php-parser/issues/77\n    if (\n      result.falseExpr &&\n      result.falseExpr.kind === \"retif\" &&\n      !result.falseExpr.parenthesizedExpression\n    ) {\n      buffer = result.falseExpr;\n      result.falseExpr = buffer.test;\n      this.swapLocations(result, result.test, result.falseExpr, parser);\n      buffer.test = this.resolvePrecedence(result, parser);\n      this.swapLocations(buffer, buffer.test, buffer.falseExpr, parser);\n      result = buffer;\n    }\n  } else if (result.kind === \"assign\") {\n    // https://github.com/glayzzle/php-parser/issues/81\n    if (\n      result.right &&\n      result.right.kind === \"bin\" &&\n      !result.right.parenthesizedExpression\n    ) {\n      lLevel = AST.precedence[\"=\"];\n      rLevel = AST.precedence[result.right.type];\n      // only shifts with and, xor, or\n      if (lLevel && rLevel && rLevel < lLevel) {\n        buffer = result.right;\n        result.right = result.right.left;\n        buffer.left = result;\n        this.swapLocations(buffer, buffer.left, result.right, parser);\n        result = buffer;\n      }\n    }\n  } else if (result.kind === \"expressionstatement\") {\n    this.swapLocations(result, result.expression, result, parser);\n  }\n  return result;\n};\n\n/**\n * Prepares an AST node\n * @private\n * @function AST#prepare\n * @memberOf module:php-parser\n * @param {String|null} kind - Defines the node type\n * @param {*} docs - (if null, the kind must be passed at the function call)\n * @param {Parser} parser - The parser instance (use for extracting locations)\n * @return {Function}\n */\nAST.prototype.prepare = function (kind, docs, parser) {\n  let start = null;\n  if (this.withPositions || this.withSource) {\n    start = this.position(parser);\n  }\n  const self = this;\n  // returns the node\n  const result = function () {\n    let location = null;\n    const args = Array.prototype.slice.call(arguments);\n    args.push(docs);\n    if (self.withPositions || self.withSource) {\n      let src = null;\n      if (self.withSource) {\n        src = parser.lexer._input.substring(start.offset, parser.prev[2]);\n      }\n      // if with source, need location on swapLocations function\n      location = new Location(\n        src,\n        start,\n        new Position(parser.prev[0], parser.prev[1], parser.prev[2])\n      );\n      // last argument is allways the location\n      args.push(location);\n    }\n    // handle lazy kind definitions\n    if (!kind) {\n      kind = args.shift();\n    }\n    // build the object\n    const node = self[kind];\n    if (typeof node !== \"function\") {\n      throw new Error('Undefined node \"' + kind + '\"');\n    }\n    const astNode = Object.create(node.prototype);\n    node.apply(astNode, args);\n    result.instance = astNode;\n    if (result.trailingComments) {\n      // buffer of trailingComments\n      astNode.trailingComments = result.trailingComments;\n    }\n    if (typeof result.postBuild === \"function\") {\n      result.postBuild(astNode);\n    }\n    if (parser.debug) {\n      delete AST.stack[result.stackUid];\n    }\n    return self.resolvePrecedence(astNode, parser);\n  };\n  if (parser.debug) {\n    if (!AST.stack) {\n      AST.stack = {};\n      AST.stackUid = 1;\n    }\n    AST.stack[++AST.stackUid] = {\n      position: start,\n      stack: new Error().stack.split(\"\\n\").slice(3, 5),\n    };\n    result.stackUid = AST.stackUid;\n  }\n\n  /**\n   * Sets a list of trailing comments\n   * @private\n   * @param {*} docs\n   */\n  result.setTrailingComments = function (docs) {\n    if (result.instance) {\n      // already created\n      result.instance.setTrailingComments(docs);\n    } else {\n      result.trailingComments = docs;\n    }\n  };\n\n  /**\n   * Release a node without using it on the AST\n   * @private\n   * @param {*} target\n   */\n  result.destroy = function (target) {\n    if (docs) {\n      // release current docs stack\n      if (target) {\n        if (!target.leadingComments) {\n          target.leadingComments = docs;\n        } else {\n          target.leadingComments = docs.concat(target.leadingComments);\n        }\n      } else {\n        parser._docIndex = parser._docs.length - docs.length;\n      }\n    }\n    if (parser.debug) {\n      delete AST.stack[result.stackUid];\n    }\n  };\n  return result;\n};\n\nAST.prototype.checkNodes = function () {\n  const errors = [];\n  for (const k in AST.stack) {\n    if (AST.stack.hasOwnProperty(k)) {\n      errors.push(AST.stack[k]);\n    }\n  }\n  AST.stack = {};\n  return errors;\n};\n\n// Define all AST nodes\n[\n  require(\"./ast/array\"),\n  require(\"./ast/arrowfunc\"),\n  require(\"./ast/assign\"),\n  require(\"./ast/assignref\"),\n  require(\"./ast/bin\"),\n  require(\"./ast/block\"),\n  require(\"./ast/boolean\"),\n  require(\"./ast/break\"),\n  require(\"./ast/byref\"),\n  require(\"./ast/call\"),\n  require(\"./ast/case\"),\n  require(\"./ast/cast\"),\n  require(\"./ast/catch\"),\n  require(\"./ast/class\"),\n  require(\"./ast/classconstant\"),\n  require(\"./ast/clone\"),\n  require(\"./ast/closure\"),\n  require(\"./ast/comment\"),\n  require(\"./ast/commentblock\"),\n  require(\"./ast/commentline\"),\n  require(\"./ast/constant\"),\n  require(\"./ast/constantstatement\"),\n  require(\"./ast/continue\"),\n  require(\"./ast/declaration\"),\n  require(\"./ast/declare\"),\n  require(\"./ast/declaredirective\"),\n  require(\"./ast/do\"),\n  require(\"./ast/echo\"),\n  require(\"./ast/empty\"),\n  require(\"./ast/encapsed\"),\n  require(\"./ast/encapsedpart\"),\n  require(\"./ast/entry\"),\n  require(\"./ast/error\"),\n  require(\"./ast/eval\"),\n  require(\"./ast/exit\"),\n  require(\"./ast/expression\"),\n  require(\"./ast/expressionstatement\"),\n  require(\"./ast/for\"),\n  require(\"./ast/foreach\"),\n  require(\"./ast/function\"),\n  require(\"./ast/global\"),\n  require(\"./ast/goto\"),\n  require(\"./ast/halt\"),\n  require(\"./ast/identifier\"),\n  require(\"./ast/if\"),\n  require(\"./ast/include\"),\n  require(\"./ast/inline\"),\n  require(\"./ast/interface\"),\n  require(\"./ast/isset\"),\n  require(\"./ast/label\"),\n  require(\"./ast/list\"),\n  require(\"./ast/literal\"),\n  require(\"./ast/lookup\"),\n  require(\"./ast/magic\"),\n  require(\"./ast/method\"),\n  require(\"./ast/name\"),\n  require(\"./ast/namespace\"),\n  require(\"./ast/new\"),\n  require(\"./ast/node\"),\n  require(\"./ast/noop\"),\n  require(\"./ast/nowdoc\"),\n  require(\"./ast/nullkeyword\"),\n  require(\"./ast/number\"),\n  require(\"./ast/offsetlookup\"),\n  require(\"./ast/operation\"),\n  require(\"./ast/parameter\"),\n  require(\"./ast/parentreference\"),\n  require(\"./ast/post\"),\n  require(\"./ast/pre\"),\n  require(\"./ast/print\"),\n  require(\"./ast/program\"),\n  require(\"./ast/property\"),\n  require(\"./ast/propertylookup\"),\n  require(\"./ast/propertystatement\"),\n  require(\"./ast/reference\"),\n  require(\"./ast/retif\"),\n  require(\"./ast/return\"),\n  require(\"./ast/selfreference\"),\n  require(\"./ast/silent\"),\n  require(\"./ast/statement\"),\n  require(\"./ast/static\"),\n  require(\"./ast/staticvariable\"),\n  require(\"./ast/staticlookup\"),\n  require(\"./ast/staticreference\"),\n  require(\"./ast/string\"),\n  require(\"./ast/switch\"),\n  require(\"./ast/throw\"),\n  require(\"./ast/trait\"),\n  require(\"./ast/traitalias\"),\n  require(\"./ast/traitprecedence\"),\n  require(\"./ast/traituse\"),\n  require(\"./ast/try\"),\n  require(\"./ast/typereference\"),\n  require(\"./ast/unary\"),\n  require(\"./ast/unset\"),\n  require(\"./ast/usegroup\"),\n  require(\"./ast/useitem\"),\n  require(\"./ast/variable\"),\n  require(\"./ast/variadic\"),\n  require(\"./ast/while\"),\n  require(\"./ast/yield\"),\n  require(\"./ast/yieldfrom\"),\n].forEach(function (ctor) {\n  AST.prototype[ctor.kind] = ctor;\n});\n\nmodule.exports = AST;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expr = require(\"./expression\");\nconst KIND = \"array\";\n\n/**\n * Defines an array structure\n * @constructor Array\n * @memberOf module:php-parser\n * @example\n * // PHP code :\n * [1, 'foo' => 'bar', 3]\n *\n * // AST structure :\n * {\n *  \"kind\": \"array\",\n *  \"shortForm\": true\n *  \"items\": [\n *    {\"kind\": \"number\", \"value\": \"1\"},\n *    {\n *      \"kind\": \"entry\",\n *      \"key\": {\"kind\": \"string\", \"value\": \"foo\", \"isDoubleQuote\": false},\n *      \"value\": {\"kind\": \"string\", \"value\": \"bar\", \"isDoubleQuote\": false}\n *    },\n *    {\"kind\": \"number\", \"value\": \"3\"}\n *  ]\n * }\n * @extends {Expression}\n * @property {Entry|Expression|Variable} items List of array items\n * @property {boolean} shortForm Indicate if the short array syntax is used, ex `[]` instead `array()`\n */\nmodule.exports = Expr.extends(\n  KIND,\n  function Array(shortForm, items, docs, location) {\n    Expr.apply(this, [KIND, docs, location]);\n    this.items = items;\n    this.shortForm = shortForm;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"arrowfunc\";\n\n/**\n * Defines an arrow function (it's like a closure)\n * @constructor ArrowFunc\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Parameter[]} arguments\n * @property {Identifier} type\n * @property {Expression} body\n * @property {boolean} byref\n * @property {boolean} nullable\n * @property {boolean} isStatic\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Closure(\n    args,\n    byref,\n    body,\n    type,\n    nullable,\n    isStatic,\n    docs,\n    location\n  ) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.arguments = args;\n    this.byref = byref;\n    this.body = body;\n    this.type = type;\n    this.nullable = nullable;\n    this.isStatic = isStatic || false;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"assign\";\n\n/**\n * Assigns a value to the specified target\n * @constructor Assign\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Expression} left\n * @property {Expression} right\n * @property {String} operator\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Assign(left, right, operator, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.left = left;\n    this.right = right;\n    this.operator = operator;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"assignref\";\n\n/**\n * Assigns a value to the specified target\n * @constructor AssignRef\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Expression} left\n * @property {Expression} right\n * @property {String} operator\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function AssignRef(left, right, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.left = left;\n    this.right = right;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Operation = require(\"./operation\");\nconst KIND = \"bin\";\n/**\n * Binary operations\n * @constructor Bin\n * @memberOf module:php-parser\n * @extends {Operation}\n * @property {String} type\n * @property {Expression} left\n * @property {Expression} right\n */\nmodule.exports = Operation.extends(\n  KIND,\n  function Bin(type, left, right, docs, location) {\n    Operation.apply(this, [KIND, docs, location]);\n    this.type = type;\n    this.left = left;\n    this.right = right;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"block\";\n\n/**\n * A block statement, i.e., a sequence of statements surrounded by braces.\n * @constructor Block\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Node[]} children\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function Block(kind, children, docs, location) {\n    Statement.apply(this, [kind || KIND, docs, location]);\n    this.children = children.filter(Boolean);\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Literal = require(\"./literal\");\nconst KIND = \"boolean\";\n\n/**\n * Defines a boolean value (true/false)\n * @constructor Boolean\n * @memberOf module:php-parser\n * @extends {Literal}\n */\nmodule.exports = Literal.extends(\n  KIND,\n  function Boolean(value, raw, docs, location) {\n    Literal.apply(this, [KIND, value, raw, docs, location]);\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"break\";\n\n/**\n * A break statement\n * @constructor Break\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Number|Null} level\n */\nmodule.exports = Statement.extends(KIND, function Break(level, docs, location) {\n  Statement.apply(this, [KIND, docs, location]);\n  this.level = level;\n});\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"byref\";\n\n/**\n * Passing by Reference - so the function can modify the variable\n * @constructor ByRef\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {ExpressionStatement} what\n */\nmodule.exports = Expression.extends(KIND, function ByRef(what, docs, location) {\n  Expression.apply(this, [KIND, docs, location]);\n  this.what = what;\n});\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"call\";\n\n/**\n * Executes a call statement\n * @constructor Call\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Identifier|Variable} what\n * @property {Variable[]} arguments\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Call(what, args, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.what = what;\n    this.arguments = args;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"case\";\n\n/**\n * A switch case statement\n * @constructor Case\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Expression|null} test - if null, means that the default case\n * @property {Block|null} body\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function Case(test, body, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.test = test;\n    this.body = body;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Operation = require(\"./operation\");\nconst KIND = \"cast\";\n\n/**\n * Binary operations\n * @constructor Cast\n * @memberOf module:php-parser\n * @extends {Operation}\n * @property {String} type\n * @property {String} raw\n * @property {Expression} expr\n */\nmodule.exports = Operation.extends(\n  KIND,\n  function Cast(type, raw, expr, docs, location) {\n    Operation.apply(this, [KIND, docs, location]);\n    this.type = type;\n    this.raw = raw;\n    this.expr = expr;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"catch\";\n\n/**\n * Defines a catch statement\n * @constructor Catch\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Identifier[]} what\n * @property {Variable} variable\n * @property {Statement} body\n * @see http://php.net/manual/en/language.exceptions.php\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function Catch(body, what, variable, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.body = body;\n    this.what = what;\n    this.variable = variable;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Declaration = require(\"./declaration\");\nconst KIND = \"class\";\n\n/**\n * A class definition\n * @constructor Class\n * @memberOf module:php-parser\n * @extends {Declaration}\n * @property {Identifier|null} extends\n * @property {Identifier[]} implements\n * @property {Declaration[]} body\n * @property {boolean} isAnonymous\n * @property {boolean} isAbstract\n * @property {boolean} isFinal\n */\nmodule.exports = Declaration.extends(\n  KIND,\n  function Class(name, ext, impl, body, flags, docs, location) {\n    Declaration.apply(this, [KIND, name, docs, location]);\n    this.isAnonymous = name ? false : true;\n    this.extends = ext;\n    this.implements = impl;\n    this.body = body;\n    this.parseFlags(flags);\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst ConstantStatement = require(\"./constantstatement\");\nconst KIND = \"classconstant\";\n\nconst IS_UNDEFINED = \"\";\nconst IS_PUBLIC = \"public\";\nconst IS_PROTECTED = \"protected\";\nconst IS_PRIVATE = \"private\";\n\n/**\n * Defines a class/interface/trait constant\n * @constructor ClassConstant\n * @memberOf module:php-parser\n * @extends {ConstantStatement}\n * @property {string} visibility\n */\nconst ClassConstant = ConstantStatement.extends(\n  KIND,\n  function ClassConstant(kind, constants, flags, docs, location) {\n    ConstantStatement.apply(this, [kind || KIND, constants, docs, location]);\n    this.parseFlags(flags);\n  }\n);\n\n/**\n * Generic flags parser\n * @function\n * @name ClassConstant#parseFlags\n * @memberOf module:php-parser\n * @param {Array<number|null>} flags\n * @return {void}\n */\nClassConstant.prototype.parseFlags = function (flags) {\n  if (flags[0] === -1) {\n    this.visibility = IS_UNDEFINED;\n  } else if (flags[0] === null) {\n    this.visibility = null;\n  } else if (flags[0] === 0) {\n    this.visibility = IS_PUBLIC;\n  } else if (flags[0] === 1) {\n    this.visibility = IS_PROTECTED;\n  } else if (flags[0] === 2) {\n    this.visibility = IS_PRIVATE;\n  }\n};\n\nmodule.exports = ClassConstant;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"clone\";\n\n/**\n * Defines a clone call\n * @constructor Clone\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Expression} what\n */\nmodule.exports = Expression.extends(KIND, function Clone(what, docs, location) {\n  Expression.apply(this, [KIND, docs, location]);\n  this.what = what;\n});\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"closure\";\n\n/**\n * Defines a closure\n * @constructor Closure\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Parameter[]} arguments\n * @property {Variable[]} uses\n * @property {Identifier} type\n * @property {Boolean} byref\n * @property {boolean} nullable\n * @property {Block|null} body\n * @property {boolean} isStatic\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Closure(\n    args,\n    byref,\n    uses,\n    type,\n    nullable,\n    isStatic,\n    docs,\n    location\n  ) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.uses = uses;\n    this.arguments = args;\n    this.byref = byref;\n    this.type = type;\n    this.nullable = nullable;\n    this.isStatic = isStatic || false;\n    this.body = null;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Node = require(\"./node\");\n\n/**\n * Abstract documentation node (ComentLine or CommentBlock)\n * @constructor Comment\n * @memberOf module:php-parser\n * @extends {Node}\n * @property {String} value\n */\nmodule.exports = Node.extends(\n  \"comment\",\n  function Comment(kind, value, docs, location) {\n    Node.apply(this, [kind, docs, location]);\n    this.value = value;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Comment = require(\"./comment\");\nconst KIND = \"commentblock\";\n\n/**\n * A comment block (multiline)\n * @constructor CommentBlock\n * @memberOf module:php-parser\n * @extends {Comment}\n */\nmodule.exports = Comment.extends(\n  KIND,\n  function CommentBlock(value, docs, location) {\n    Comment.apply(this, [KIND, value, docs, location]);\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Comment = require(\"./comment\");\nconst KIND = \"commentline\";\n\n/**\n * A single line comment\n * @constructor CommentLine\n * @memberOf module:php-parser\n * @extends {Comment}\n */\nmodule.exports = Comment.extends(\n  KIND,\n  function CommentLine(value, docs, location) {\n    Comment.apply(this, [KIND, value, docs, location]);\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Node = require(\"./node\");\nconst KIND = \"constant\";\n\n/**\n * Defines a constant\n * @constructor Constant\n * @memberOf module:php-parser\n * @extends {Node}\n * @property {string} name\n * @property {Node|string|number|boolean|null} value\n */\nmodule.exports = Node.extends(\n  KIND,\n  function Constant(name, value, docs, location) {\n    Node.apply(this, [KIND, docs, location]);\n    this.name = name;\n    this.value = value;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"constantstatement\";\n\n/**\n * Declares a constants into the current scope\n * @constructor ConstantStatement\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Constant[]} constants\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function ConstantStatement(kind, constants, docs, location) {\n    Statement.apply(this, [kind || KIND, docs, location]);\n    this.constants = constants;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"continue\";\n\n/**\n * A continue statement\n * @constructor Continue\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {number|null} level\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function Continue(level, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.level = level;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"declaration\";\n\nconst IS_UNDEFINED = \"\";\nconst IS_PUBLIC = \"public\";\nconst IS_PROTECTED = \"protected\";\nconst IS_PRIVATE = \"private\";\n\n/**\n * A declaration statement (function, class, interface...)\n * @constructor Declaration\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Identifier|string} name\n */\nconst Declaration = Statement.extends(\n  KIND,\n  function Declaration(kind, name, docs, location) {\n    Statement.apply(this, [kind || KIND, docs, location]);\n    this.name = name;\n  }\n);\n\n/**\n * Generic flags parser\n * @function\n * @name Declaration#parseFlags\n * @memberOf module:php-parser\n * @param {Array<number|null>} flags\n * @return {void}\n */\nDeclaration.prototype.parseFlags = function (flags) {\n  this.isAbstract = flags[2] === 1;\n  this.isFinal = flags[2] === 2;\n  if (this.kind !== \"class\") {\n    if (flags[0] === -1) {\n      this.visibility = IS_UNDEFINED;\n    } else if (flags[0] === null) {\n      this.visibility = null;\n    } else if (flags[0] === 0) {\n      this.visibility = IS_PUBLIC;\n    } else if (flags[0] === 1) {\n      this.visibility = IS_PROTECTED;\n    } else if (flags[0] === 2) {\n      this.visibility = IS_PRIVATE;\n    }\n    this.isStatic = flags[1] === 1;\n  }\n};\n\nmodule.exports = Declaration;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Block = require(\"./block\");\nconst KIND = \"declare\";\n\n/**\n * The declare construct is used to set execution directives for a block of code\n * @constructor Declare\n * @memberOf module:php-parser\n * @extends {Block}\n * @property {Array[]} directives\n * @property {String} mode\n * @see http://php.net/manual/en/control-structures.declare.php\n */\nconst Declare = Block.extends(\n  KIND,\n  function Declare(directives, body, mode, docs, location) {\n    Block.apply(this, [KIND, body, docs, location]);\n    this.directives = directives;\n    this.mode = mode;\n  }\n);\n\n/**\n * The node is declared as a short tag syntax :\n * ```php\n * <?php\n * declare(ticks=1):\n * // some statements\n * enddeclare;\n * ```\n * @constant {String} Declare#MODE_SHORT\n * @memberOf module:php-parser\n */\nDeclare.MODE_SHORT = \"short\";\n\n/**\n * The node is declared bracket enclosed code :\n * ```php\n * <?php\n * declare(ticks=1) {\n * // some statements\n * }\n * ```\n * @constant {String} Declare#MODE_BLOCK\n * @memberOf module:php-parser\n */\nDeclare.MODE_BLOCK = \"block\";\n\n/**\n * The node is declared as a simple statement. In order to make things simpler\n * children of the node are automatically collected until the next\n * declare statement.\n * ```php\n * <?php\n * declare(ticks=1);\n * // some statements\n * declare(ticks=2);\n * // some statements\n * ```\n * @constant {String} Declare#MODE_NONE\n * @memberOf module:php-parser\n */\nDeclare.MODE_NONE = \"none\";\n\nmodule.exports = Declare;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Node = require(\"./node\");\nconst KIND = \"declaredirective\";\n\n/**\n * Defines a constant\n * @constructor DeclareDirective\n * @memberOf module:php-parser\n * @extends {Node}\n * @property {Identifier} name\n * @property {Node|string|number|boolean|null} value\n */\nmodule.exports = Node.extends(\n  KIND,\n  function DeclareDirective(key, value, docs, location) {\n    Node.apply(this, [KIND, docs, location]);\n    this.key = key;\n    this.value = value;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"do\";\n\n/**\n * Defines a do/while statement\n * @constructor Do\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Expression} test\n * @property {Statement} body\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function Do(test, body, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.test = test;\n    this.body = body;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"echo\";\n\n/**\n * Defines system based call\n * @constructor Echo\n * @memberOf module:php-parser\n * @property {boolean} shortForm\n * @extends {Statement}\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function Echo(expressions, shortForm, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.shortForm = shortForm;\n    this.expressions = expressions;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"empty\";\n\n/**\n * Defines an empty check call\n * @constructor Empty\n * @memberOf module:php-parser\n * @extends {Expression}\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Empty(expression, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.expression = expression;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Literal = require(\"./literal\");\nconst KIND = \"encapsed\";\n\n/**\n * Defines an encapsed string (contains expressions)\n * @constructor Encapsed\n * @memberOf module:php-parser\n * @extends {Literal}\n * @property {String} type - Defines the type of encapsed string (shell, heredoc, string)\n * @property {String|Null} label - The heredoc label, defined only when the type is heredoc\n */\nconst Encapsed = Literal.extends(\n  KIND,\n  function Encapsed(value, raw, type, docs, location) {\n    Literal.apply(this, [KIND, value, raw, docs, location]);\n    this.type = type;\n  }\n);\n\n/**\n * The node is a double quote string :\n * ```php\n * <?php\n * echo \"hello $world\";\n * ```\n * @constant {String} Encapsed#TYPE_STRING - `string`\n * @memberOf module:php-parser\n */\nEncapsed.TYPE_STRING = \"string\";\n\n/**\n * The node is a shell execute string :\n * ```php\n * <?php\n * echo `ls -larth $path`;\n * ```\n * @constant {String} Encapsed#TYPE_SHELL - `shell`\n * @memberOf module:php-parser\n */\nEncapsed.TYPE_SHELL = \"shell\";\n\n/**\n * The node is a shell execute string :\n * ```php\n * <?php\n * echo <<<STR\n *  Hello $world\n * STR\n * ;\n * ```\n * @constant {String} Encapsed#TYPE_HEREDOC - `heredoc`\n * @memberOf module:php-parser\n */\nEncapsed.TYPE_HEREDOC = \"heredoc\";\n\n/**\n * The node contains a list of constref / variables / expr :\n * ```php\n * <?php\n * echo $foo->bar_$baz;\n * ```\n * @constant {String} Encapsed#TYPE_OFFSET - `offset`\n * @memberOf module:php-parser\n */\nEncapsed.TYPE_OFFSET = \"offset\";\n\nmodule.exports = Encapsed;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"encapsedpart\";\n\n/**\n * Part of `Encapsed` node\n * @constructor EncapsedPart\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Expression} expression\n * @property {String} syntax\n * @property {Boolean} curly\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function EncapsedPart(expression, syntax, curly, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.expression = expression;\n    this.syntax = syntax;\n    this.curly = curly;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"entry\";\n\n/**\n * An array entry - see [Array](#array)\n * @constructor Entry\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Node|null} key The entry key/offset\n * @property {Node} value The entry value\n * @property {Boolean} byRef By reference\n * @property {Boolean} unpack Argument unpacking\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Entry(key, value, byRef, unpack, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.key = key;\n    this.value = value;\n    this.byRef = byRef;\n    this.unpack = unpack;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Node = require(\"./node\");\nconst KIND = \"error\";\n\n/**\n * Defines an error node (used only on silentMode)\n * @constructor Error\n * @memberOf module:php-parser\n * @extends {Node}\n * @property {string} message\n * @property {number} line\n * @property {number|string} token\n * @property {string|array} expected\n */\nmodule.exports = Node.extends(\n  KIND,\n  function Error(message, token, line, expected, docs, location) {\n    Node.apply(this, [KIND, docs, location]);\n    this.message = message;\n    this.token = token;\n    this.line = line;\n    this.expected = expected;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"eval\";\n\n/**\n * Defines an eval statement\n * @constructor Eval\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Node} source\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Eval(source, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.source = source;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"exit\";\n\n/**\n * Defines an exit / die call\n * @constructor Exit\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Node|null} expression\n * @property {boolean} useDie\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Exit(expression, useDie, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.expression = expression;\n    this.useDie = useDie;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Node = require(\"./node\");\nconst KIND = \"expression\";\n\n/**\n * Any expression node. Since the left-hand side of an assignment may\n * be any expression in general, an expression can also be a pattern.\n * @constructor Expression\n * @memberOf module:php-parser\n * @extends {Node}\n */\nmodule.exports = Node.extends(KIND, function Expression(kind, docs, location) {\n  Node.apply(this, [kind || KIND, docs, location]);\n});\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"expressionstatement\";\n\n/**\n * Defines an expression based statement\n * @constructor ExpressionStatement\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Expression} expression\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function ExpressionStatement(expr, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.expression = expr;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"for\";\n\n/**\n * Defines a for iterator\n * @constructor For\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Expression[]} init\n * @property {Expression[]} test\n * @property {Expression[]} increment\n * @property {Statement} body\n * @property {boolean} shortForm\n * @see http://php.net/manual/en/control-structures.for.php\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function For(init, test, increment, body, shortForm, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.init = init;\n    this.test = test;\n    this.increment = increment;\n    this.shortForm = shortForm;\n    this.body = body;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"foreach\";\n\n/**\n * Defines a foreach iterator\n * @constructor Foreach\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Expression} source\n * @property {Expression|null} key\n * @property {Expression} value\n * @property {Statement} body\n * @property {boolean} shortForm\n * @see http://php.net/manual/en/control-structures.foreach.php\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function Foreach(source, key, value, body, shortForm, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.source = source;\n    this.key = key;\n    this.value = value;\n    this.shortForm = shortForm;\n    this.body = body;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Declaration = require(\"./declaration\");\nconst KIND = \"function\";\n\n/**\n * Defines a classic function\n * @constructor Function\n * @memberOf module:php-parser\n * @extends {Declaration}\n * @property {Parameter[]} arguments\n * @property {Identifier} type\n * @property {boolean} byref\n * @property {boolean} nullable\n * @property {Block|null} body\n */\nmodule.exports = Declaration.extends(\n  KIND,\n  function _Function(name, args, byref, type, nullable, docs, location) {\n    Declaration.apply(this, [KIND, name, docs, location]);\n    this.arguments = args;\n    this.byref = byref;\n    this.type = type;\n    this.nullable = nullable;\n    this.body = null;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"global\";\n\n/**\n * Imports a variable from the global scope\n * @constructor Global\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Variable[]} items\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function Global(items, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.items = items;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"goto\";\n\n/**\n * Defines goto statement\n * @constructor Goto\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {string} label\n * @see {Label}\n */\nmodule.exports = Statement.extends(KIND, function Goto(label, docs, location) {\n  Statement.apply(this, [KIND, docs, location]);\n  this.label = label;\n});\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"halt\";\n\n/**\n * Halts the compiler execution\n * @constructor Halt\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {String} after - String after the halt statement\n * @see http://php.net/manual/en/function.halt-compiler.php\n */\nmodule.exports = Statement.extends(KIND, function Halt(after, docs, location) {\n  Statement.apply(this, [KIND, docs, location]);\n  this.after = after;\n});\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Node = require(\"./node\");\nconst KIND = \"identifier\";\n\n/**\n * Defines an identifier node\n * @constructor Identifier\n * @memberOf module:php-parser\n * @extends {Node}\n * @property {string} name\n */\nconst Identifier = Node.extends(\n  KIND,\n  function Identifier(name, docs, location) {\n    Node.apply(this, [KIND, docs, location]);\n    this.name = name;\n  }\n);\n\nmodule.exports = Identifier;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"if\";\n\n/**\n * Defines a if statement\n * @constructor If\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Expression} test\n * @property {Block} body\n * @property {Block|If|null} alternate\n * @property {boolean} shortForm\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function If(test, body, alternate, shortForm, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.test = test;\n    this.body = body;\n    this.alternate = alternate;\n    this.shortForm = shortForm;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"include\";\n\n/**\n * Defines system include call\n * @constructor Include\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Node} target\n * @property {boolean} once\n * @property {boolean} require\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Include(once, require, target, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.once = once;\n    this.require = require;\n    this.target = target;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Literal = require(\"./literal\");\nconst KIND = \"inline\";\n\n/**\n * Defines inline html output (treated as echo output)\n * @constructor Inline\n * @memberOf module:php-parser\n * @extends {Literal}\n */\nmodule.exports = Literal.extends(\n  KIND,\n  function Inline(value, raw, docs, location) {\n    Literal.apply(this, [KIND, value, raw, docs, location]);\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Declaration = require(\"./declaration\");\nconst KIND = \"interface\";\n\n/**\n * An interface definition\n * @constructor Interface\n * @memberOf module:php-parser\n * @extends {Declaration}\n * @property {Identifier[]} extends\n * @property {Declaration[]} body\n */\nmodule.exports = Declaration.extends(\n  KIND,\n  function Interface(name, ext, body, docs, location) {\n    Declaration.apply(this, [KIND, name, docs, location]);\n    this.extends = ext;\n    this.body = body;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"isset\";\n\n/**\n * Defines an isset call\n * @constructor Isset\n * @memberOf module:php-parser\n * @extends {Expression}\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Isset(variables, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.variables = variables;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"label\";\n\n/**\n * A label statement (referenced by goto)\n * @constructor Label\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {String} name\n */\nmodule.exports = Statement.extends(KIND, function Label(name, docs, location) {\n  Statement.apply(this, [KIND, docs, location]);\n  this.name = name;\n});\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"list\";\n\n/**\n * Defines list assignment\n * @constructor List\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {boolean} shortForm\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function List(items, shortForm, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.items = items;\n    this.shortForm = shortForm;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"literal\";\n\n/**\n * Defines an array structure\n * @constructor Literal\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {string} raw\n * @property {Node|string|number|boolean|null} value\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Literal(kind, value, raw, docs, location) {\n    Expression.apply(this, [kind || KIND, docs, location]);\n    this.value = value;\n    if (raw) {\n      this.raw = raw;\n    }\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\n/**\n * Defines the location of the node (with it's source contents as string)\n * @constructor Location\n * @memberOf module:php-parser\n * @property {string|null} source\n * @property {Position} start\n * @property {Position} end\n */\nconst Location = function (source, start, end) {\n  this.source = source;\n  this.start = start;\n  this.end = end;\n};\n\nmodule.exports = Location;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expr = require(\"./expression\");\nconst KIND = \"lookup\";\n\n/**\n * Lookup on an offset in the specified object\n * @constructor Lookup\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Expression} what\n * @property {Expression} offset\n */\nmodule.exports = Expr.extends(\n  KIND,\n  function Lookup(kind, what, offset, docs, location) {\n    Expr.apply(this, [kind || KIND, docs, location]);\n    this.what = what;\n    this.offset = offset;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Literal = require(\"./literal\");\nconst KIND = \"magic\";\n\n/**\n * Defines magic constant\n * @constructor Magic\n * @memberOf module:php-parser\n * @extends {Literal}\n */\nmodule.exports = Literal.extends(\n  KIND,\n  function Magic(value, raw, docs, location) {\n    Literal.apply(this, [KIND, value, raw, docs, location]);\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Function_ = require(\"./function\");\nconst KIND = \"method\";\n\n/**\n * Defines a class/interface/trait method\n * @constructor Method\n * @memberOf module:php-parser\n * @extends {Function}\n * @property {boolean} isAbstract\n * @property {boolean} isFinal\n * @property {boolean} isStatic\n * @property {string} visibility\n */\nmodule.exports = Function_.extends(KIND, function Method() {\n  Function_.apply(this, arguments);\n  this.kind = KIND;\n});\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Reference = require(\"./reference\");\nconst KIND = \"name\";\n\n/**\n * Defines a class reference node\n * @constructor Name\n * @memberOf module:php-parser\n * @extends {Reference}\n * @property {string} name\n * @property {string} resolution\n */\nconst Name = Reference.extends(\n  KIND,\n  function Name(name, isRelative, docs, location) {\n    Reference.apply(this, [KIND, docs, location]);\n    if (isRelative) {\n      this.resolution = Name.RELATIVE_NAME;\n    } else if (name.length === 1) {\n      this.resolution = Name.UNQUALIFIED_NAME;\n    } else if (!name[0]) {\n      this.resolution = Name.FULL_QUALIFIED_NAME;\n    } else {\n      this.resolution = Name.QUALIFIED_NAME;\n    }\n    this.name = name.join(\"\\\\\");\n  }\n);\n\n/**\n * This is an identifier without a namespace separator, such as Foo\n * @constant {String} Name#UNQUALIFIED_NAME\n * @memberOf module:php-parser\n */\nName.UNQUALIFIED_NAME = \"uqn\";\n/**\n * This is an identifier with a namespace separator, such as Foo\\Bar\n * @constant {String} Name#QUALIFIED_NAME\n * @memberOf module:php-parser\n */\nName.QUALIFIED_NAME = \"qn\";\n/**\n * This is an identifier with a namespace separator that begins with\n * a namespace separator, such as \\Foo\\Bar. The namespace \\Foo is also\n * a fully qualified name.\n * @constant {String} Name#FULL_QUALIFIED_NAME\n * @memberOf module:php-parser\n */\nName.FULL_QUALIFIED_NAME = \"fqn\";\n/**\n * This is an identifier starting with namespace, such as namespace\\Foo\\Bar.\n * @constant {String} Name#RELATIVE_NAME\n * @memberOf module:php-parser\n */\nName.RELATIVE_NAME = \"rn\";\n\nmodule.exports = Name;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Block = require(\"./block\");\nconst KIND = \"namespace\";\n\n/**\n * The main program node\n * @constructor Namespace\n * @memberOf module:php-parser\n * @extends {Block}\n * @property {string} name\n * @property {boolean} withBrackets\n */\nmodule.exports = Block.extends(\n  KIND,\n  function Namespace(name, children, withBrackets, docs, location) {\n    Block.apply(this, [KIND, children, docs, location]);\n    this.name = name;\n    this.withBrackets = withBrackets || false;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"new\";\n\n/**\n * Creates a new instance of the specified class\n * @constructor New\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Identifier|Variable|Class} what\n * @property {Variable[]} arguments\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function New(what, args, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.what = what;\n    this.arguments = args;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\n/**\n * A generic AST node\n * @constructor Node\n * @memberOf module:php-parser\n * @property {Location|null} loc\n * @property {CommentBlock[]|Comment[]|null} leadingComments\n * @property {CommentBlock[]|Comment[]|null} trailingComments\n * @property {string} kind\n */\nconst Node = function Node(kind, docs, location) {\n  this.kind = kind;\n  if (docs) {\n    this.leadingComments = docs;\n  }\n  if (location) {\n    this.loc = location;\n  }\n};\n\n/**\n * Attach comments to current node\n * @function Node#setTrailingComments\n * @memberOf module:php-parser\n * @param {*} docs\n */\nNode.prototype.setTrailingComments = function (docs) {\n  this.trailingComments = docs;\n};\n\n/**\n * Destroying an unused node\n * @function Node#destroy\n * @memberOf module:php-parser\n */\nNode.prototype.destroy = function (node) {\n  if (!node) {\n    throw new Error(\n      \"Node already initialized, you must swap with another node\"\n    );\n  }\n  if (this.leadingComments) {\n    if (node.leadingComments) {\n      node.leadingComments = Array.concat(\n        this.leadingComments,\n        node.leadingComments\n      );\n    } else {\n      node.leadingComments = this.leadingComments;\n    }\n  }\n  if (this.trailingComments) {\n    if (node.trailingComments) {\n      node.trailingComments = Array.concat(\n        this.trailingComments,\n        node.trailingComments\n      );\n    } else {\n      node.trailingComments = this.trailingComments;\n    }\n  }\n  return node;\n};\n\n/**\n * Includes current token position of the parser\n * @function Node#includeToken\n * @memberOf module:php-parser\n * @param {*} parser\n */\nNode.prototype.includeToken = function (parser) {\n  if (this.loc) {\n    if (this.loc.end) {\n      this.loc.end.line = parser.lexer.yylloc.last_line;\n      this.loc.end.column = parser.lexer.yylloc.last_column;\n      this.loc.end.offset = parser.lexer.offset;\n    }\n    if (parser.ast.withSource) {\n      this.loc.source = parser.lexer._input.substring(\n        this.loc.start.offset,\n        parser.lexer.offset\n      );\n    }\n  }\n  return this;\n};\n\n/**\n * Helper for extending the Node class\n * @function Node.extends\n * @memberOf module:php-parser\n * @param {string} type\n * @param {Function} constructor\n * @return {Function}\n */\nNode.extends = function (type, constructor) {\n  constructor.prototype = Object.create(this.prototype);\n  constructor.extends = this.extends;\n  constructor.prototype.constructor = constructor;\n  constructor.kind = type;\n  return constructor;\n};\n\nmodule.exports = Node;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Node = require(\"./node\");\nconst KIND = \"noop\";\n\n/**\n * Ignore this node, it implies a no operation block, for example :\n * [$foo, $bar, /* here a noop node * /]\n * @constructor Noop\n * @memberOf module:php-parser\n * @extends {Node}\n */\nmodule.exports = Node.extends(KIND, function Noop(docs, location) {\n  Node.apply(this, [KIND, docs, location]);\n});\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Literal = require(\"./literal\");\nconst KIND = \"nowdoc\";\n\n/**\n * Defines a nowdoc string\n * @constructor NowDoc\n * @memberOf module:php-parser\n * @extends {Literal}\n * @property {string} label\n * @property {string} raw\n */\nmodule.exports = Literal.extends(\n  KIND,\n  function Nowdoc(value, raw, label, docs, location) {\n    Literal.apply(this, [KIND, value, raw, docs, location]);\n    this.label = label;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Node = require(\"./node\");\nconst KIND = \"nullkeyword\";\n\n/**\n * Represents the null keyword\n * @constructor NullKeyword\n * @memberOf module:php-parser\n * @extends {Node}\n */\nmodule.exports = Node.extends(KIND, function NullKeyword(raw, docs, location) {\n  Node.apply(this, [KIND, docs, location]);\n  this.raw = raw;\n});\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Literal = require(\"./literal\");\nconst KIND = \"number\";\n\n/**\n * Defines a numeric value\n * @constructor Number\n * @memberOf module:php-parser\n * @extends {Literal}\n */\nmodule.exports = Literal.extends(\n  KIND,\n  function Number(value, raw, docs, location) {\n    Literal.apply(this, [KIND, value, raw, docs, location]);\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Lookup = require(\"./lookup\");\nconst KIND = \"offsetlookup\";\n\n/**\n * Lookup on an offset in an array\n * @constructor OffsetLookup\n * @memberOf module:php-parser\n * @extends {Lookup}\n */\nmodule.exports = Lookup.extends(\n  KIND,\n  function OffsetLookup(what, offset, docs, location) {\n    Lookup.apply(this, [KIND, what, offset, docs, location]);\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expr = require(\"./expression\");\nconst KIND = \"operation\";\n\n/**\n * Defines binary operations\n * @constructor Operation\n * @memberOf module:php-parser\n * @extends {Expression}\n */\nmodule.exports = Expr.extends(KIND, function Operation(kind, docs, location) {\n  Expr.apply(this, [kind || KIND, docs, location]);\n});\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Declaration = require(\"./declaration\");\nconst KIND = \"parameter\";\n\n/**\n * Defines a function parameter\n * @constructor Parameter\n * @memberOf module:php-parser\n * @extends {Declaration}\n * @property {Identifier|null} type\n * @property {Node|null} value\n * @property {boolean} byref\n * @property {boolean} variadic\n * @property {boolean} nullable\n */\nmodule.exports = Declaration.extends(\n  KIND,\n  function Parameter(\n    name,\n    type,\n    value,\n    isRef,\n    isVariadic,\n    nullable,\n    docs,\n    location\n  ) {\n    Declaration.apply(this, [KIND, name, docs, location]);\n    this.value = value;\n    this.type = type;\n    this.byref = isRef;\n    this.variadic = isVariadic;\n    this.nullable = nullable;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Reference = require(\"./reference\");\nconst KIND = \"parentreference\";\n\n/**\n * Defines a class reference node\n * @constructor ParentReference\n * @memberOf module:php-parser\n * @extends {Reference}\n */\nconst ParentReference = Reference.extends(\n  KIND,\n  function ParentReference(raw, docs, location) {\n    Reference.apply(this, [KIND, docs, location]);\n    this.raw = raw;\n  }\n);\nmodule.exports = ParentReference;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\n/**\n * Each Position object consists of a line number (1-indexed) and a column number (0-indexed):\n * @constructor Position\n * @memberOf module:php-parser\n * @property {number} line\n * @property {number} column\n * @property {number} offset\n */\nconst Position = function (line, column, offset) {\n  this.line = line;\n  this.column = column;\n  this.offset = offset;\n};\n\nmodule.exports = Position;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Operation = require(\"./operation\");\nconst KIND = \"post\";\n\n/**\n * Defines a post operation `$i++` or `$i--`\n * @constructor Post\n * @memberOf module:php-parser\n * @extends {Operation}\n * @property {String} type\n * @property {Variable} what\n */\nmodule.exports = Operation.extends(\n  KIND,\n  function Post(type, what, docs, location) {\n    Operation.apply(this, [KIND, docs, location]);\n    this.type = type;\n    this.what = what;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Operation = require(\"./operation\");\nconst KIND = \"pre\";\n\n/**\n * Defines a pre operation `++$i` or `--$i`\n * @constructor Pre\n * @memberOf module:php-parser\n * @extends {Operation}\n * @property {String} type\n * @property {Variable} what\n */\nmodule.exports = Operation.extends(\n  KIND,\n  function Pre(type, what, docs, location) {\n    Operation.apply(this, [KIND, docs, location]);\n    this.type = type;\n    this.what = what;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"print\";\n\n/**\n * Outputs\n * @constructor Print\n * @memberOf module:php-parser\n * @extends {Expression}\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Print(expression, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.expression = expression;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Block = require(\"./block\");\nconst KIND = \"program\";\n\n/**\n * The main program node\n * @constructor Program\n * @memberOf module:php-parser\n * @extends {Block}\n * @property {Error[]} errors\n * @property {Comment[]|null} comments\n * @property {String[]|null} tokens\n */\nmodule.exports = Block.extends(\n  KIND,\n  function Program(children, errors, comments, tokens, docs, location) {\n    Block.apply(this, [KIND, children, docs, location]);\n    this.errors = errors;\n    if (comments) {\n      this.comments = comments;\n    }\n    if (tokens) {\n      this.tokens = tokens;\n    }\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"property\";\n\n/**\n * Defines a class property\n * @constructor Property\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {string} name\n * @property {Node|null} value\n * @property {boolean} nullable\n * @property {Identifier|Array<Identifier>|null} type\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function Property(name, value, nullable, type, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.name = name;\n    this.value = value;\n    this.nullable = nullable;\n    this.type = type;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Lookup = require(\"./lookup\");\nconst KIND = \"propertylookup\";\n\n/**\n * Lookup to an object property\n * @constructor PropertyLookup\n * @memberOf module:php-parser\n * @extends {Lookup}\n */\nmodule.exports = Lookup.extends(\n  KIND,\n  function PropertyLookup(what, offset, docs, location) {\n    Lookup.apply(this, [KIND, what, offset, docs, location]);\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"propertystatement\";\n\nconst IS_UNDEFINED = \"\";\nconst IS_PUBLIC = \"public\";\nconst IS_PROTECTED = \"protected\";\nconst IS_PRIVATE = \"private\";\n\n/**\n * Declares a properties into the current scope\n * @constructor PropertyStatement\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Property[]} properties\n */\nconst PropertyStatement = Statement.extends(\n  KIND,\n  function PropertyStatement(kind, properties, flags, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.properties = properties;\n    this.parseFlags(flags);\n  }\n);\n\n/**\n * Generic flags parser\n * @function PropertyStatement#parseFlags\n * @memberOf module:php-parser\n * @param {Array<number|null>} flags\n * @return {void}\n */\nPropertyStatement.prototype.parseFlags = function (flags) {\n  if (flags[0] === -1) {\n    this.visibility = IS_UNDEFINED;\n  } else if (flags[0] === null) {\n    this.visibility = null;\n  } else if (flags[0] === 0) {\n    this.visibility = IS_PUBLIC;\n  } else if (flags[0] === 1) {\n    this.visibility = IS_PROTECTED;\n  } else if (flags[0] === 2) {\n    this.visibility = IS_PRIVATE;\n  }\n\n  this.isStatic = flags[1] === 1;\n};\n\nmodule.exports = PropertyStatement;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Node = require(\"./node\");\nconst KIND = \"reference\";\n\n/**\n * Defines a reference node\n * @constructor Reference\n * @memberOf module:php-parser\n * @extends {Node}\n */\nconst Reference = Node.extends(KIND, function Reference(kind, docs, location) {\n  Node.apply(this, [kind || KIND, docs, location]);\n});\n\nmodule.exports = Reference;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"retif\";\n\n/**\n * Defines a short if statement that returns a value\n * @constructor RetIf\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Expression} test\n * @property {Expression} trueExpr\n * @property {Expression} falseExpr\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function RetIf(test, trueExpr, falseExpr, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.test = test;\n    this.trueExpr = trueExpr;\n    this.falseExpr = falseExpr;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"return\";\n\n/**\n * A continue statement\n * @constructor Return\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Expression|null} expr\n */\nmodule.exports = Statement.extends(KIND, function Return(expr, docs, location) {\n  Statement.apply(this, [KIND, docs, location]);\n  this.expr = expr;\n});\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Reference = require(\"./reference\");\nconst KIND = \"selfreference\";\n\n/**\n * Defines a class reference node\n * @constructor SelfReference\n * @memberOf module:php-parser\n * @extends {Reference}\n */\nconst SelfReference = Reference.extends(\n  KIND,\n  function SelfReference(raw, docs, location) {\n    Reference.apply(this, [KIND, docs, location]);\n    this.raw = raw;\n  }\n);\nmodule.exports = SelfReference;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"silent\";\n\n/**\n * Avoids to show/log warnings & notices from the inner expression\n * @constructor Silent\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Expression} expr\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Silent(expr, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.expr = expr;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Node = require(\"./node\");\nconst KIND = \"statement\";\n\n/**\n * Any statement.\n * @constructor Statement\n * @memberOf module:php-parser\n * @extends {Node}\n */\nmodule.exports = Node.extends(KIND, function Statement(kind, docs, location) {\n  Node.apply(this, [kind || KIND, docs, location]);\n});\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"static\";\n\n/**\n * Declares a static variable into the current scope\n * @constructor Static\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {StaticVariable[]} variables\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function Static(variables, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.variables = variables;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Lookup = require(\"./lookup\");\nconst KIND = \"staticlookup\";\n\n/**\n * Lookup to a static property\n * @constructor StaticLookup\n * @memberOf module:php-parser\n * @extends {Lookup}\n */\nmodule.exports = Lookup.extends(\n  KIND,\n  function StaticLookup(what, offset, docs, location) {\n    Lookup.apply(this, [KIND, what, offset, docs, location]);\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Reference = require(\"./reference\");\nconst KIND = \"staticreference\";\n\n/**\n * Defines a class reference node\n * @constructor StaticReference\n * @memberOf module:php-parser\n * @extends {Reference}\n */\nconst StaticReference = Reference.extends(\n  KIND,\n  function StaticReference(raw, docs, location) {\n    Reference.apply(this, [KIND, docs, location]);\n    this.raw = raw;\n  }\n);\nmodule.exports = StaticReference;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Node = require(\"./node\");\nconst KIND = \"staticvariable\";\n\n/**\n * Defines a constant\n * @constructor StaticVariable\n * @memberOf module:php-parser\n * @extends {Node}\n * @property {Variable} variable\n * @property {Node|string|number|boolean|null} defaultValue\n */\nmodule.exports = Node.extends(\n  KIND,\n  function StaticVariable(variable, defaultValue, docs, location) {\n    Node.apply(this, [KIND, docs, location]);\n    this.variable = variable;\n    this.defaultValue = defaultValue;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Literal = require(\"./literal\");\nconst KIND = \"string\";\n\n/**\n * Defines a string (simple or double quoted) - chars are already escaped\n * @constructor String\n * @memberOf module:php-parser\n * @extends {Literal}\n * @property {boolean} unicode\n * @property {boolean} isDoubleQuote\n * @see {Encapsed}\n */\nmodule.exports = Literal.extends(\n  KIND,\n  function String(isDoubleQuote, value, unicode, raw, docs, location) {\n    Literal.apply(this, [KIND, value, raw, docs, location]);\n    this.unicode = unicode;\n    this.isDoubleQuote = isDoubleQuote;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"switch\";\n\n/**\n * Defines a switch statement\n * @constructor Switch\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Expression} test\n * @property {Block} body\n * @property {boolean} shortForm\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function Switch(test, body, shortForm, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.test = test;\n    this.body = body;\n    this.shortForm = shortForm;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"throw\";\n\n/**\n * Defines a throw statement\n * @constructor Throw\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Expression} what\n */\nmodule.exports = Statement.extends(KIND, function Throw(what, docs, location) {\n  Statement.apply(this, [KIND, docs, location]);\n  this.what = what;\n});\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Declaration = require(\"./declaration\");\nconst KIND = \"trait\";\n\n/**\n * A trait definition\n * @constructor Trait\n * @memberOf module:php-parser\n * @extends {Declaration}\n * @property {Declaration[]} body\n */\nmodule.exports = Declaration.extends(\n  KIND,\n  function Trait(name, body, docs, location) {\n    Declaration.apply(this, [KIND, name, docs, location]);\n    this.body = body;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Node = require(\"./node\");\nconst KIND = \"traitalias\";\n\nconst IS_UNDEFINED = \"\";\nconst IS_PUBLIC = \"public\";\nconst IS_PROTECTED = \"protected\";\nconst IS_PRIVATE = \"private\";\n\n/**\n * Defines a trait alias\n * @constructor TraitAlias\n * @memberOf module:php-parser\n * @extends {Node}\n * @property {Identifier|null} trait\n * @property {Identifier} method\n * @property {Identifier|null} as\n * @property {string|null} visibility\n */\nmodule.exports = Node.extends(\n  KIND,\n  function TraitAlias(trait, method, as, flags, docs, location) {\n    Node.apply(this, [KIND, docs, location]);\n    this.trait = trait;\n    this.method = method;\n    this.as = as;\n    this.visibility = IS_UNDEFINED;\n    if (flags) {\n      if (flags[0] === 0) {\n        this.visibility = IS_PUBLIC;\n      } else if (flags[0] === 1) {\n        this.visibility = IS_PROTECTED;\n      } else if (flags[0] === 2) {\n        this.visibility = IS_PRIVATE;\n      }\n    }\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Node = require(\"./node\");\nconst KIND = \"traitprecedence\";\n\n/**\n * Defines a trait alias\n * @constructor TraitPrecedence\n * @memberOf module:php-parser\n * @extends {Node}\n * @property {Identifier|null} trait\n * @property {Identifier} method\n * @property {Identifier[]} instead\n */\nmodule.exports = Node.extends(\n  KIND,\n  function TraitPrecedence(trait, method, instead, docs, location) {\n    Node.apply(this, [KIND, docs, location]);\n    this.trait = trait;\n    this.method = method;\n    this.instead = instead;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Node = require(\"./node\");\nconst KIND = \"traituse\";\n\n/**\n * Defines a trait usage\n * @constructor TraitUse\n * @memberOf module:php-parser\n * @extends {Node}\n * @property {Identifier[]} traits\n * @property {Node[]|null} adaptations\n */\nmodule.exports = Node.extends(\n  KIND,\n  function TraitUse(traits, adaptations, docs, location) {\n    Node.apply(this, [KIND, docs, location]);\n    this.traits = traits;\n    this.adaptations = adaptations;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"try\";\n\n/**\n * Defines a try statement\n * @constructor Try\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Block} body\n * @property {Catch[]} catches\n * @property {Block} allways\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function Try(body, catches, always, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.body = body;\n    this.catches = catches;\n    this.always = always;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Reference = require(\"./reference\");\nconst KIND = \"typereference\";\n\n/**\n * Defines a class reference node\n * @constructor TypeReference\n * @memberOf module:php-parser\n * @extends {Reference}\n * @property {string} name\n */\nconst TypeReference = Reference.extends(\n  KIND,\n  function TypeReference(name, raw, docs, location) {\n    Reference.apply(this, [KIND, docs, location]);\n    this.name = name;\n    this.raw = raw;\n  }\n);\n\nTypeReference.types = [\n  \"int\",\n  \"float\",\n  \"string\",\n  \"bool\",\n  \"object\",\n  \"array\",\n  \"callable\",\n  \"iterable\",\n  \"void\",\n];\n\nmodule.exports = TypeReference;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Operation = require(\"./operation\");\nconst KIND = \"unary\";\n\n/**\n * Unary operations\n * @constructor Unary\n * @memberOf module:php-parser\n * @extends {Operation}\n * @property {string} type\n * @property {Expression} what\n */\nmodule.exports = Operation.extends(\n  KIND,\n  function Unary(type, what, docs, location) {\n    Operation.apply(this, [KIND, docs, location]);\n    this.type = type;\n    this.what = what;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"unset\";\n\n/**\n * Deletes references to a list of variables\n * @constructor Unset\n * @memberOf module:php-parser\n * @extends {Statement}\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function Unset(variables, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.variables = variables;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"usegroup\";\n\n/**\n * Defines a use statement (with a list of use items)\n * @constructor UseGroup\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {string|null} name\n * @property {string|null} type - Possible value : function, const\n * @property {UseItem[]} item\n * @see {Namespace}\n * @see http://php.net/manual/en/language.namespaces.importing.php\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function UseGroup(name, type, items, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.name = name;\n    this.type = type;\n    this.items = items;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"useitem\";\n\n/**\n * Defines a use statement (from namespace)\n * @constructor UseItem\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {string} name\n * @property {string|null} type - Possible value : function, const\n * @property {Identifier|null} alias\n * @see {Namespace}\n * @see http://php.net/manual/en/language.namespaces.importing.php\n */\nconst UseItem = Statement.extends(\n  KIND,\n  function UseItem(name, alias, type, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.name = name;\n    this.alias = alias;\n    this.type = type;\n  }\n);\n\n/**\n * Importing a constant\n * @constant {string} UseItem#TYPE_CONST\n * @memberOf module:php-parser\n */\nUseItem.TYPE_CONST = \"const\";\n/**\n * Importing a function\n * @constant {string} UseItem#TYPE_FUNC\n * @memberOf module:php-parser\n */\nUseItem.TYPE_FUNCTION = \"function\";\n\nmodule.exports = UseItem;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"variable\";\n\n/**\n * Any expression node. Since the left-hand side of an assignment may\n * be any expression in general, an expression can also be a pattern.\n * @constructor Variable\n * @memberOf module:php-parser\n * @extends {Expression}\n * @example\n * // PHP code :\n * $foo\n * // AST output\n * {\n *  \"kind\": \"variable\",\n *  \"name\": \"foo\",\n *  \"curly\": false\n * }\n * @property {string|Node} name The variable name (can be a complex expression when the name is resolved dynamically)\n * @property {boolean} curly Indicate if the name is defined between curlies, ex `${foo}`\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Variable(name, curly, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.name = name;\n    this.curly = curly || false;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"variadic\";\n\n/**\n * Introduce a list of items into the arguments of the call\n * @constructor Variadic\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Array|Expression} what\n * @see https://wiki.php.net/rfc/argument_unpacking\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function variadic(what, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.what = what;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Statement = require(\"./statement\");\nconst KIND = \"while\";\n\n/**\n * Defines a while statement\n * @constructor While\n * @memberOf module:php-parser\n * @extends {Statement}\n * @property {Expression} test\n * @property {Statement} body\n * @property {boolean} shortForm\n */\nmodule.exports = Statement.extends(\n  KIND,\n  function While(test, body, shortForm, docs, location) {\n    Statement.apply(this, [KIND, docs, location]);\n    this.test = test;\n    this.body = body;\n    this.shortForm = shortForm;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"yield\";\n\n/**\n * Defines a yield generator statement\n * @constructor Yield\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Expression|null} value\n * @property {Expression|null} key\n * @see http://php.net/manual/en/language.generators.syntax.php\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function Yield(value, key, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.value = value;\n    this.key = key;\n  }\n);\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst Expression = require(\"./expression\");\nconst KIND = \"yieldfrom\";\n\n/**\n * Defines a yield from generator statement\n * @constructor YieldFrom\n * @memberOf module:php-parser\n * @extends {Expression}\n * @property {Expression} value\n * @see http://php.net/manual/en/language.generators.syntax.php\n */\nmodule.exports = Expression.extends(\n  KIND,\n  function YieldFrom(value, docs, location) {\n    Expression.apply(this, [KIND, docs, location]);\n    this.value = value;\n  }\n);\n","/**\n * Copyright (C) 2020 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst lexer = require(\"./lexer\");\nconst parser = require(\"./parser\");\nconst tokens = require(\"./tokens\");\nconst AST = require(\"./ast\");\n\n/**\n * @private\n */\nfunction combine(src, to) {\n  const keys = Object.keys(src);\n  let i = keys.length;\n  while (i--) {\n    const k = keys[i];\n    const val = src[k];\n    if (val === null) {\n      delete to[k];\n    } else if (typeof val === \"function\") {\n      to[k] = val.bind(to);\n    } else if (Array.isArray(val)) {\n      to[k] = Array.isArray(to[k]) ? to[k].concat(val) : val;\n    } else if (typeof val === \"object\") {\n      to[k] = typeof to[k] === \"object\" ? combine(val, to[k]) : val;\n    } else {\n      to[k] = val;\n    }\n  }\n  return to;\n}\n\n/**\n * Initialise a new parser instance with the specified options\n *\n * @class\n * @memberOf module:php-parser\n * @tutorial Engine\n * @example\n * var parser = require('php-parser');\n * var instance = new parser({\n *   parser: {\n *     extractDoc: true,\n *     suppressErrors: true,\n *     version: 704 // or '7.4'\n *   },\n *   ast: {\n *     withPositions: true\n *   },\n *   lexer: {\n *     short_tags: true,\n *     asp_tags: true\n *   }\n * });\n *\n * var evalAST = instance.parseEval('some php code');\n * var codeAST = instance.parseCode('<?php some php code', 'foo.php');\n * var tokens = instance.tokenGetAll('<?php some php code');\n *\n * @param {Object} options - List of options\n * @property {Lexer} lexer\n * @property {Parser} parser\n * @property {AST} ast\n * @property {Object} tokens\n */\nconst Engine = function (options) {\n  if (typeof this === \"function\") {\n    return new this(options);\n  }\n  this.tokens = tokens;\n  this.lexer = new lexer(this);\n  this.ast = new AST();\n  this.parser = new parser(this.lexer, this.ast);\n  if (options && typeof options === \"object\") {\n    // disable php7 from lexer if already disabled from parser\n    if (options.parser) {\n      if (!options.lexer) {\n        options.lexer = {};\n      }\n      if (options.parser.version) {\n        if (typeof options.parser.version === \"string\") {\n          let version = options.parser.version.split(\".\");\n          version = parseInt(version[0]) * 100 + parseInt(version[1]);\n          if (isNaN(version)) {\n            throw new Error(\"Bad version number : \" + options.parser.version);\n          } else {\n            options.parser.version = version;\n          }\n        } else if (typeof options.parser.version !== \"number\") {\n          throw new Error(\"Expecting a number for version\");\n        }\n        if (options.parser.version < 500 || options.parser.version > 704) {\n          throw new Error(\"Can only handle versions between 5.x to 7.x\");\n        }\n      }\n    }\n    combine(options, this);\n\n    // same version flags based on parser options\n    this.lexer.version = this.parser.version;\n  }\n};\n\n/**\n * Check if the inpyt is a buffer or a string\n * @private\n * @param  {Buffer|String} buffer Input value that can be either a buffer or a string\n * @return {String}   Returns the string from input\n */\nconst getStringBuffer = function (buffer) {\n  return typeof buffer.write === \"function\" ? buffer.toString() : buffer;\n};\n\n/**\n * Creates a new instance (Helper)\n * @param {Object} options\n * @return {Engine}\n * @private\n */\nEngine.create = function (options) {\n  return new Engine(options);\n};\n\n/**\n * Evaluate the buffer\n * @private\n */\nEngine.parseEval = function (buffer, options) {\n  const self = new Engine(options);\n  return self.parseEval(buffer);\n};\n\n/**\n * Parse an evaluating mode string (no need to open php tags)\n * @param {String} buffer\n * @return {Program}\n */\nEngine.prototype.parseEval = function (buffer) {\n  this.lexer.mode_eval = true;\n  this.lexer.all_tokens = false;\n  buffer = getStringBuffer(buffer);\n  return this.parser.parse(buffer, \"eval\");\n};\n\n/**\n * Static function that parse a php code with open/close tags\n * @private\n */\nEngine.parseCode = function (buffer, filename, options) {\n  if (typeof filename === \"object\" && !options) {\n    // retro-compatibility\n    options = filename;\n    filename = \"unknown\";\n  }\n  const self = new Engine(options);\n  return self.parseCode(buffer, filename);\n};\n\n/**\n * Function that parse a php code with open/close tags\n *\n * Sample code :\n * ```php\n * <?php $x = 1;\n * ```\n *\n * Usage :\n * ```js\n * var parser = require('php-parser');\n * var phpParser = new parser({\n *   // some options\n * });\n * var ast = phpParser.parseCode('...php code...', 'foo.php');\n * ```\n * @param {String} buffer - The code to be parsed\n * @param {String} filename - Filename\n * @return {Program}\n */\nEngine.prototype.parseCode = function (buffer, filename) {\n  this.lexer.mode_eval = false;\n  this.lexer.all_tokens = false;\n  buffer = getStringBuffer(buffer);\n  return this.parser.parse(buffer, filename);\n};\n\n/**\n * Split the buffer into tokens\n * @private\n */\nEngine.tokenGetAll = function (buffer, options) {\n  const self = new Engine(options);\n  return self.tokenGetAll(buffer);\n};\n\n/**\n * Extract tokens from the specified buffer.\n * > Note that the output tokens are *STRICLY* similar to PHP function `token_get_all`\n * @param {String} buffer\n * @return {String[]} - Each item can be a string or an array with following informations [token_name, text, line_number]\n */\nEngine.prototype.tokenGetAll = function (buffer) {\n  this.lexer.mode_eval = false;\n  this.lexer.all_tokens = true;\n  buffer = getStringBuffer(buffer);\n  const EOF = this.lexer.EOF;\n  const names = this.tokens.values;\n  this.lexer.setInput(buffer);\n  let token = this.lexer.lex() || EOF;\n  const result = [];\n  while (token != EOF) {\n    let entry = this.lexer.yytext;\n    if (names.hasOwnProperty(token)) {\n      entry = [names[token], entry, this.lexer.yylloc.first_line];\n    }\n    result.push(entry);\n    token = this.lexer.lex() || EOF;\n  }\n  return result;\n};\n\n/** @module php-parser */\n\n// exports the function\nmodule.exports = Engine;\n\n// makes libraries public\nmodule.exports.tokens = tokens;\nmodule.exports.lexer = lexer;\nmodule.exports.AST = AST;\nmodule.exports.parser = parser;\nmodule.exports.combine = combine;\nmodule.exports.Engine = Engine;\n\n// allow the default export in index.d.ts\nmodule.exports.default = Engine;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\n/**\n * This is the php lexer. It will tokenize the string for helping the\n * parser to build the AST from its grammar.\n *\n * @constructor Lexer\n * @memberOf module:php-parser\n * @property {number} EOF\n * @property {boolean} all_tokens defines if all tokens must be retrieved (used by token_get_all only)\n * @property {boolean} comment_tokens extracts comments tokens\n * @property {boolean} mode_eval enables the evald mode (ignore opening tags)\n * @property {boolean} asp_tags disables by default asp tags mode\n * @property {boolean} short_tags enables by default short tags mode\n * @property {object} keywords List of php keyword\n * @property {object} castKeywords List of php keywords for type casting\n */\nconst Lexer = function (engine) {\n  this.engine = engine;\n  this.tok = this.engine.tokens.names;\n  this.EOF = 1;\n  this.debug = false;\n  this.all_tokens = true;\n  this.comment_tokens = false;\n  this.mode_eval = false;\n  this.asp_tags = false;\n  this.short_tags = false;\n  this.version = 704;\n  this.yyprevcol = 0;\n  this.keywords = {\n    __class__: this.tok.T_CLASS_C,\n    __trait__: this.tok.T_TRAIT_C,\n    __function__: this.tok.T_FUNC_C,\n    __method__: this.tok.T_METHOD_C,\n    __line__: this.tok.T_LINE,\n    __file__: this.tok.T_FILE,\n    __dir__: this.tok.T_DIR,\n    __namespace__: this.tok.T_NS_C,\n    exit: this.tok.T_EXIT,\n    die: this.tok.T_EXIT,\n    function: this.tok.T_FUNCTION,\n    const: this.tok.T_CONST,\n    return: this.tok.T_RETURN,\n    try: this.tok.T_TRY,\n    catch: this.tok.T_CATCH,\n    finally: this.tok.T_FINALLY,\n    throw: this.tok.T_THROW,\n    if: this.tok.T_IF,\n    elseif: this.tok.T_ELSEIF,\n    endif: this.tok.T_ENDIF,\n    else: this.tok.T_ELSE,\n    while: this.tok.T_WHILE,\n    endwhile: this.tok.T_ENDWHILE,\n    do: this.tok.T_DO,\n    for: this.tok.T_FOR,\n    endfor: this.tok.T_ENDFOR,\n    foreach: this.tok.T_FOREACH,\n    endforeach: this.tok.T_ENDFOREACH,\n    declare: this.tok.T_DECLARE,\n    enddeclare: this.tok.T_ENDDECLARE,\n    instanceof: this.tok.T_INSTANCEOF,\n    as: this.tok.T_AS,\n    switch: this.tok.T_SWITCH,\n    endswitch: this.tok.T_ENDSWITCH,\n    case: this.tok.T_CASE,\n    default: this.tok.T_DEFAULT,\n    break: this.tok.T_BREAK,\n    continue: this.tok.T_CONTINUE,\n    goto: this.tok.T_GOTO,\n    echo: this.tok.T_ECHO,\n    print: this.tok.T_PRINT,\n    class: this.tok.T_CLASS,\n    interface: this.tok.T_INTERFACE,\n    trait: this.tok.T_TRAIT,\n    extends: this.tok.T_EXTENDS,\n    implements: this.tok.T_IMPLEMENTS,\n    new: this.tok.T_NEW,\n    clone: this.tok.T_CLONE,\n    var: this.tok.T_VAR,\n    eval: this.tok.T_EVAL,\n    include: this.tok.T_INCLUDE,\n    include_once: this.tok.T_INCLUDE_ONCE,\n    require: this.tok.T_REQUIRE,\n    require_once: this.tok.T_REQUIRE_ONCE,\n    namespace: this.tok.T_NAMESPACE,\n    use: this.tok.T_USE,\n    insteadof: this.tok.T_INSTEADOF,\n    global: this.tok.T_GLOBAL,\n    isset: this.tok.T_ISSET,\n    empty: this.tok.T_EMPTY,\n    __halt_compiler: this.tok.T_HALT_COMPILER,\n    static: this.tok.T_STATIC,\n    abstract: this.tok.T_ABSTRACT,\n    final: this.tok.T_FINAL,\n    private: this.tok.T_PRIVATE,\n    protected: this.tok.T_PROTECTED,\n    public: this.tok.T_PUBLIC,\n    unset: this.tok.T_UNSET,\n    list: this.tok.T_LIST,\n    array: this.tok.T_ARRAY,\n    callable: this.tok.T_CALLABLE,\n    or: this.tok.T_LOGICAL_OR,\n    and: this.tok.T_LOGICAL_AND,\n    xor: this.tok.T_LOGICAL_XOR,\n  };\n  this.castKeywords = {\n    int: this.tok.T_INT_CAST,\n    integer: this.tok.T_INT_CAST,\n    real: this.tok.T_DOUBLE_CAST,\n    double: this.tok.T_DOUBLE_CAST,\n    float: this.tok.T_DOUBLE_CAST,\n    string: this.tok.T_STRING_CAST,\n    binary: this.tok.T_STRING_CAST,\n    array: this.tok.T_ARRAY_CAST,\n    object: this.tok.T_OBJECT_CAST,\n    bool: this.tok.T_BOOL_CAST,\n    boolean: this.tok.T_BOOL_CAST,\n    unset: this.tok.T_UNSET_CAST,\n  };\n};\n\n/**\n * Initialize the lexer with the specified input\n * @function Lexer#setInput\n * @memberOf module:php-parser\n */\nLexer.prototype.setInput = function (input) {\n  this._input = input;\n  this.size = input.length;\n  this.yylineno = 1;\n  this.offset = 0;\n  this.yyprevcol = 0;\n  this.yytext = \"\";\n  this.yylloc = {\n    first_offset: 0,\n    first_line: 1,\n    first_column: 0,\n    prev_offset: 0,\n    prev_line: 1,\n    prev_column: 0,\n    last_line: 1,\n    last_column: 0,\n  };\n  this.tokens = [];\n  if (this.version > 703) {\n    this.keywords.fn = this.tok.T_FN;\n  } else {\n    delete this.keywords.fn;\n  }\n  this.done = this.offset >= this.size;\n  if (!this.all_tokens && this.mode_eval) {\n    this.conditionStack = [\"INITIAL\"];\n    this.begin(\"ST_IN_SCRIPTING\");\n  } else {\n    this.conditionStack = [];\n    this.begin(\"INITIAL\");\n  }\n  // https://github.com/php/php-src/blob/999e32b65a8a4bb59e27e538fa68ffae4b99d863/Zend/zend_language_scanner.h#L59\n  // Used for heredoc and nowdoc\n  this.heredoc_label = {\n    label: \"\",\n    length: 0,\n    indentation: 0,\n    indentation_uses_spaces: false,\n    finished: false,\n    /*\n     * this used for parser to detemine the if current node segment is first encaps node.\n     * if ture, the indentation will remove from the begining. and if false, the prev node\n     * might be a variable '}' ,and the leading spaces should not be removed util meet the\n     * first \\n\n     */\n    first_encaps_node: false,\n    // for backward compatible\n    toString: function () {\n      this.label;\n    },\n  };\n  return this;\n};\n\n/**\n * consumes and returns one char from the input\n * @function Lexer#input\n * @memberOf module:php-parser\n */\nLexer.prototype.input = function () {\n  const ch = this._input[this.offset];\n  if (!ch) return \"\";\n  this.yytext += ch;\n  this.offset++;\n  if (ch === \"\\r\" && this._input[this.offset] === \"\\n\") {\n    this.yytext += \"\\n\";\n    this.offset++;\n  }\n  if (ch === \"\\n\" || ch === \"\\r\") {\n    this.yylloc.last_line = ++this.yylineno;\n    this.yyprevcol = this.yylloc.last_column;\n    this.yylloc.last_column = 0;\n  } else {\n    this.yylloc.last_column++;\n  }\n  return ch;\n};\n\n/**\n * revert eating specified size\n * @function Lexer#unput\n * @memberOf module:php-parser\n */\nLexer.prototype.unput = function (size) {\n  if (size === 1) {\n    // 1 char unput (most cases)\n    this.offset--;\n    if (\n      this._input[this.offset] === \"\\n\" &&\n      this._input[this.offset - 1] === \"\\r\"\n    ) {\n      this.offset--;\n      size++;\n    }\n    if (\n      this._input[this.offset] === \"\\r\" ||\n      this._input[this.offset] === \"\\n\"\n    ) {\n      this.yylloc.last_line--;\n      this.yylineno--;\n      this.yylloc.last_column = this.yyprevcol;\n    } else {\n      this.yylloc.last_column--;\n    }\n    this.yytext = this.yytext.substring(0, this.yytext.length - size);\n  } else if (size > 0) {\n    this.offset -= size;\n    if (size < this.yytext.length) {\n      this.yytext = this.yytext.substring(0, this.yytext.length - size);\n      // re-calculate position\n      this.yylloc.last_line = this.yylloc.first_line;\n      this.yylloc.last_column = this.yyprevcol = this.yylloc.first_column;\n      for (let i = 0; i < this.yytext.length; i++) {\n        let c = this.yytext[i];\n        if (c === \"\\r\") {\n          c = this.yytext[++i];\n          this.yyprevcol = this.yylloc.last_column;\n          this.yylloc.last_line++;\n          this.yylloc.last_column = 0;\n          if (c !== \"\\n\") {\n            if (c === \"\\r\") {\n              this.yylloc.last_line++;\n            } else {\n              this.yylloc.last_column++;\n            }\n          }\n        } else if (c === \"\\n\") {\n          this.yyprevcol = this.yylloc.last_column;\n          this.yylloc.last_line++;\n          this.yylloc.last_column = 0;\n        } else {\n          this.yylloc.last_column++;\n        }\n      }\n      this.yylineno = this.yylloc.last_line;\n    } else {\n      // reset full text\n      this.yytext = \"\";\n      this.yylloc.last_line = this.yylineno = this.yylloc.first_line;\n      this.yylloc.last_column = this.yylloc.first_column;\n    }\n  }\n\n  return this;\n};\n\n/**\n * check if the text matches\n * @function Lexer#tryMatch\n * @memberOf module:php-parser\n * @param {string} text\n * @returns {boolean}\n */\nLexer.prototype.tryMatch = function (text) {\n  return text === this.ahead(text.length);\n};\n\n/**\n * check if the text matches\n * @function Lexer#tryMatchCaseless\n * @memberOf module:php-parser\n * @param {string} text\n * @returns {boolean}\n */\nLexer.prototype.tryMatchCaseless = function (text) {\n  return text === this.ahead(text.length).toLowerCase();\n};\n\n/**\n * look ahead\n * @function Lexer#ahead\n * @memberOf module:php-parser\n * @param {number} size\n * @returns {string}\n */\nLexer.prototype.ahead = function (size) {\n  let text = this._input.substring(this.offset, this.offset + size);\n  if (\n    text[text.length - 1] === \"\\r\" &&\n    this._input[this.offset + size + 1] === \"\\n\"\n  ) {\n    text += \"\\n\";\n  }\n  return text;\n};\n\n/**\n * consume the specified size\n * @function Lexer#consume\n * @memberOf module:php-parser\n * @param {number} size\n * @returns {Lexer}\n */\nLexer.prototype.consume = function (size) {\n  for (let i = 0; i < size; i++) {\n    const ch = this._input[this.offset];\n    if (!ch) break;\n    this.yytext += ch;\n    this.offset++;\n    if (ch === \"\\r\" && this._input[this.offset] === \"\\n\") {\n      this.yytext += \"\\n\";\n      this.offset++;\n      i++;\n    }\n    if (ch === \"\\n\" || ch === \"\\r\") {\n      this.yylloc.last_line = ++this.yylineno;\n      this.yyprevcol = this.yylloc.last_column;\n      this.yylloc.last_column = 0;\n    } else {\n      this.yylloc.last_column++;\n    }\n  }\n  return this;\n};\n\n/**\n * Gets the current state\n * @function Lexer#getState\n * @memberOf module:php-parser\n */\nLexer.prototype.getState = function () {\n  return {\n    yytext: this.yytext,\n    offset: this.offset,\n    yylineno: this.yylineno,\n    yyprevcol: this.yyprevcol,\n    yylloc: {\n      first_offset: this.yylloc.first_offset,\n      first_line: this.yylloc.first_line,\n      first_column: this.yylloc.first_column,\n      last_line: this.yylloc.last_line,\n      last_column: this.yylloc.last_column,\n    },\n    heredoc_label: this.heredoc_label,\n  };\n};\n\n/**\n * Sets the current lexer state\n * @function Lexer#setState\n * @memberOf module:php-parser\n */\nLexer.prototype.setState = function (state) {\n  this.yytext = state.yytext;\n  this.offset = state.offset;\n  this.yylineno = state.yylineno;\n  this.yyprevcol = state.yyprevcol;\n  this.yylloc = state.yylloc;\n  if (state.heredoc_label) {\n    this.heredoc_label = state.heredoc_label;\n  }\n  return this;\n};\n\n/**\n * prepend next token\n * @function Lexer#appendToken\n * @memberOf module:php-parser\n * @param {*} value\n * @param {*} ahead\n * @returns {Lexer}\n */\nLexer.prototype.appendToken = function (value, ahead) {\n  this.tokens.push([value, ahead]);\n  return this;\n};\n\n/**\n * return next match that has a token\n * @function Lexer#lex\n * @memberOf module:php-parser\n * @returns {number|string}\n */\nLexer.prototype.lex = function () {\n  this.yylloc.prev_offset = this.offset;\n  this.yylloc.prev_line = this.yylloc.last_line;\n  this.yylloc.prev_column = this.yylloc.last_column;\n  let token = this.next() || this.lex();\n  if (!this.all_tokens) {\n    while (\n      token === this.tok.T_WHITESPACE || // ignore white space\n      (!this.comment_tokens &&\n        (token === this.tok.T_COMMENT || // ignore single lines comments\n          token === this.tok.T_DOC_COMMENT)) || // ignore doc comments\n      // ignore open tags\n      token === this.tok.T_OPEN_TAG\n    ) {\n      token = this.next() || this.lex();\n    }\n    if (token == this.tok.T_OPEN_TAG_WITH_ECHO) {\n      // https://github.com/php/php-src/blob/7ff186434e82ee7be7c59d0db9a976641cf7b09c/Zend/zend_compile.c#L1683\n      // open tag with echo statement\n      return this.tok.T_ECHO;\n    } else if (token === this.tok.T_CLOSE_TAG) {\n      // https://github.com/php/php-src/blob/7ff186434e82ee7be7c59d0db9a976641cf7b09c/Zend/zend_compile.c#L1680\n      return \";\"; /* implicit ; */\n    }\n  }\n  if (!this.yylloc.prev_offset) {\n    this.yylloc.prev_offset = this.yylloc.first_offset;\n    this.yylloc.prev_line = this.yylloc.first_line;\n    this.yylloc.prev_column = this.yylloc.first_column;\n  }\n  /*else if (this.yylloc.prev_offset === this.offset && this.offset !== this.size) {\n    throw new Error('Infinite loop @ ' + this.offset + ' / ' + this.size);\n  }*/\n  return token;\n};\n\n/**\n * activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n * @function Lexer#begin\n * @memberOf module:php-parser\n * @param {*} condition\n * @returns {Lexer}\n */\nLexer.prototype.begin = function (condition) {\n  this.conditionStack.push(condition);\n  this.curCondition = condition;\n  this.stateCb = this[\"match\" + condition];\n  if (typeof this.stateCb !== \"function\") {\n    throw new Error('Undefined condition state \"' + condition + '\"');\n  }\n  return this;\n};\n\n/**\n * pop the previously active lexer condition state off the condition stack\n * @function Lexer#popState\n * @memberOf module:php-parser\n * @returns {string|*}\n */\nLexer.prototype.popState = function () {\n  const n = this.conditionStack.length - 1;\n  const condition = n > 0 ? this.conditionStack.pop() : this.conditionStack[0];\n  this.curCondition = this.conditionStack[this.conditionStack.length - 1];\n  this.stateCb = this[\"match\" + this.curCondition];\n  if (typeof this.stateCb !== \"function\") {\n    throw new Error('Undefined condition state \"' + this.curCondition + '\"');\n  }\n  return condition;\n};\n\n/**\n * return next match in input\n * @function Lexer#next\n * @memberOf module:php-parser\n * @returns {number|*}\n */\nLexer.prototype.next = function () {\n  let token;\n  if (!this._input) {\n    this.done = true;\n  }\n  this.yylloc.first_offset = this.offset;\n  this.yylloc.first_line = this.yylloc.last_line;\n  this.yylloc.first_column = this.yylloc.last_column;\n  this.yytext = \"\";\n  if (this.done) {\n    this.yylloc.prev_offset = this.yylloc.first_offset;\n    this.yylloc.prev_line = this.yylloc.first_line;\n    this.yylloc.prev_column = this.yylloc.first_column;\n    return this.EOF;\n  }\n  if (this.tokens.length > 0) {\n    token = this.tokens.shift();\n    if (typeof token[1] === \"object\") {\n      this.setState(token[1]);\n    } else {\n      this.consume(token[1]);\n    }\n    token = token[0];\n  } else {\n    token = this.stateCb.apply(this, []);\n  }\n  if (this.offset >= this.size && this.tokens.length === 0) {\n    this.done = true;\n  }\n  if (this.debug) {\n    let tName = token;\n    if (typeof tName === \"number\") {\n      tName = this.engine.tokens.values[tName];\n    } else {\n      tName = '\"' + tName + '\"';\n    }\n    const e = new Error(\n      tName +\n        \"\\tfrom \" +\n        this.yylloc.first_line +\n        \",\" +\n        this.yylloc.first_column +\n        \"\\t - to \" +\n        this.yylloc.last_line +\n        \",\" +\n        this.yylloc.last_column +\n        '\\t\"' +\n        this.yytext +\n        '\"'\n    );\n    // eslint-disable-next-line no-console\n    console.error(e.stack);\n  }\n  return token;\n};\n\n// extends the lexer with states\n[\n  require(\"./lexer/comments.js\"),\n  require(\"./lexer/initial.js\"),\n  require(\"./lexer/numbers.js\"),\n  require(\"./lexer/property.js\"),\n  require(\"./lexer/scripting.js\"),\n  require(\"./lexer/strings.js\"),\n  require(\"./lexer/tokens.js\"),\n  require(\"./lexer/utils.js\"),\n].forEach(function (ext) {\n  for (const k in ext) {\n    Lexer.prototype[k] = ext[k];\n  }\n});\n\nmodule.exports = Lexer;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /*\n   * Reads a single line comment\n   */\n  T_COMMENT: function () {\n    while (this.offset < this.size) {\n      const ch = this.input();\n      if (ch === \"\\n\" || ch === \"\\r\") {\n        return this.tok.T_COMMENT;\n      } else if (\n        ch === \"?\" &&\n        !this.aspTagMode &&\n        this._input[this.offset] === \">\"\n      ) {\n        this.unput(1);\n        return this.tok.T_COMMENT;\n      } else if (\n        ch === \"%\" &&\n        this.aspTagMode &&\n        this._input[this.offset] === \">\"\n      ) {\n        this.unput(1);\n        return this.tok.T_COMMENT;\n      }\n    }\n    return this.tok.T_COMMENT;\n  },\n  /*\n   * Behaviour : https://github.com/php/php-src/blob/master/Zend/zend_language_scanner.l#L1927\n   */\n  T_DOC_COMMENT: function () {\n    let ch = this.input();\n    let token = this.tok.T_COMMENT;\n    if (ch === \"*\") {\n      // started with '/*' , check is next is '*'\n      ch = this.input();\n      if (this.is_WHITESPACE()) {\n        // check if next is WHITESPACE\n        token = this.tok.T_DOC_COMMENT;\n      }\n      if (ch === \"/\") {\n        return token;\n      } else {\n        this.unput(1); // reset\n      }\n    }\n    while (this.offset < this.size) {\n      ch = this.input();\n      if (ch === \"*\" && this._input[this.offset] === \"/\") {\n        this.input();\n        break;\n      }\n    }\n    return token;\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  nextINITIAL: function () {\n    if (\n      this.conditionStack.length > 1 &&\n      this.conditionStack[this.conditionStack.length - 1] === \"INITIAL\"\n    ) {\n      // Return to HEREDOC/ST_DOUBLE_QUOTES mode\n      this.popState();\n    } else {\n      this.begin(\"ST_IN_SCRIPTING\");\n    }\n    return this;\n  },\n  matchINITIAL: function () {\n    while (this.offset < this.size) {\n      let ch = this.input();\n      if (ch == \"<\") {\n        ch = this.ahead(1);\n        if (ch == \"?\") {\n          if (this.tryMatch(\"?=\")) {\n            this.unput(1)\n              .appendToken(this.tok.T_OPEN_TAG_WITH_ECHO, 3)\n              .nextINITIAL();\n            break;\n          } else if (this.tryMatchCaseless(\"?php\")) {\n            ch = this._input[this.offset + 4];\n            if (ch === \" \" || ch === \"\\t\" || ch === \"\\n\" || ch === \"\\r\") {\n              this.unput(1).appendToken(this.tok.T_OPEN_TAG, 6).nextINITIAL();\n              break;\n            }\n          }\n          if (this.short_tags) {\n            this.unput(1).appendToken(this.tok.T_OPEN_TAG, 2).nextINITIAL();\n            break;\n          }\n        } else if (this.asp_tags && ch == \"%\") {\n          if (this.tryMatch(\"%=\")) {\n            this.aspTagMode = true;\n            this.unput(1)\n              .appendToken(this.tok.T_OPEN_TAG_WITH_ECHO, 3)\n              .nextINITIAL();\n            break;\n          } else {\n            this.aspTagMode = true;\n            this.unput(1).appendToken(this.tok.T_OPEN_TAG, 2).nextINITIAL();\n            break;\n          }\n        }\n      }\n    }\n    if (this.yytext.length > 0) {\n      return this.tok.T_INLINE_HTML;\n    } else {\n      return false;\n    }\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\n/* istanbul ignore else  */\nlet MAX_LENGTH_OF_LONG = 10;\nlet long_min_digits = \"2147483648\";\nif (process.arch == \"x64\") {\n  MAX_LENGTH_OF_LONG = 19;\n  long_min_digits = \"9223372036854775808\";\n}\n\nmodule.exports = {\n  consume_NUM: function () {\n    let ch = this.yytext[0];\n    let hasPoint = ch === \".\";\n    if (ch === \"0\") {\n      ch = this.input();\n      // check if hexa\n      if (ch === \"x\" || ch === \"X\") {\n        ch = this.input();\n        if (ch !== \"_\" && this.is_HEX()) {\n          return this.consume_HNUM();\n        } else {\n          this.unput(ch ? 2 : 1);\n        }\n        // check binary notation\n      } else if (ch === \"b\" || ch === \"B\") {\n        ch = this.input();\n        if ((ch !== \"_\" && ch === \"0\") || ch === \"1\") {\n          return this.consume_BNUM();\n        } else {\n          this.unput(ch ? 2 : 1);\n        }\n        // @fixme check octal notation ? not usefull\n      } else if (!this.is_NUM()) {\n        if (ch) this.unput(1);\n      }\n    }\n\n    while (this.offset < this.size) {\n      const prev = ch;\n      ch = this.input();\n\n      if (ch === \"_\") {\n        if (prev === \"_\") {\n          // restriction : next to underscore / 1__1;\n          this.unput(2); // keep 1\n          break;\n        }\n        if (prev === \".\") {\n          // next to decimal point  \"1._0\"\n          this.unput(1); // keep 1.\n          break;\n        }\n        if (prev === \"e\" || prev === \"E\") {\n          // next to e \"1e_10\"\n          this.unput(2); // keep 1\n          break;\n        }\n      } else if (ch === \".\") {\n        if (hasPoint) {\n          // no multiple points \"1.0.5\"\n          this.unput(1); // keep 1.0\n          break;\n        }\n        if (prev === \"_\") {\n          // next to decimal point  \"1_.0\"\n          this.unput(2); // keep 1\n          break;\n        }\n        hasPoint = true;\n        continue;\n      } else if (ch === \"e\" || ch === \"E\") {\n        if (prev === \"_\") {\n          // next to e \"1_e10\"\n          this.unput(1);\n          break;\n        }\n        let undo = 2;\n        ch = this.input();\n        if (ch === \"+\" || ch === \"-\") {\n          // 1e-5\n          undo = 3;\n          ch = this.input();\n        }\n        if (this.is_NUM_START()) {\n          this.consume_LNUM();\n          return this.tok.T_DNUMBER;\n        }\n        this.unput(ch ? undo : undo - 1); // keep only 1\n        break;\n      }\n\n      if (!this.is_NUM()) {\n        // example : 10.0a\n        if (ch) this.unput(1); // keep 10.0\n        break;\n      }\n    }\n\n    if (hasPoint) {\n      return this.tok.T_DNUMBER;\n    } else if (this.yytext.length < MAX_LENGTH_OF_LONG - 1) {\n      return this.tok.T_LNUMBER;\n    } else {\n      if (\n        this.yytext.length < MAX_LENGTH_OF_LONG ||\n        (this.yytext.length == MAX_LENGTH_OF_LONG &&\n          this.yytext < long_min_digits)\n      ) {\n        return this.tok.T_LNUMBER;\n      }\n      return this.tok.T_DNUMBER;\n    }\n  },\n  // read hexa\n  consume_HNUM: function () {\n    while (this.offset < this.size) {\n      const ch = this.input();\n      if (!this.is_HEX()) {\n        if (ch) this.unput(1);\n        break;\n      }\n    }\n    return this.tok.T_LNUMBER;\n  },\n  // read a generic number\n  consume_LNUM: function () {\n    while (this.offset < this.size) {\n      const ch = this.input();\n      if (!this.is_NUM()) {\n        if (ch) this.unput(1);\n        break;\n      }\n    }\n    return this.tok.T_LNUMBER;\n  },\n  // read binary\n  consume_BNUM: function () {\n    let ch;\n    while (this.offset < this.size) {\n      ch = this.input();\n      if (ch !== \"0\" && ch !== \"1\" && ch !== \"_\") {\n        if (ch) this.unput(1);\n        break;\n      }\n    }\n    return this.tok.T_LNUMBER;\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  matchST_LOOKING_FOR_PROPERTY: function () {\n    let ch = this.input();\n    if (ch === \"-\") {\n      ch = this.input();\n      if (ch === \">\") {\n        // https://github.com/php/php-src/blob/master/Zend/zend_language_scanner.l#L1296\n        return this.tok.T_OBJECT_OPERATOR;\n      }\n      if (ch) this.unput(1);\n    } else if (this.is_WHITESPACE()) {\n      return this.tok.T_WHITESPACE;\n    } else if (this.is_LABEL_START()) {\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_scanner.l#L1300\n      this.consume_LABEL();\n      this.popState();\n      return this.tok.T_STRING;\n    }\n    // https://github.com/php/php-src/blob/master/Zend/zend_language_scanner.l#L1306\n    this.popState();\n    if (ch) this.unput(1);\n    return false;\n  },\n  matchST_LOOKING_FOR_VARNAME: function () {\n    let ch = this.input();\n\n    // SHIFT STATE\n    this.popState();\n    this.begin(\"ST_IN_SCRIPTING\");\n\n    if (this.is_LABEL_START()) {\n      this.consume_LABEL();\n      ch = this.input();\n      if (ch === \"[\" || ch === \"}\") {\n        this.unput(1);\n        return this.tok.T_STRING_VARNAME;\n      } else {\n        // any char (that's started with a label sequence)\n        this.unput(this.yytext.length);\n      }\n    } else {\n      // any char (thats not a label start sequence)\n      if (ch) this.unput(1);\n    }\n    // stops looking for a varname and starts the scripting mode\n    return false;\n  },\n  matchST_VAR_OFFSET: function () {\n    const ch = this.input();\n    if (this.is_NUM_START()) {\n      this.consume_NUM();\n      return this.tok.T_NUM_STRING;\n    } else if (ch === \"]\") {\n      this.popState();\n      return \"]\";\n    } else if (ch === \"$\") {\n      this.input();\n      if (this.is_LABEL_START()) {\n        this.consume_LABEL();\n        return this.tok.T_VARIABLE;\n      } else {\n        throw new Error(\"Unexpected terminal\");\n      }\n    } else if (this.is_LABEL_START()) {\n      this.consume_LABEL();\n      return this.tok.T_STRING;\n    } else if (\n      this.is_WHITESPACE() ||\n      ch === \"\\\\\" ||\n      ch === \"'\" ||\n      ch === \"#\"\n    ) {\n      return this.tok.T_ENCAPSED_AND_WHITESPACE;\n    } else if (\n      ch === \"[\" ||\n      ch === \"{\" ||\n      ch === \"}\" ||\n      ch === '\"' ||\n      ch === \"`\" ||\n      this.is_TOKEN()\n    ) {\n      return ch;\n    } else {\n      throw new Error(\"Unexpected terminal\");\n    }\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  matchST_IN_SCRIPTING: function () {\n    let ch = this.input();\n    switch (ch) {\n      case \" \":\n      case \"\\t\":\n      case \"\\n\":\n      case \"\\r\":\n      case \"\\r\\n\":\n        return this.T_WHITESPACE();\n      case \"#\":\n        return this.T_COMMENT();\n      case \"/\":\n        if (this._input[this.offset] === \"/\") {\n          return this.T_COMMENT();\n        } else if (this._input[this.offset] === \"*\") {\n          this.input();\n          return this.T_DOC_COMMENT();\n        }\n        return this.consume_TOKEN();\n      case \"'\":\n        return this.T_CONSTANT_ENCAPSED_STRING();\n      case '\"':\n        return this.ST_DOUBLE_QUOTES();\n      case \"`\":\n        this.begin(\"ST_BACKQUOTE\");\n        return \"`\";\n      case \"?\":\n        if (!this.aspTagMode && this.tryMatch(\">\")) {\n          this.input();\n          const nextCH = this._input[this.offset];\n          if (nextCH === \"\\n\" || nextCH === \"\\r\") this.input();\n          if (this.conditionStack.length > 1) {\n            this.begin(\"INITIAL\");\n          }\n          return this.tok.T_CLOSE_TAG;\n        }\n        return this.consume_TOKEN();\n      case \"%\":\n        if (this.aspTagMode && this._input[this.offset] === \">\") {\n          this.input(); // consume the '>'\n          ch = this._input[this.offset]; // read next\n          if (ch === \"\\n\" || ch === \"\\r\") {\n            this.input(); // consume the newline\n          }\n          this.aspTagMode = false;\n          if (this.conditionStack.length > 1) {\n            this.begin(\"INITIAL\");\n          }\n          return this.tok.T_CLOSE_TAG;\n        }\n        return this.consume_TOKEN();\n      case \"{\":\n        this.begin(\"ST_IN_SCRIPTING\");\n        return \"{\";\n      case \"}\":\n        if (this.conditionStack.length > 2) {\n          // Return to HEREDOC/ST_DOUBLE_QUOTES mode\n          this.popState();\n        }\n        return \"}\";\n      default:\n        if (ch === \".\") {\n          ch = this.input();\n          if (this.is_NUM_START()) {\n            return this.consume_NUM();\n          } else {\n            if (ch) this.unput(1);\n          }\n        }\n        if (this.is_NUM_START()) {\n          return this.consume_NUM();\n        } else if (this.is_LABEL_START()) {\n          return this.consume_LABEL().T_STRING();\n        } else if (this.is_TOKEN()) {\n          return this.consume_TOKEN();\n        }\n    }\n    throw new Error(\n      'Bad terminal sequence \"' +\n        ch +\n        '\" at line ' +\n        this.yylineno +\n        \" (offset \" +\n        this.offset +\n        \")\"\n    );\n  },\n\n  T_WHITESPACE: function () {\n    while (this.offset < this.size) {\n      const ch = this.input();\n      if (ch === \" \" || ch === \"\\t\" || ch === \"\\n\" || ch === \"\\r\") {\n        continue;\n      }\n      if (ch) this.unput(1);\n      break;\n    }\n    return this.tok.T_WHITESPACE;\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst newline = [\"\\n\", \"\\r\"];\nconst valid_after_heredoc = [\"\\n\", \"\\r\", \";\"];\nconst valid_after_heredoc_73 = valid_after_heredoc.concat([\n  \"\\t\",\n  \" \",\n  \",\",\n  \"]\",\n  \")\",\n  \"/\",\n  \"=\",\n  \"!\",\n]);\n\nmodule.exports = {\n  T_CONSTANT_ENCAPSED_STRING: function () {\n    let ch;\n    while (this.offset < this.size) {\n      ch = this.input();\n      if (ch == \"\\\\\") {\n        this.input();\n      } else if (ch == \"'\") {\n        break;\n      }\n    }\n    return this.tok.T_CONSTANT_ENCAPSED_STRING;\n  },\n  // check if matching a HEREDOC state\n  is_HEREDOC: function () {\n    const revert = this.offset;\n    if (\n      this._input[this.offset - 1] === \"<\" &&\n      this._input[this.offset] === \"<\" &&\n      this._input[this.offset + 1] === \"<\"\n    ) {\n      this.offset += 3;\n\n      // optional tabs / spaces\n      if (this.is_TABSPACE()) {\n        while (this.offset < this.size) {\n          this.offset++;\n          if (!this.is_TABSPACE()) {\n            break;\n          }\n        }\n      }\n\n      // optional quotes\n      let tChar = this._input[this.offset - 1];\n      if (tChar === \"'\" || tChar === '\"') {\n        this.offset++;\n      } else {\n        tChar = null;\n      }\n\n      // required label\n      if (this.is_LABEL_START()) {\n        let yyoffset = this.offset - 1;\n        while (this.offset < this.size) {\n          this.offset++;\n          if (!this.is_LABEL()) {\n            break;\n          }\n        }\n        const yylabel = this._input.substring(yyoffset, this.offset - 1);\n        if (!tChar || tChar === this._input[this.offset - 1]) {\n          // required ending quote\n          if (tChar) this.offset++;\n          // require newline\n          if (newline.includes(this._input[this.offset - 1])) {\n            // go go go\n            this.heredoc_label.label = yylabel;\n            this.heredoc_label.length = yylabel.length;\n            this.heredoc_label.finished = false;\n            yyoffset = this.offset - revert;\n            this.offset = revert;\n            this.consume(yyoffset);\n            if (tChar === \"'\") {\n              this.begin(\"ST_NOWDOC\");\n            } else {\n              this.begin(\"ST_HEREDOC\");\n            }\n            // prematch to get the indentation information from end of doc\n            this.prematch_ENDOFDOC();\n            return this.tok.T_START_HEREDOC;\n          }\n        }\n      }\n    }\n    this.offset = revert;\n    return false;\n  },\n  ST_DOUBLE_QUOTES: function () {\n    let ch;\n    while (this.offset < this.size) {\n      ch = this.input();\n      if (ch == \"\\\\\") {\n        this.input();\n      } else if (ch == '\"') {\n        break;\n      } else if (ch == \"$\") {\n        ch = this.input();\n        if (ch == \"{\" || this.is_LABEL_START()) {\n          this.unput(2);\n          break;\n        }\n        if (ch) this.unput(1);\n      } else if (ch == \"{\") {\n        ch = this.input();\n        if (ch == \"$\") {\n          this.unput(2);\n          break;\n        }\n        if (ch) this.unput(1);\n      }\n    }\n    if (ch == '\"') {\n      return this.tok.T_CONSTANT_ENCAPSED_STRING;\n    } else {\n      let prefix = 1;\n      if (this.yytext[0] === \"b\" || this.yytext[0] === \"B\") {\n        prefix = 2;\n      }\n      if (this.yytext.length > 2) {\n        this.appendToken(\n          this.tok.T_ENCAPSED_AND_WHITESPACE,\n          this.yytext.length - prefix\n        );\n      }\n      this.unput(this.yytext.length - prefix);\n      this.begin(\"ST_DOUBLE_QUOTES\");\n      return this.yytext;\n    }\n  },\n\n  // check if its a DOC end sequence\n  isDOC_MATCH: function (offset, consumeLeadingSpaces) {\n    // @fixme : check if out of text limits\n\n    // consumeLeadingSpaces is false happen DOC prematch END HEREDOC stage.\n\n    // Ensure current state is really after a new line break, not after a such as ${variables}\n    const prev_ch = this._input[offset - 2];\n    if (!newline.includes(prev_ch)) {\n      return false;\n    }\n\n    // skip leading spaces or tabs\n    let indentation_uses_spaces = false;\n    let indentation_uses_tabs = false;\n    // reset heredoc_label structure\n    let indentation = 0;\n    let leading_ch = this._input[offset - 1];\n\n    if (this.version >= 703) {\n      while (leading_ch === \"\\t\" || leading_ch === \" \") {\n        if (leading_ch === \" \") {\n          indentation_uses_spaces = true;\n        } else if (leading_ch === \"\\t\") {\n          indentation_uses_tabs = true;\n        }\n\n        leading_ch = this._input[offset + indentation];\n        indentation++;\n      }\n\n      // Move offset to skip leading whitespace\n      offset = offset + indentation;\n\n      // return out if there was only whitespace on this line\n      if (newline.includes(this._input[offset - 1])) {\n        return false;\n      }\n    }\n\n    if (\n      this._input.substring(\n        offset - 1,\n        offset - 1 + this.heredoc_label.length\n      ) === this.heredoc_label.label\n    ) {\n      const ch = this._input[offset - 1 + this.heredoc_label.length];\n      if (\n        (this.version >= 703\n          ? valid_after_heredoc_73\n          : valid_after_heredoc\n        ).includes(ch)\n      ) {\n        if (consumeLeadingSpaces) {\n          this.consume(indentation);\n          // https://wiki.php.net/rfc/flexible_heredoc_nowdoc_syntaxes\n          if (indentation_uses_spaces && indentation_uses_tabs) {\n            throw new Error(\n              \"Parse error:  mixing spaces and tabs in ending marker at line \" +\n                this.yylineno +\n                \" (offset \" +\n                this.offset +\n                \")\"\n            );\n          }\n        } else {\n          // Called in prematch_ENDOFDOC\n          this.heredoc_label.indentation = indentation;\n          this.heredoc_label.indentation_uses_spaces = indentation_uses_spaces;\n          this.heredoc_label.first_encaps_node = true;\n        }\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /*\n   * Prematch the end of HEREDOC/NOWDOC end tag to preset the\n   * context of this.heredoc_label\n   */\n  prematch_ENDOFDOC: function () {\n    // reset heredoc\n    this.heredoc_label.indentation_uses_spaces = false;\n    this.heredoc_label.indentation = 0;\n    this.heredoc_label.first_encaps_node = true;\n    let offset = this.offset + 1;\n\n    while (offset < this._input.length) {\n      // if match heredoc_label structrue will be set\n      if (this.isDOC_MATCH(offset, false)) {\n        return;\n      }\n\n      if (!newline.includes(this._input[offset - 1])) {\n        // skip one line\n        while (\n          !newline.includes(this._input[offset++]) &&\n          offset < this._input.length\n        ) {\n          // skip\n        }\n      }\n\n      offset++;\n    }\n  },\n\n  matchST_NOWDOC: function () {\n    // edge case : empty now doc\n    if (this.isDOC_MATCH(this.offset, true)) {\n      // @fixme : never reached (may be caused by quotes)\n      this.consume(this.heredoc_label.length);\n      this.popState();\n      return this.tok.T_END_HEREDOC;\n    }\n    // SCANNING CONTENTS\n    let ch = this._input[this.offset - 1];\n    while (this.offset < this.size) {\n      if (newline.includes(ch)) {\n        ch = this.input();\n        if (this.isDOC_MATCH(this.offset, true)) {\n          this.unput(1).popState();\n          this.appendToken(this.tok.T_END_HEREDOC, this.heredoc_label.length);\n          return this.tok.T_ENCAPSED_AND_WHITESPACE;\n        }\n      } else {\n        ch = this.input();\n      }\n    }\n    // too bad ! reached end of document (will get a parse error)\n    return this.tok.T_ENCAPSED_AND_WHITESPACE;\n  },\n\n  matchST_HEREDOC: function () {\n    // edge case : empty here doc\n    let ch = this.input();\n    if (this.isDOC_MATCH(this.offset, true)) {\n      this.consume(this.heredoc_label.length - 1);\n      this.popState();\n      return this.tok.T_END_HEREDOC;\n    }\n    // SCANNING CONTENTS\n    while (this.offset < this.size) {\n      if (ch === \"\\\\\") {\n        ch = this.input(); // ignore next\n        if (!newline.includes(ch)) {\n          ch = this.input();\n        }\n      }\n\n      if (newline.includes(ch)) {\n        ch = this.input();\n        if (this.isDOC_MATCH(this.offset, true)) {\n          this.unput(1).popState();\n          this.appendToken(this.tok.T_END_HEREDOC, this.heredoc_label.length);\n          return this.tok.T_ENCAPSED_AND_WHITESPACE;\n        }\n      } else if (ch === \"$\") {\n        ch = this.input();\n        if (ch === \"{\") {\n          // start of ${\n          this.begin(\"ST_LOOKING_FOR_VARNAME\");\n          if (this.yytext.length > 2) {\n            this.appendToken(this.tok.T_DOLLAR_OPEN_CURLY_BRACES, 2);\n            this.unput(2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            return this.tok.T_DOLLAR_OPEN_CURLY_BRACES;\n          }\n        } else if (this.is_LABEL_START()) {\n          // start of $var...\n          const yyoffset = this.offset;\n          const next = this.consume_VARIABLE();\n          if (this.yytext.length > this.offset - yyoffset + 2) {\n            this.appendToken(next, this.offset - yyoffset + 2);\n            this.unput(this.offset - yyoffset + 2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            return next;\n          }\n          //console.log(this.yytext);\n        }\n      } else if (ch === \"{\") {\n        ch = this.input();\n        if (ch === \"$\") {\n          // start of {$...\n          this.begin(\"ST_IN_SCRIPTING\");\n          if (this.yytext.length > 2) {\n            this.appendToken(this.tok.T_CURLY_OPEN, 1);\n            this.unput(2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            this.unput(1);\n            return this.tok.T_CURLY_OPEN;\n          }\n        }\n      } else {\n        ch = this.input();\n      }\n    }\n\n    // too bad ! reached end of document (will get a parse error)\n    return this.tok.T_ENCAPSED_AND_WHITESPACE;\n  },\n\n  consume_VARIABLE: function () {\n    this.consume_LABEL();\n    const ch = this.input();\n    if (ch == \"[\") {\n      this.unput(1);\n      this.begin(\"ST_VAR_OFFSET\");\n      return this.tok.T_VARIABLE;\n    } else if (ch === \"-\") {\n      if (this.input() === \">\") {\n        this.input();\n        if (this.is_LABEL_START()) {\n          this.begin(\"ST_LOOKING_FOR_PROPERTY\");\n        }\n        this.unput(3);\n        return this.tok.T_VARIABLE;\n      } else {\n        this.unput(2);\n      }\n    } else {\n      if (ch) this.unput(1);\n    }\n    return this.tok.T_VARIABLE;\n  },\n  // HANDLES BACKQUOTES\n  matchST_BACKQUOTE: function () {\n    let ch = this.input();\n    if (ch === \"$\") {\n      ch = this.input();\n      if (ch === \"{\") {\n        this.begin(\"ST_LOOKING_FOR_VARNAME\");\n        return this.tok.T_DOLLAR_OPEN_CURLY_BRACES;\n      } else if (this.is_LABEL_START()) {\n        const tok = this.consume_VARIABLE();\n        return tok;\n      }\n    } else if (ch === \"{\") {\n      if (this._input[this.offset] === \"$\") {\n        this.begin(\"ST_IN_SCRIPTING\");\n        return this.tok.T_CURLY_OPEN;\n      }\n    } else if (ch === \"`\") {\n      this.popState();\n      return \"`\";\n    }\n\n    // any char\n    while (this.offset < this.size) {\n      if (ch === \"\\\\\") {\n        this.input();\n      } else if (ch === \"`\") {\n        this.unput(1);\n        this.popState();\n        this.appendToken(\"`\", 1);\n        break;\n      } else if (ch === \"$\") {\n        ch = this.input();\n        if (ch === \"{\") {\n          this.begin(\"ST_LOOKING_FOR_VARNAME\");\n          if (this.yytext.length > 2) {\n            this.appendToken(this.tok.T_DOLLAR_OPEN_CURLY_BRACES, 2);\n            this.unput(2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            return this.tok.T_DOLLAR_OPEN_CURLY_BRACES;\n          }\n        } else if (this.is_LABEL_START()) {\n          // start of $var...\n          const yyoffset = this.offset;\n          const next = this.consume_VARIABLE();\n          if (this.yytext.length > this.offset - yyoffset + 2) {\n            this.appendToken(next, this.offset - yyoffset + 2);\n            this.unput(this.offset - yyoffset + 2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            return next;\n          }\n        }\n        continue;\n      } else if (ch === \"{\") {\n        ch = this.input();\n        if (ch === \"$\") {\n          // start of {$...\n          this.begin(\"ST_IN_SCRIPTING\");\n          if (this.yytext.length > 2) {\n            this.appendToken(this.tok.T_CURLY_OPEN, 1);\n            this.unput(2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            this.unput(1);\n            return this.tok.T_CURLY_OPEN;\n          }\n        }\n        continue;\n      }\n      ch = this.input();\n    }\n    return this.tok.T_ENCAPSED_AND_WHITESPACE;\n  },\n\n  matchST_DOUBLE_QUOTES: function () {\n    let ch = this.input();\n    if (ch === \"$\") {\n      ch = this.input();\n      if (ch === \"{\") {\n        this.begin(\"ST_LOOKING_FOR_VARNAME\");\n        return this.tok.T_DOLLAR_OPEN_CURLY_BRACES;\n      } else if (this.is_LABEL_START()) {\n        const tok = this.consume_VARIABLE();\n        return tok;\n      }\n    } else if (ch === \"{\") {\n      if (this._input[this.offset] === \"$\") {\n        this.begin(\"ST_IN_SCRIPTING\");\n        return this.tok.T_CURLY_OPEN;\n      }\n    } else if (ch === '\"') {\n      this.popState();\n      return '\"';\n    }\n\n    // any char\n    while (this.offset < this.size) {\n      if (ch === \"\\\\\") {\n        this.input();\n      } else if (ch === '\"') {\n        this.unput(1);\n        this.popState();\n        this.appendToken('\"', 1);\n        break;\n      } else if (ch === \"$\") {\n        ch = this.input();\n        if (ch === \"{\") {\n          this.begin(\"ST_LOOKING_FOR_VARNAME\");\n          if (this.yytext.length > 2) {\n            this.appendToken(this.tok.T_DOLLAR_OPEN_CURLY_BRACES, 2);\n            this.unput(2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            return this.tok.T_DOLLAR_OPEN_CURLY_BRACES;\n          }\n        } else if (this.is_LABEL_START()) {\n          // start of $var...\n          const yyoffset = this.offset;\n          const next = this.consume_VARIABLE();\n          if (this.yytext.length > this.offset - yyoffset + 2) {\n            this.appendToken(next, this.offset - yyoffset + 2);\n            this.unput(this.offset - yyoffset + 2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            return next;\n          }\n        }\n        if (ch) this.unput(1);\n      } else if (ch === \"{\") {\n        ch = this.input();\n        if (ch === \"$\") {\n          // start of {$...\n          this.begin(\"ST_IN_SCRIPTING\");\n          if (this.yytext.length > 2) {\n            this.appendToken(this.tok.T_CURLY_OPEN, 1);\n            this.unput(2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            // @fixme : yytext = '\"{$' (this.yytext.length > 3)\n            this.unput(1);\n            return this.tok.T_CURLY_OPEN;\n          }\n        }\n        if (ch) this.unput(1);\n      }\n      ch = this.input();\n    }\n    return this.tok.T_ENCAPSED_AND_WHITESPACE;\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  T_STRING: function () {\n    const token = this.yytext.toLowerCase();\n    let id = this.keywords[token];\n    if (typeof id !== \"number\") {\n      if (token === \"yield\") {\n        if (this.version >= 700 && this.tryMatch(\" from\")) {\n          this.consume(5);\n          id = this.tok.T_YIELD_FROM;\n        } else {\n          id = this.tok.T_YIELD;\n        }\n      } else {\n        id = this.tok.T_STRING;\n        if (token === \"b\" || token === \"B\") {\n          const ch = this.input(1);\n          if (ch === '\"') {\n            return this.ST_DOUBLE_QUOTES();\n          } else if (ch === \"'\") {\n            return this.T_CONSTANT_ENCAPSED_STRING();\n          } else if (ch) {\n            this.unput(1);\n          }\n        }\n      }\n    }\n    return id;\n  },\n  // reads a custom token\n  consume_TOKEN: function () {\n    const ch = this._input[this.offset - 1];\n    const fn = this.tokenTerminals[ch];\n    if (fn) {\n      return fn.apply(this, []);\n    } else {\n      return this.yytext;\n    }\n  },\n  // list of special char tokens\n  tokenTerminals: {\n    $: function () {\n      this.offset++;\n      if (this.is_LABEL_START()) {\n        this.offset--;\n        this.consume_LABEL();\n        return this.tok.T_VARIABLE;\n      } else {\n        this.offset--;\n        return \"$\";\n      }\n    },\n    \"-\": function () {\n      const nchar = this._input[this.offset];\n      if (nchar === \">\") {\n        this.begin(\"ST_LOOKING_FOR_PROPERTY\").input();\n        return this.tok.T_OBJECT_OPERATOR;\n      } else if (nchar === \"-\") {\n        this.input();\n        return this.tok.T_DEC;\n      } else if (nchar === \"=\") {\n        this.input();\n        return this.tok.T_MINUS_EQUAL;\n      }\n      return \"-\";\n    },\n    \"\\\\\": function () {\n      return this.tok.T_NS_SEPARATOR;\n    },\n    \"/\": function () {\n      if (this._input[this.offset] === \"=\") {\n        this.input();\n        return this.tok.T_DIV_EQUAL;\n      }\n      return \"/\";\n    },\n    \":\": function () {\n      if (this._input[this.offset] === \":\") {\n        this.input();\n        return this.tok.T_DOUBLE_COLON;\n      } else {\n        return \":\";\n      }\n    },\n    \"(\": function () {\n      const initial = this.offset;\n      this.input();\n      if (this.is_TABSPACE()) {\n        this.consume_TABSPACE().input();\n      }\n      if (this.is_LABEL_START()) {\n        const yylen = this.yytext.length;\n        this.consume_LABEL();\n        const castToken = this.yytext.substring(yylen - 1).toLowerCase();\n        const castId = this.castKeywords[castToken];\n        if (typeof castId === \"number\") {\n          this.input();\n          if (this.is_TABSPACE()) {\n            this.consume_TABSPACE().input();\n          }\n          if (this._input[this.offset - 1] === \")\") {\n            return castId;\n          }\n        }\n      }\n      // revert the check\n      this.unput(this.offset - initial);\n      return \"(\";\n    },\n    \"=\": function () {\n      const nchar = this._input[this.offset];\n      if (nchar === \">\") {\n        this.input();\n        return this.tok.T_DOUBLE_ARROW;\n      } else if (nchar === \"=\") {\n        if (this._input[this.offset + 1] === \"=\") {\n          this.consume(2);\n          return this.tok.T_IS_IDENTICAL;\n        } else {\n          this.input();\n          return this.tok.T_IS_EQUAL;\n        }\n      }\n      return \"=\";\n    },\n    \"+\": function () {\n      const nchar = this._input[this.offset];\n      if (nchar === \"+\") {\n        this.input();\n        return this.tok.T_INC;\n      } else if (nchar === \"=\") {\n        this.input();\n        return this.tok.T_PLUS_EQUAL;\n      }\n      return \"+\";\n    },\n    \"!\": function () {\n      if (this._input[this.offset] === \"=\") {\n        if (this._input[this.offset + 1] === \"=\") {\n          this.consume(2);\n          return this.tok.T_IS_NOT_IDENTICAL;\n        } else {\n          this.input();\n          return this.tok.T_IS_NOT_EQUAL;\n        }\n      }\n      return \"!\";\n    },\n    \"?\": function () {\n      if (this.version >= 700 && this._input[this.offset] === \"?\") {\n        if (this.version >= 704 && this._input[this.offset + 1] === \"=\") {\n          this.consume(2);\n          return this.tok.T_COALESCE_EQUAL;\n        } else {\n          this.input();\n          return this.tok.T_COALESCE;\n        }\n      }\n      return \"?\";\n    },\n    \"<\": function () {\n      let nchar = this._input[this.offset];\n      if (nchar === \"<\") {\n        nchar = this._input[this.offset + 1];\n        if (nchar === \"=\") {\n          this.consume(2);\n          return this.tok.T_SL_EQUAL;\n        } else if (nchar === \"<\") {\n          if (this.is_HEREDOC()) {\n            return this.tok.T_START_HEREDOC;\n          }\n        }\n        this.input();\n        return this.tok.T_SL;\n      } else if (nchar === \"=\") {\n        this.input();\n        if (this.version >= 700 && this._input[this.offset] === \">\") {\n          this.input();\n          return this.tok.T_SPACESHIP;\n        } else {\n          return this.tok.T_IS_SMALLER_OR_EQUAL;\n        }\n      } else if (nchar === \">\") {\n        this.input();\n        return this.tok.T_IS_NOT_EQUAL;\n      }\n      return \"<\";\n    },\n    \">\": function () {\n      let nchar = this._input[this.offset];\n      if (nchar === \"=\") {\n        this.input();\n        return this.tok.T_IS_GREATER_OR_EQUAL;\n      } else if (nchar === \">\") {\n        nchar = this._input[this.offset + 1];\n        if (nchar === \"=\") {\n          this.consume(2);\n          return this.tok.T_SR_EQUAL;\n        } else {\n          this.input();\n          return this.tok.T_SR;\n        }\n      }\n      return \">\";\n    },\n    \"*\": function () {\n      const nchar = this._input[this.offset];\n      if (nchar === \"=\") {\n        this.input();\n        return this.tok.T_MUL_EQUAL;\n      } else if (nchar === \"*\") {\n        this.input();\n        if (this._input[this.offset] === \"=\") {\n          this.input();\n          return this.tok.T_POW_EQUAL;\n        } else {\n          return this.tok.T_POW;\n        }\n      }\n      return \"*\";\n    },\n    \".\": function () {\n      const nchar = this._input[this.offset];\n      if (nchar === \"=\") {\n        this.input();\n        return this.tok.T_CONCAT_EQUAL;\n      } else if (nchar === \".\" && this._input[this.offset + 1] === \".\") {\n        this.consume(2);\n        return this.tok.T_ELLIPSIS;\n      }\n      return \".\";\n    },\n    \"%\": function () {\n      if (this._input[this.offset] === \"=\") {\n        this.input();\n        return this.tok.T_MOD_EQUAL;\n      }\n      return \"%\";\n    },\n    \"&\": function () {\n      const nchar = this._input[this.offset];\n      if (nchar === \"=\") {\n        this.input();\n        return this.tok.T_AND_EQUAL;\n      } else if (nchar === \"&\") {\n        this.input();\n        return this.tok.T_BOOLEAN_AND;\n      }\n      return \"&\";\n    },\n    \"|\": function () {\n      const nchar = this._input[this.offset];\n      if (nchar === \"=\") {\n        this.input();\n        return this.tok.T_OR_EQUAL;\n      } else if (nchar === \"|\") {\n        this.input();\n        return this.tok.T_BOOLEAN_OR;\n      }\n      return \"|\";\n    },\n    \"^\": function () {\n      if (this._input[this.offset] === \"=\") {\n        this.input();\n        return this.tok.T_XOR_EQUAL;\n      }\n      return \"^\";\n    },\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst tokens = \";:,.\\\\[]()|^&+-/*=%!~$<>?@\";\n\nmodule.exports = {\n  // check if the char can be a numeric\n  is_NUM: function () {\n    const ch = this._input.charCodeAt(this.offset - 1);\n    return (ch > 47 && ch < 58) || ch === 95;\n  },\n\n  // check if the char can be a numeric\n  is_NUM_START: function () {\n    const ch = this._input.charCodeAt(this.offset - 1);\n    return ch > 47 && ch < 58;\n  },\n\n  // check if current char can be a label\n  is_LABEL: function () {\n    const ch = this._input.charCodeAt(this.offset - 1);\n    return (\n      (ch > 96 && ch < 123) ||\n      (ch > 64 && ch < 91) ||\n      ch === 95 ||\n      (ch > 47 && ch < 58) ||\n      ch > 126\n    );\n  },\n\n  // check if current char can be a label\n  is_LABEL_START: function () {\n    const ch = this._input.charCodeAt(this.offset - 1);\n    // A - Z\n    if (ch > 64 && ch < 91) return true;\n    // a - z\n    if (ch > 96 && ch < 123) return true;\n    // _ (95)\n    if (ch === 95) return true;\n    // utf8 / extended\n    if (ch > 126) return true;\n    // else\n    return false;\n  },\n\n  // reads each char of the label\n  consume_LABEL: function () {\n    while (this.offset < this.size) {\n      const ch = this.input();\n      if (!this.is_LABEL()) {\n        if (ch) this.unput(1);\n        break;\n      }\n    }\n    return this;\n  },\n\n  // check if current char is a token char\n  is_TOKEN: function () {\n    const ch = this._input[this.offset - 1];\n    return tokens.indexOf(ch) !== -1;\n  },\n  // check if current char is a whitespace\n  is_WHITESPACE: function () {\n    const ch = this._input[this.offset - 1];\n    return ch === \" \" || ch === \"\\t\" || ch === \"\\n\" || ch === \"\\r\";\n  },\n  // check if current char is a whitespace (without newlines)\n  is_TABSPACE: function () {\n    const ch = this._input[this.offset - 1];\n    return ch === \" \" || ch === \"\\t\";\n  },\n  // consume all whitespaces (excluding newlines)\n  consume_TABSPACE: function () {\n    while (this.offset < this.size) {\n      const ch = this.input();\n      if (!this.is_TABSPACE()) {\n        if (ch) this.unput(1);\n        break;\n      }\n    }\n    return this;\n  },\n  // check if current char can be a hexadecimal number\n  is_HEX: function () {\n    const ch = this._input.charCodeAt(this.offset - 1);\n    // 0 - 9\n    if (ch > 47 && ch < 58) return true;\n    // A - F\n    if (ch > 64 && ch < 71) return true;\n    // a - f\n    if (ch > 96 && ch < 103) return true;\n    // _ (code 95)\n    if (ch === 95) return true;\n    // else\n    return false;\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\n/**\n * @private\n */\nfunction isNumber(n) {\n  return n != \".\" && n != \",\" && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * The PHP Parser class that build the AST tree from the lexer\n *\n * @constructor Parser\n * @memberOf module:php-parser\n * @tutorial Parser\n * @property {Lexer} lexer - current lexer instance\n * @property {AST} ast - the AST factory instance\n * @property {number|string} token - current token\n * @property {boolean} extractDoc - should extract documentation as AST node\n * @property {boolean} extractTokens - should extract each token\n * @property {boolean} suppressErrors - should ignore parsing errors and continue\n * @property {boolean} debug - should output debug informations\n */\nconst Parser = function (lexer, ast) {\n  this.lexer = lexer;\n  this.ast = ast;\n  this.tok = lexer.tok;\n  this.EOF = lexer.EOF;\n  this.token = null;\n  this.prev = null;\n  this.debug = false;\n  this.version = 704;\n  this.extractDoc = false;\n  this.extractTokens = false;\n  this.suppressErrors = false;\n  const mapIt = function (item) {\n    return [item, null];\n  };\n  this.entries = {\n    // reserved_non_modifiers\n    IDENTIFIER: new Map(\n      [\n        this.tok.T_ABSTRACT,\n        this.tok.T_ARRAY,\n        this.tok.T_AS,\n        this.tok.T_BREAK,\n        this.tok.T_CALLABLE,\n        this.tok.T_CASE,\n        this.tok.T_CATCH,\n        this.tok.T_CLASS,\n        this.tok.T_CLASS_C,\n        this.tok.T_CLONE,\n        this.tok.T_CONST,\n        this.tok.T_CONTINUE,\n        this.tok.T_DECLARE,\n        this.tok.T_DEFAULT,\n        this.tok.T_DIR,\n        this.tok.T_DO,\n        this.tok.T_ECHO,\n        this.tok.T_ELSE,\n        this.tok.T_ELSEIF,\n        this.tok.T_EMPTY,\n        this.tok.T_ENDDECLARE,\n        this.tok.T_ENDFOR,\n        this.tok.T_ENDFOREACH,\n        this.tok.T_ENDIF,\n        this.tok.T_ENDSWITCH,\n        this.tok.T_ENDWHILE,\n        this.tok.T_EVAL,\n        this.tok.T_EXIT,\n        this.tok.T_EXTENDS,\n        this.tok.T_FILE,\n        this.tok.T_FINAL,\n        this.tok.T_FINALLY,\n        this.tok.T_FN,\n        this.tok.T_FOR,\n        this.tok.T_FOREACH,\n        this.tok.T_FUNC_C,\n        this.tok.T_FUNCTION,\n        this.tok.T_GLOBAL,\n        this.tok.T_GOTO,\n        this.tok.T_IF,\n        this.tok.T_IMPLEMENTS,\n        this.tok.T_INCLUDE,\n        this.tok.T_INCLUDE_ONCE,\n        this.tok.T_INSTANCEOF,\n        this.tok.T_INSTEADOF,\n        this.tok.T_INTERFACE,\n        this.tok.T_ISSET,\n        this.tok.T_LINE,\n        this.tok.T_LIST,\n        this.tok.T_LOGICAL_AND,\n        this.tok.T_LOGICAL_OR,\n        this.tok.T_LOGICAL_XOR,\n        this.tok.T_METHOD_C,\n        this.tok.T_NAMESPACE,\n        this.tok.T_NEW,\n        this.tok.T_NS_C,\n        this.tok.T_PRINT,\n        this.tok.T_PRIVATE,\n        this.tok.T_PROTECTED,\n        this.tok.T_PUBLIC,\n        this.tok.T_REQUIRE,\n        this.tok.T_REQUIRE_ONCE,\n        this.tok.T_RETURN,\n        this.tok.T_STATIC,\n        this.tok.T_SWITCH,\n        this.tok.T_THROW,\n        this.tok.T_TRAIT,\n        this.tok.T_TRY,\n        this.tok.T_UNSET,\n        this.tok.T_USE,\n        this.tok.T_VAR,\n        this.tok.T_WHILE,\n        this.tok.T_YIELD,\n      ].map(mapIt)\n    ),\n    VARIABLE: new Map(\n      [\n        this.tok.T_VARIABLE,\n        \"$\",\n        \"&\",\n        this.tok.T_NS_SEPARATOR,\n        this.tok.T_STRING,\n        this.tok.T_NAMESPACE,\n        this.tok.T_STATIC,\n      ].map(mapIt)\n    ),\n    SCALAR: new Map(\n      [\n        this.tok.T_CONSTANT_ENCAPSED_STRING,\n        this.tok.T_START_HEREDOC,\n        this.tok.T_LNUMBER,\n        this.tok.T_DNUMBER,\n        this.tok.T_ARRAY,\n        \"[\",\n        this.tok.T_CLASS_C,\n        this.tok.T_TRAIT_C,\n        this.tok.T_FUNC_C,\n        this.tok.T_METHOD_C,\n        this.tok.T_LINE,\n        this.tok.T_FILE,\n        this.tok.T_DIR,\n        this.tok.T_NS_C,\n        '\"',\n        'b\"',\n        'B\"',\n        \"-\",\n        this.tok.T_NS_SEPARATOR,\n      ].map(mapIt)\n    ),\n    T_MAGIC_CONST: new Map(\n      [\n        this.tok.T_CLASS_C,\n        this.tok.T_TRAIT_C,\n        this.tok.T_FUNC_C,\n        this.tok.T_METHOD_C,\n        this.tok.T_LINE,\n        this.tok.T_FILE,\n        this.tok.T_DIR,\n        this.tok.T_NS_C,\n      ].map(mapIt)\n    ),\n    T_MEMBER_FLAGS: new Map(\n      [\n        this.tok.T_PUBLIC,\n        this.tok.T_PRIVATE,\n        this.tok.T_PROTECTED,\n        this.tok.T_STATIC,\n        this.tok.T_ABSTRACT,\n        this.tok.T_FINAL,\n      ].map(mapIt)\n    ),\n    EOS: new Map([\";\", this.EOF, this.tok.T_INLINE_HTML].map(mapIt)),\n    EXPR: new Map(\n      [\n        \"@\",\n        \"-\",\n        \"+\",\n        \"!\",\n        \"~\",\n        \"(\",\n        \"`\",\n        this.tok.T_LIST,\n        this.tok.T_CLONE,\n        this.tok.T_INC,\n        this.tok.T_DEC,\n        this.tok.T_NEW,\n        this.tok.T_ISSET,\n        this.tok.T_EMPTY,\n        this.tok.T_INCLUDE,\n        this.tok.T_INCLUDE_ONCE,\n        this.tok.T_REQUIRE,\n        this.tok.T_REQUIRE_ONCE,\n        this.tok.T_EVAL,\n        this.tok.T_INT_CAST,\n        this.tok.T_DOUBLE_CAST,\n        this.tok.T_STRING_CAST,\n        this.tok.T_ARRAY_CAST,\n        this.tok.T_OBJECT_CAST,\n        this.tok.T_BOOL_CAST,\n        this.tok.T_UNSET_CAST,\n        this.tok.T_EXIT,\n        this.tok.T_PRINT,\n        this.tok.T_YIELD,\n        this.tok.T_STATIC,\n        this.tok.T_FUNCTION,\n        this.tok.T_FN,\n        // using VARIABLES :\n        this.tok.T_VARIABLE,\n        \"$\",\n        this.tok.T_NS_SEPARATOR,\n        this.tok.T_STRING,\n        // using SCALAR :\n        this.tok.T_STRING, // @see variable.js line 45 > conflict with variable = shift/reduce :)\n        this.tok.T_CONSTANT_ENCAPSED_STRING,\n        this.tok.T_START_HEREDOC,\n        this.tok.T_LNUMBER,\n        this.tok.T_DNUMBER,\n        this.tok.T_ARRAY,\n        \"[\",\n        this.tok.T_CLASS_C,\n        this.tok.T_TRAIT_C,\n        this.tok.T_FUNC_C,\n        this.tok.T_METHOD_C,\n        this.tok.T_LINE,\n        this.tok.T_FILE,\n        this.tok.T_DIR,\n        this.tok.T_NS_C,\n        '\"',\n        'b\"',\n        'B\"',\n        \"-\",\n        this.tok.T_NS_SEPARATOR,\n      ].map(mapIt)\n    ),\n  };\n};\n\n/**\n * helper : gets a token name\n * @function Parser#getTokenName\n * @memberOf module:php-parser\n */\nParser.prototype.getTokenName = function (token) {\n  if (!isNumber(token)) {\n    return \"'\" + token + \"'\";\n  } else {\n    if (token == this.EOF) return \"the end of file (EOF)\";\n    return this.lexer.engine.tokens.values[token];\n  }\n};\n\n/**\n * main entry point : converts a source code to AST\n * @function Parser#parse\n * @memberOf module:php-parser\n */\nParser.prototype.parse = function (code, filename) {\n  this._errors = [];\n  this.filename = filename || \"eval\";\n  this.currentNamespace = [\"\"];\n  if (this.extractDoc) {\n    this._docs = [];\n  } else {\n    this._docs = null;\n  }\n  if (this.extractTokens) {\n    this._tokens = [];\n  } else {\n    this._tokens = null;\n  }\n  this._docIndex = 0;\n  this._lastNode = null;\n  this.lexer.setInput(code);\n  this.lexer.all_tokens = this.extractTokens;\n  this.lexer.comment_tokens = this.extractDoc;\n  this.length = this.lexer._input.length;\n  this.innerList = false;\n  this.innerListForm = false;\n  const program = this.node(\"program\");\n  const childs = [];\n  this.next();\n  while (this.token != this.EOF) {\n    childs.push(this.read_start());\n  }\n  // append last comment\n  if (\n    childs.length === 0 &&\n    this.extractDoc &&\n    this._docs.length > this._docIndex\n  ) {\n    childs.push(this.node(\"noop\")());\n  }\n  // #176 : register latest position\n  this.prev = [\n    this.lexer.yylloc.last_line,\n    this.lexer.yylloc.last_column,\n    this.lexer.offset,\n  ];\n  const result = program(childs, this._errors, this._docs, this._tokens);\n  if (this.debug) {\n    const errors = this.ast.checkNodes();\n    if (errors.length > 0) {\n      errors.forEach(function (error) {\n        if (error.position) {\n          // eslint-disable-next-line no-console\n          console.log(\n            \"Node at line \" +\n              error.position.line +\n              \", column \" +\n              error.position.column\n          );\n        }\n        // eslint-disable-next-line no-console\n        console.log(error.stack.join(\"\\n\"));\n      });\n      throw new Error(\"Some nodes are not closed\");\n    }\n  }\n  return result;\n};\n\n/**\n * Raise an error\n * @function Parser#raiseError\n * @memberOf module:php-parser\n */\nParser.prototype.raiseError = function (message, msgExpect, expect, token) {\n  message += \" on line \" + this.lexer.yylloc.first_line;\n  if (!this.suppressErrors) {\n    const err = new SyntaxError(\n      message,\n      this.filename,\n      this.lexer.yylloc.first_line\n    );\n    err.lineNumber = this.lexer.yylloc.first_line;\n    err.fileName = this.filename;\n    err.columnNumber = this.lexer.yylloc.first_column;\n    throw err;\n  }\n  // Error node :\n  const node = this.ast.prepare(\"error\", null, this)(\n    message,\n    token,\n    this.lexer.yylloc.first_line,\n    expect\n  );\n  this._errors.push(node);\n  return node;\n};\n\n/**\n * handling errors\n * @function Parser#error\n * @memberOf module:php-parser\n */\nParser.prototype.error = function (expect) {\n  let msg = \"Parse Error : syntax error\";\n  let token = this.getTokenName(this.token);\n  let msgExpect = \"\";\n\n  if (this.token !== this.EOF) {\n    if (isNumber(this.token)) {\n      let symbol = this.text();\n      if (symbol.length > 10) {\n        symbol = symbol.substring(0, 7) + \"...\";\n      }\n      token = \"'\" + symbol + \"' (\" + token + \")\";\n    }\n    msg += \", unexpected \" + token;\n  }\n  if (expect && !Array.isArray(expect)) {\n    if (isNumber(expect) || expect.length === 1) {\n      msgExpect = \", expecting \" + this.getTokenName(expect);\n    }\n    msg += msgExpect;\n  }\n  return this.raiseError(msg, msgExpect, expect, token);\n};\n\n/**\n * Creates a new AST node\n * @function Parser#node\n * @memberOf module:php-parser\n */\nParser.prototype.node = function (name) {\n  if (this.extractDoc) {\n    let docs = null;\n    if (this._docIndex < this._docs.length) {\n      docs = this._docs.slice(this._docIndex);\n      this._docIndex = this._docs.length;\n      if (this.debug) {\n        // eslint-disable-next-line no-console\n        console.log(new Error(\"Append docs on \" + name));\n        // eslint-disable-next-line no-console\n        console.log(docs);\n      }\n    }\n    const node = this.ast.prepare(name, docs, this);\n    /*\n     * TOKENS :\n     * node1 commentA token commmentB node2 commentC token commentD node3 commentE token\n     *\n     * AST :\n     * structure:S1 [\n     *    left: node1 ( trail: commentA ),\n     *    right: structure:S2 [\n     *       node2 (lead: commentB, trail: commentC),\n     *       node3 (lead: commentD)\n     *    ],\n     *    trail: commentE\n     * ]\n     *\n     * Algorithm :\n     *\n     * Attach the last comments on parent of current node\n     * If a new node is started and the parent has a trailing comment\n     * the move it on previous node\n     *\n     * start S2\n     * start node1\n     * consume node1 & set commentA as trailingComment on S2\n     * start S2\n     * S1 has a trailingComment, attach it on node1\n     * ...\n     * NOTE : As the trailingComment Behavior depends on AST, it will be build on\n     * the AST layer - last child node will keep it's trailingComment nodes\n     */\n    node.postBuild = function (self) {\n      if (this._docIndex < this._docs.length) {\n        if (this._lastNode) {\n          const offset = this.prev[2];\n          let max = this._docIndex;\n          for (; max < this._docs.length; max++) {\n            if (this._docs[max].offset > offset) {\n              break;\n            }\n          }\n          if (max > this._docIndex) {\n            // inject trailing comment on child node\n            this._lastNode.setTrailingComments(\n              this._docs.slice(this._docIndex, max)\n            );\n            this._docIndex = max;\n          }\n        } else if (this.token === this.EOF) {\n          // end of content\n          self.setTrailingComments(this._docs.slice(this._docIndex));\n          this._docIndex = this._docs.length;\n        }\n      }\n      this._lastNode = self;\n    }.bind(this);\n    return node;\n  }\n  return this.ast.prepare(name, null, this);\n};\n\n/**\n * expects an end of statement or end of file\n * @function Parser#expectEndOfStatement\n * @memberOf module:php-parser\n * @return {boolean}\n */\nParser.prototype.expectEndOfStatement = function (node) {\n  if (this.token === \";\") {\n    // include only real ';' statements\n    // https://github.com/glayzzle/php-parser/issues/164\n    if (node && this.lexer.yytext === \";\") {\n      node.includeToken(this);\n    }\n  } else if (this.token !== this.tok.T_INLINE_HTML && this.token !== this.EOF) {\n    this.error(\";\");\n    return false;\n  }\n  this.next();\n  return true;\n};\n\nconst ignoreStack = [\"parser.next\", \"parser.node\", \"parser.showlog\"];\n/**\n * outputs some debug information on current token\n * @private\n * @function Parser#showlog\n * @memberOf module:php-parser\n */\nParser.prototype.showlog = function () {\n  const stack = new Error().stack.split(\"\\n\");\n  let line;\n  for (let offset = 2; offset < stack.length; offset++) {\n    line = stack[offset].trim();\n    let found = false;\n    for (let i = 0; i < ignoreStack.length; i++) {\n      if (line.substring(3, 3 + ignoreStack[i].length) === ignoreStack[i]) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      break;\n    }\n  }\n  // eslint-disable-next-line no-console\n  console.log(\n    \"Line \" +\n      this.lexer.yylloc.first_line +\n      \" : \" +\n      this.getTokenName(this.token) +\n      \">\" +\n      this.lexer.yytext +\n      \"<\" +\n      \" @-->\" +\n      line\n  );\n  return this;\n};\n\n/**\n * Force the parser to check the current token.\n *\n * If the current token does not match to expected token,\n * the an error will be raised.\n *\n * If the suppressError mode is activated, then the error will\n * be added to the program error stack and this function will return `false`.\n *\n * @function Parser#expect\n * @memberOf module:php-parser\n * @param {String|Number} token\n * @return {boolean}\n * @throws Error\n */\nParser.prototype.expect = function (token) {\n  if (Array.isArray(token)) {\n    if (token.indexOf(this.token) === -1) {\n      this.error(token);\n      return false;\n    }\n  } else if (this.token != token) {\n    this.error(token);\n    return false;\n  }\n  return true;\n};\n\n/**\n * Returns the current token contents\n * @function Parser#text\n * @memberOf module:php-parser\n * @return {String}\n */\nParser.prototype.text = function () {\n  return this.lexer.yytext;\n};\n\n/**\n * consume the next token\n * @function Parser#next\n * @memberOf module:php-parser\n */\nParser.prototype.next = function () {\n  // prepare the back command\n  if (this.token !== \";\" || this.lexer.yytext === \";\") {\n    // ignore '?>' from automated resolution\n    // https://github.com/glayzzle/php-parser/issues/168\n    this.prev = [\n      this.lexer.yylloc.last_line,\n      this.lexer.yylloc.last_column,\n      this.lexer.offset,\n    ];\n  }\n\n  // eating the token\n  this.lex();\n\n  // showing the debug\n  if (this.debug) {\n    this.showlog();\n  }\n\n  // handling comments\n  if (this.extractDoc) {\n    while (\n      this.token === this.tok.T_COMMENT ||\n      this.token === this.tok.T_DOC_COMMENT\n    ) {\n      // APPEND COMMENTS\n      if (this.token === this.tok.T_COMMENT) {\n        this._docs.push(this.read_comment());\n      } else {\n        this._docs.push(this.read_doc_comment());\n      }\n    }\n  }\n\n  return this;\n};\n\n/**\n * Eating a token\n * @function Parser#lex\n * @memberOf module:php-parser\n */\nParser.prototype.lex = function () {\n  // append on token stack\n  if (this.extractTokens) {\n    do {\n      // the token\n      this.token = this.lexer.lex() || this.EOF;\n      if (this.token === this.EOF) return this;\n      let entry = this.lexer.yytext;\n      if (this.lexer.engine.tokens.values.hasOwnProperty(this.token)) {\n        entry = [\n          this.lexer.engine.tokens.values[this.token],\n          entry,\n          this.lexer.yylloc.first_line,\n          this.lexer.yylloc.first_offset,\n          this.lexer.offset,\n        ];\n      } else {\n        entry = [\n          null,\n          entry,\n          this.lexer.yylloc.first_line,\n          this.lexer.yylloc.first_offset,\n          this.lexer.offset,\n        ];\n      }\n      this._tokens.push(entry);\n      if (this.token === this.tok.T_CLOSE_TAG) {\n        // https://github.com/php/php-src/blob/7ff186434e82ee7be7c59d0db9a976641cf7b09c/Zend/zend_compile.c#L1680\n        this.token = \";\";\n        return this;\n      } else if (this.token === this.tok.T_OPEN_TAG_WITH_ECHO) {\n        this.token = this.tok.T_ECHO;\n        return this;\n      }\n    } while (\n      this.token === this.tok.T_WHITESPACE || // ignore white space\n      (!this.extractDoc &&\n        (this.token === this.tok.T_COMMENT || // ignore single lines comments\n          this.token === this.tok.T_DOC_COMMENT)) || // ignore doc comments\n      // ignore open tags\n      this.token === this.tok.T_OPEN_TAG\n    );\n  } else {\n    this.token = this.lexer.lex() || this.EOF;\n  }\n  return this;\n};\n\n/**\n * Check if token is of specified type\n * @function Parser#is\n * @memberOf module:php-parser\n */\nParser.prototype.is = function (type) {\n  if (Array.isArray(type)) {\n    return type.indexOf(this.token) !== -1;\n  }\n  return this.entries[type].has(this.token);\n};\n\n// extends the parser with syntax files\n[\n  require(\"./parser/array.js\"),\n  require(\"./parser/class.js\"),\n  require(\"./parser/comment.js\"),\n  require(\"./parser/expr.js\"),\n  require(\"./parser/function.js\"),\n  require(\"./parser/if.js\"),\n  require(\"./parser/loops.js\"),\n  require(\"./parser/main.js\"),\n  require(\"./parser/namespace.js\"),\n  require(\"./parser/scalar.js\"),\n  require(\"./parser/statement.js\"),\n  require(\"./parser/switch.js\"),\n  require(\"./parser/try.js\"),\n  require(\"./parser/utils.js\"),\n  require(\"./parser/variable.js\"),\n].forEach(function (ext) {\n  for (const k in ext) {\n    if (Parser.prototype.hasOwnProperty(k)) {\n      // @see https://github.com/glayzzle/php-parser/issues/234\n      throw new Error(\"Function \" + k + \" is already defined - collision\");\n    }\n    Parser.prototype[k] = ext[k];\n  }\n});\n\nmodule.exports = Parser;\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /*\n   * Parse an array\n   * ```ebnf\n   * array ::= T_ARRAY '(' array_pair_list ')' |\n   *   '[' array_pair_list ']'\n   * ```\n   */\n  read_array: function () {\n    let expect = null;\n    let shortForm = false;\n    const result = this.node(\"array\");\n\n    if (this.token === this.tok.T_ARRAY) {\n      this.next().expect(\"(\");\n      expect = \")\";\n    } else {\n      shortForm = true;\n      expect = \"]\";\n    }\n    let items = [];\n    if (this.next().token !== expect) {\n      items = this.read_array_pair_list(shortForm);\n    }\n    this.expect(expect);\n    this.next();\n    return result(shortForm, items);\n  },\n  /*\n   * Reads an array of items\n   * ```ebnf\n   * array_pair_list ::= array_pair (',' array_pair?)*\n   * ```\n   */\n  read_array_pair_list: function (shortForm) {\n    const self = this;\n    return this.read_list(\n      function () {\n        return self.read_array_pair(shortForm);\n      },\n      \",\",\n      true\n    );\n  },\n  /*\n   * Reads an entry\n   * array_pair:\n   *  expr T_DOUBLE_ARROW expr\n   *  | expr\n   *  | expr T_DOUBLE_ARROW '&' variable\n   *  | '&' variable\n   *  | expr T_DOUBLE_ARROW T_LIST '(' array_pair_list ')'\n   *  | T_LIST '(' array_pair_list ')'\n   */\n  read_array_pair: function (shortForm) {\n    if (\n      (!shortForm && this.token === \")\") ||\n      (shortForm && this.token === \"]\")\n    ) {\n      return;\n    }\n\n    if (this.token === \",\") {\n      return this.node(\"noop\")();\n    }\n\n    const entry = this.node(\"entry\");\n\n    let key = null;\n    let value = null;\n    let byRef = false;\n    let unpack = false;\n\n    if (this.token === \"&\") {\n      this.next();\n      byRef = true;\n      value = this.read_variable(true, false);\n    } else if (this.token === this.tok.T_ELLIPSIS && this.version >= 704) {\n      this.next();\n      if (this.token === \"&\") {\n        this.error();\n      }\n      unpack = true;\n      value = this.read_expr();\n    } else {\n      const expr = this.read_expr();\n\n      if (this.token === this.tok.T_DOUBLE_ARROW) {\n        this.next();\n        key = expr;\n\n        if (this.token === \"&\") {\n          this.next();\n          byRef = true;\n          value = this.read_variable(true, false);\n        } else {\n          value = this.read_expr();\n        }\n      } else {\n        value = expr;\n      }\n    }\n\n    return entry(key, value, byRef, unpack);\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /*\n   * reading a class\n   * ```ebnf\n   * class ::= class_scope? T_CLASS T_STRING (T_EXTENDS NAMESPACE_NAME)? (T_IMPLEMENTS (NAMESPACE_NAME ',')* NAMESPACE_NAME)? '{' CLASS_BODY '}'\n   * ```\n   */\n  read_class_declaration_statement: function () {\n    const result = this.node(\"class\");\n    const flag = this.read_class_modifiers();\n    // graceful mode : ignore token & go next\n    if (this.token !== this.tok.T_CLASS) {\n      this.error(this.tok.T_CLASS);\n      this.next();\n      return null;\n    }\n    this.next().expect(this.tok.T_STRING);\n    let propName = this.node(\"identifier\");\n    const name = this.text();\n    this.next();\n    propName = propName(name);\n    const propExtends = this.read_extends_from();\n    const propImplements = this.read_implements_list();\n    this.expect(\"{\");\n    const body = this.next().read_class_body();\n    return result(propName, propExtends, propImplements, body, flag);\n  },\n\n  read_class_modifiers: function () {\n    return [0, 0, this.read_class_modifier()];\n  },\n\n  read_class_modifier: function () {\n    const result = 0;\n\n    if (this.token === this.tok.T_ABSTRACT) {\n      this.next();\n      return 1;\n    } else if (this.token === this.tok.T_FINAL) {\n      this.next();\n      return 2;\n    }\n\n    return result;\n  },\n\n  /*\n   * Reads a class body\n   * ```ebnf\n   *   class_body ::= (member_flags? (T_VAR | T_STRING | T_FUNCTION))*\n   * ```\n   */\n  read_class_body: function () {\n    let result = [];\n\n    while (this.token !== this.EOF && this.token !== \"}\") {\n      if (this.token === this.tok.T_COMMENT) {\n        result.push(this.read_comment());\n        continue;\n      }\n\n      if (this.token === this.tok.T_DOC_COMMENT) {\n        result.push(this.read_doc_comment());\n        continue;\n      }\n\n      // check T_USE trait\n      if (this.token === this.tok.T_USE) {\n        result = result.concat(this.read_trait_use_statement());\n        continue;\n      }\n\n      // read member flags\n      const flags = this.read_member_flags(false);\n\n      // check constant\n      if (this.token === this.tok.T_CONST) {\n        const constants = this.read_constant_list(flags);\n        if (this.expect(\";\")) {\n          this.next();\n        }\n        result = result.concat(constants);\n        continue;\n      }\n\n      // jump over T_VAR then land on T_VARIABLE\n      if (this.token === this.tok.T_VAR) {\n        this.next().expect(this.tok.T_VARIABLE);\n        flags[0] = null; // public (as null)\n        flags[1] = 0; // non static var\n      }\n\n      if (this.token === this.tok.T_FUNCTION) {\n        // reads a function\n        result.push(this.read_function(false, flags));\n      } else if (\n        this.token === this.tok.T_VARIABLE ||\n        // support https://wiki.php.net/rfc/typed_properties_v2\n        (this.version >= 704 &&\n          (this.token === \"?\" ||\n            this.token === this.tok.T_CALLABLE ||\n            this.token === this.tok.T_ARRAY ||\n            this.token === this.tok.T_NS_SEPARATOR ||\n            this.token === this.tok.T_STRING ||\n            this.token === this.tok.T_NAMESPACE))\n      ) {\n        // reads a variable\n        const variables = this.read_variable_list(flags);\n        this.expect(\";\");\n        this.next();\n        result = result.concat(variables);\n      } else {\n        // raise an error\n        this.error([\n          this.tok.T_CONST,\n          this.tok.T_VARIABLE,\n          this.tok.T_FUNCTION,\n        ]);\n        // ignore token\n        this.next();\n      }\n    }\n    this.expect(\"}\");\n    this.next();\n    return result;\n  },\n  /*\n   * Reads variable list\n   * ```ebnf\n   *  variable_list ::= (variable_declaration ',')* variable_declaration\n   * ```\n   */\n  read_variable_list: function (flags) {\n    const result = this.node(\"propertystatement\");\n\n    const properties = this.read_list(\n      /*\n       * Reads a variable declaration\n       *\n       * ```ebnf\n       *  variable_declaration ::= T_VARIABLE '=' scalar\n       * ```\n       */\n      function read_variable_declaration() {\n        const result = this.node(\"property\");\n        const [nullable, type] = this.read_optional_type();\n        this.expect(this.tok.T_VARIABLE);\n        let propName = this.node(\"identifier\");\n        const name = this.text().substring(1); // ignore $\n        this.next();\n        propName = propName(name);\n        if (this.token === \";\" || this.token === \",\") {\n          return result(propName, null, nullable, type);\n        } else if (this.token === \"=\") {\n          // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L815\n          return result(propName, this.next().read_expr(), nullable, type);\n        } else {\n          this.expect([\",\", \";\", \"=\"]);\n          return result(propName, null, nullable, type);\n        }\n      },\n      \",\"\n    );\n\n    return result(null, properties, flags);\n  },\n  /*\n   * Reads constant list\n   * ```ebnf\n   *  constant_list ::= T_CONST (constant_declaration ',')* constant_declaration\n   * ```\n   */\n  read_constant_list: function (flags) {\n    if (this.expect(this.tok.T_CONST)) {\n      this.next();\n    }\n    const result = this.node(\"classconstant\");\n    const items = this.read_list(\n      /*\n       * Reads a constant declaration\n       *\n       * ```ebnf\n       *  constant_declaration ::= (T_STRING | IDENTIFIER) '=' expr\n       * ```\n       * @return {Constant} [:link:](AST.md#constant)\n       */\n      function read_constant_declaration() {\n        const result = this.node(\"constant\");\n        let constName = null;\n        let value = null;\n        if (\n          this.token === this.tok.T_STRING ||\n          (this.version >= 700 && this.is(\"IDENTIFIER\"))\n        ) {\n          constName = this.node(\"identifier\");\n          const name = this.text();\n          this.next();\n          constName = constName(name);\n        } else {\n          this.expect(\"IDENTIFIER\");\n        }\n        if (this.expect(\"=\")) {\n          value = this.next().read_expr();\n        }\n        return result(constName, value);\n      },\n      \",\"\n    );\n\n    return result(null, items, flags);\n  },\n  /*\n   * Read member flags\n   * @return array\n   *  1st index : 0 => public, 1 => protected, 2 => private\n   *  2nd index : 0 => instance member, 1 => static member\n   *  3rd index : 0 => normal, 1 => abstract member, 2 => final member\n   */\n  read_member_flags: function (asInterface) {\n    const result = [-1, -1, -1];\n    if (this.is(\"T_MEMBER_FLAGS\")) {\n      let idx = 0,\n        val = 0;\n      do {\n        switch (this.token) {\n          case this.tok.T_PUBLIC:\n            idx = 0;\n            val = 0;\n            break;\n          case this.tok.T_PROTECTED:\n            idx = 0;\n            val = 1;\n            break;\n          case this.tok.T_PRIVATE:\n            idx = 0;\n            val = 2;\n            break;\n          case this.tok.T_STATIC:\n            idx = 1;\n            val = 1;\n            break;\n          case this.tok.T_ABSTRACT:\n            idx = 2;\n            val = 1;\n            break;\n          case this.tok.T_FINAL:\n            idx = 2;\n            val = 2;\n            break;\n        }\n        if (asInterface) {\n          if (idx == 0 && val == 2) {\n            // an interface can't be private\n            this.expect([this.tok.T_PUBLIC, this.tok.T_PROTECTED]);\n            val = -1;\n          } else if (idx == 2 && val == 1) {\n            // an interface cant be abstract\n            this.error();\n            val = -1;\n          }\n        }\n        if (result[idx] !== -1) {\n          // already defined flag\n          this.error();\n        } else if (val !== -1) {\n          result[idx] = val;\n        }\n      } while (this.next().is(\"T_MEMBER_FLAGS\"));\n    }\n\n    if (result[1] == -1) result[1] = 0;\n    if (result[2] == -1) result[2] = 0;\n    return result;\n  },\n\n  /*\n   * optional_type:\n   *\t  /- empty -/\t{ $$ = NULL; }\n   *   |\ttype_expr\t{ $$ = $1; }\n   * ;\n   *\n   * type_expr:\n   *\t\ttype\t\t{ $$ = $1; }\n   *\t|\t'?' type\t{ $$ = $2; $$->attr |= ZEND_TYPE_NULLABLE; }\n   *\t|\tunion_type\t{ $$ = $1; }\n   * ;\n   *\n   * type:\n   * \t\tT_ARRAY\t\t{ $$ = zend_ast_create_ex(ZEND_AST_TYPE, IS_ARRAY); }\n   * \t|\tT_CALLABLE\t{ $$ = zend_ast_create_ex(ZEND_AST_TYPE, IS_CALLABLE); }\n   * \t|\tname\t\t{ $$ = $1; }\n   * ;\n   *\n   * union_type:\n   * \t\ttype '|' type       { $$ = zend_ast_create_list(2, ZEND_AST_TYPE_UNION, $1, $3); }\n   * \t|\tunion_type '|' type { $$ = zend_ast_list_add($1, $3); }\n   * ;\n   */\n  read_optional_type: function () {\n    let nullable = false;\n    if (this.token === \"?\") {\n      nullable = true;\n      this.next();\n    }\n    let type = this.read_type();\n    if (nullable && !type) {\n      this.raiseError(\n        \"Expecting a type definition combined with nullable operator\"\n      );\n    }\n    if (!nullable && !type) {\n      return [false, null];\n    }\n    if (this.token === \"|\") {\n      type = [type];\n      do {\n        this.next();\n        const variant = this.read_type();\n        if (!variant) {\n          this.raiseError(\"Expecting a type definition\");\n          break;\n        }\n        type.push(variant);\n      } while (this.token === \"|\");\n    }\n    return [nullable, type];\n  },\n\n  /*\n   * reading an interface\n   * ```ebnf\n   * interface ::= T_INTERFACE T_STRING (T_EXTENDS (NAMESPACE_NAME ',')* NAMESPACE_NAME)? '{' INTERFACE_BODY '}'\n   * ```\n   */\n  read_interface_declaration_statement: function () {\n    const result = this.node(\"interface\");\n    if (this.token !== this.tok.T_INTERFACE) {\n      this.error(this.tok.T_INTERFACE);\n      this.next();\n      return null;\n    }\n    this.next().expect(this.tok.T_STRING);\n    let propName = this.node(\"identifier\");\n    const name = this.text();\n    this.next();\n    propName = propName(name);\n    const propExtends = this.read_interface_extends_list();\n    this.expect(\"{\");\n    const body = this.next().read_interface_body();\n    return result(propName, propExtends, body);\n  },\n  /*\n   * Reads an interface body\n   * ```ebnf\n   *   interface_body ::= (member_flags? (T_CONST | T_FUNCTION))*\n   * ```\n   */\n  read_interface_body: function () {\n    let result = [];\n\n    while (this.token !== this.EOF && this.token !== \"}\") {\n      if (this.token === this.tok.T_COMMENT) {\n        result.push(this.read_comment());\n        continue;\n      }\n\n      if (this.token === this.tok.T_DOC_COMMENT) {\n        result.push(this.read_doc_comment());\n        continue;\n      }\n\n      // read member flags\n      const flags = this.read_member_flags(true);\n\n      // check constant\n      if (this.token == this.tok.T_CONST) {\n        const constants = this.read_constant_list(flags);\n        if (this.expect(\";\")) {\n          this.next();\n        }\n        result = result.concat(constants);\n      } else if (this.token === this.tok.T_FUNCTION) {\n        // reads a function\n        const method = this.read_function_declaration(2, flags);\n        method.parseFlags(flags);\n        result.push(method);\n        if (this.expect(\";\")) {\n          this.next();\n        }\n      } else {\n        // raise an error\n        this.error([this.tok.T_CONST, this.tok.T_FUNCTION]);\n        this.next();\n      }\n    }\n    if (this.expect(\"}\")) {\n      this.next();\n    }\n    return result;\n  },\n  /*\n   * reading a trait\n   * ```ebnf\n   * trait ::= T_TRAIT T_STRING (T_EXTENDS (NAMESPACE_NAME ',')* NAMESPACE_NAME)? '{' FUNCTION* '}'\n   * ```\n   */\n  read_trait_declaration_statement: function () {\n    const result = this.node(\"trait\");\n    // graceful mode : ignore token & go next\n    if (this.token !== this.tok.T_TRAIT) {\n      this.error(this.tok.T_TRAIT);\n      this.next();\n      return null;\n    }\n    this.next().expect(this.tok.T_STRING);\n    let propName = this.node(\"identifier\");\n    const name = this.text();\n    this.next();\n    propName = propName(name);\n    this.expect(\"{\");\n    const body = this.next().read_class_body();\n    return result(propName, body);\n  },\n  /*\n   * reading a use statement\n   * ```ebnf\n   * trait_use_statement ::= namespace_name (',' namespace_name)* ('{' trait_use_alias '}')?\n   * ```\n   */\n  read_trait_use_statement: function () {\n    // defines use statements\n    const node = this.node(\"traituse\");\n    this.expect(this.tok.T_USE) && this.next();\n    const traits = [this.read_namespace_name()];\n    let adaptations = null;\n    while (this.token === \",\") {\n      traits.push(this.next().read_namespace_name());\n    }\n    if (this.token === \"{\") {\n      adaptations = [];\n      // defines alias statements\n      while (this.next().token !== this.EOF) {\n        if (this.token === \"}\") break;\n        adaptations.push(this.read_trait_use_alias());\n        this.expect(\";\");\n      }\n      if (this.expect(\"}\")) {\n        this.next();\n      }\n    } else {\n      if (this.expect(\";\")) {\n        this.next();\n      }\n    }\n    return node(traits, adaptations);\n  },\n  /*\n   * Reading trait alias\n   * ```ebnf\n   * trait_use_alias ::= namespace_name ( T_DOUBLE_COLON T_STRING )? (T_INSTEADOF namespace_name) | (T_AS member_flags? T_STRING)\n   * ```\n   * name list : https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L303\n   * trait adaptation : https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L742\n   */\n  read_trait_use_alias: function () {\n    const node = this.node();\n    let trait = null;\n    let method;\n\n    if (this.is(\"IDENTIFIER\")) {\n      method = this.node(\"identifier\");\n      const methodName = this.text();\n      this.next();\n      method = method(methodName);\n    } else {\n      method = this.read_namespace_name();\n\n      if (this.token === this.tok.T_DOUBLE_COLON) {\n        this.next();\n        if (\n          this.token === this.tok.T_STRING ||\n          (this.version >= 700 && this.is(\"IDENTIFIER\"))\n        ) {\n          trait = method;\n          method = this.node(\"identifier\");\n          const methodName = this.text();\n          this.next();\n          method = method(methodName);\n        } else {\n          this.expect(this.tok.T_STRING);\n        }\n      } else {\n        // convert identifier as string\n        method = method.name;\n      }\n    }\n\n    // handle trait precedence\n    if (this.token === this.tok.T_INSTEADOF) {\n      return node(\n        \"traitprecedence\",\n        trait,\n        method,\n        this.next().read_name_list()\n      );\n    } else if (this.token === this.tok.T_AS) {\n      // handle trait alias\n      let flags = null;\n      let alias = null;\n      if (this.next().is(\"T_MEMBER_FLAGS\")) {\n        flags = this.read_member_flags();\n      }\n\n      if (\n        this.token === this.tok.T_STRING ||\n        (this.version >= 700 && this.is(\"IDENTIFIER\"))\n      ) {\n        alias = this.node(\"identifier\");\n        const name = this.text();\n        this.next();\n        alias = alias(name);\n      } else if (flags === false) {\n        // no visibility flags and no name => too bad\n        this.expect(this.tok.T_STRING);\n      }\n\n      return node(\"traitalias\", trait, method, alias, flags);\n    }\n\n    // handle errors\n    this.expect([this.tok.T_AS, this.tok.T_INSTEADOF]);\n    return node(\"traitalias\", trait, method, null, null);\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /*\n   *  Comments with // or # or / * ... * /\n   */\n  read_comment: function () {\n    const text = this.text();\n    let result = this.ast.prepare(\n      text.substring(0, 2) === \"/*\" ? \"commentblock\" : \"commentline\",\n      null,\n      this\n    );\n    const offset = this.lexer.yylloc.first_offset;\n    // handle location on comment\n    const prev = this.prev;\n    this.prev = [\n      this.lexer.yylloc.last_line,\n      this.lexer.yylloc.last_column,\n      this.lexer.offset,\n    ];\n    this.lex();\n    result = result(text);\n    result.offset = offset;\n    this.prev = prev;\n    return result;\n  },\n  /*\n   * Comments with / ** ... * /\n   */\n  read_doc_comment: function () {\n    let result = this.ast.prepare(\"commentblock\", null, this);\n    const offset = this.lexer.yylloc.first_offset;\n    const text = this.text();\n    const prev = this.prev;\n    this.prev = [\n      this.lexer.yylloc.last_line,\n      this.lexer.yylloc.last_column,\n      this.lexer.offset,\n    ];\n    this.lex();\n    result = result(text);\n    result.offset = offset;\n    this.prev = prev;\n    return result;\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  read_expr: function (expr) {\n    const result = this.node();\n    if (this.token === \"@\") {\n      if (!expr) {\n        expr = this.next().read_expr();\n      }\n      return result(\"silent\", expr);\n    }\n    if (!expr) {\n      expr = this.read_expr_item();\n    }\n    // binary operations\n    if (this.token === \"|\")\n      return result(\"bin\", \"|\", expr, this.next().read_expr());\n    if (this.token === \"&\")\n      return result(\"bin\", \"&\", expr, this.next().read_expr());\n    if (this.token === \"^\")\n      return result(\"bin\", \"^\", expr, this.next().read_expr());\n    if (this.token === \".\")\n      return result(\"bin\", \".\", expr, this.next().read_expr());\n    if (this.token === \"+\")\n      return result(\"bin\", \"+\", expr, this.next().read_expr());\n    if (this.token === \"-\")\n      return result(\"bin\", \"-\", expr, this.next().read_expr());\n    if (this.token === \"*\")\n      return result(\"bin\", \"*\", expr, this.next().read_expr());\n    if (this.token === \"/\")\n      return result(\"bin\", \"/\", expr, this.next().read_expr());\n    if (this.token === \"%\")\n      return result(\"bin\", \"%\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_POW)\n      return result(\"bin\", \"**\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_SL)\n      return result(\"bin\", \"<<\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_SR)\n      return result(\"bin\", \">>\", expr, this.next().read_expr());\n    // more binary operations (formerly bool)\n    if (this.token === this.tok.T_BOOLEAN_OR)\n      return result(\"bin\", \"||\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_LOGICAL_OR)\n      return result(\"bin\", \"or\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_BOOLEAN_AND)\n      return result(\"bin\", \"&&\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_LOGICAL_AND)\n      return result(\"bin\", \"and\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_LOGICAL_XOR)\n      return result(\"bin\", \"xor\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_IS_IDENTICAL)\n      return result(\"bin\", \"===\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_IS_NOT_IDENTICAL)\n      return result(\"bin\", \"!==\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_IS_EQUAL)\n      return result(\"bin\", \"==\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_IS_NOT_EQUAL)\n      return result(\"bin\", \"!=\", expr, this.next().read_expr());\n    if (this.token === \"<\")\n      return result(\"bin\", \"<\", expr, this.next().read_expr());\n    if (this.token === \">\")\n      return result(\"bin\", \">\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_IS_SMALLER_OR_EQUAL)\n      return result(\"bin\", \"<=\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_IS_GREATER_OR_EQUAL)\n      return result(\"bin\", \">=\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_SPACESHIP)\n      return result(\"bin\", \"<=>\", expr, this.next().read_expr());\n    if (this.token === this.tok.T_INSTANCEOF) {\n      expr = result(\n        \"bin\",\n        \"instanceof\",\n        expr,\n        this.next().read_class_name_reference()\n      );\n      if (\n        this.token !== \";\" &&\n        this.token !== this.tok.T_INLINE_HTML &&\n        this.token !== this.EOF\n      ) {\n        expr = this.read_expr(expr);\n      }\n    }\n\n    // extra operations :\n    // $username = $_GET['user'] ?? 'nobody';\n    if (this.token === this.tok.T_COALESCE)\n      return result(\"bin\", \"??\", expr, this.next().read_expr());\n\n    // extra operations :\n    // $username = $_GET['user'] ? true : false;\n    if (this.token === \"?\") {\n      let trueArg = null;\n      if (this.next().token !== \":\") {\n        trueArg = this.read_expr();\n      }\n      this.expect(\":\") && this.next();\n      return result(\"retif\", expr, trueArg, this.read_expr());\n    } else {\n      // see #193\n      result.destroy(expr);\n    }\n\n    return expr;\n  },\n\n  /*\n   * Reads a cast expression\n   */\n  read_expr_cast: function (type) {\n    return this.node(\"cast\")(type, this.text(), this.next().read_expr());\n  },\n\n  /*\n   * Read a isset variable\n   */\n  read_isset_variable: function () {\n    return this.read_expr();\n  },\n\n  /*\n   * Reads isset variables\n   */\n  read_isset_variables: function () {\n    return this.read_function_list(this.read_isset_variable, \",\");\n  },\n\n  /*\n   * Reads internal PHP functions\n   */\n  read_internal_functions_in_yacc: function () {\n    let result = null;\n    switch (this.token) {\n      case this.tok.T_ISSET:\n        {\n          result = this.node(\"isset\");\n          if (this.next().expect(\"(\")) {\n            this.next();\n          }\n          const variables = this.read_isset_variables();\n          if (this.expect(\")\")) {\n            this.next();\n          }\n          result = result(variables);\n        }\n        break;\n      case this.tok.T_EMPTY:\n        {\n          result = this.node(\"empty\");\n          if (this.next().expect(\"(\")) {\n            this.next();\n          }\n          const expression = this.read_expr();\n          if (this.expect(\")\")) {\n            this.next();\n          }\n          result = result(expression);\n        }\n        break;\n      case this.tok.T_INCLUDE:\n        result = this.node(\"include\")(false, false, this.next().read_expr());\n        break;\n      case this.tok.T_INCLUDE_ONCE:\n        result = this.node(\"include\")(true, false, this.next().read_expr());\n        break;\n      case this.tok.T_EVAL:\n        {\n          result = this.node(\"eval\");\n          if (this.next().expect(\"(\")) {\n            this.next();\n          }\n          const expr = this.read_expr();\n          if (this.expect(\")\")) {\n            this.next();\n          }\n          result = result(expr);\n        }\n        break;\n      case this.tok.T_REQUIRE:\n        result = this.node(\"include\")(false, true, this.next().read_expr());\n        break;\n      case this.tok.T_REQUIRE_ONCE:\n        result = this.node(\"include\")(true, true, this.next().read_expr());\n        break;\n    }\n\n    return result;\n  },\n\n  /*\n   * Reads optional expression\n   */\n  read_optional_expr: function (stopToken) {\n    if (this.token !== stopToken) {\n      return this.read_expr();\n    }\n\n    return null;\n  },\n\n  /*\n   * Reads exit expression\n   */\n  read_exit_expr: function () {\n    let expression = null;\n\n    if (this.token === \"(\") {\n      this.next();\n      expression = this.read_optional_expr(\")\");\n      this.expect(\")\") && this.next();\n    }\n\n    return expression;\n  },\n\n  /*\n   * ```ebnf\n   * Reads an expression\n   *  expr ::= @todo\n   * ```\n   */\n  read_expr_item: function () {\n    let result, expr;\n    if (this.token === \"+\")\n      return this.node(\"unary\")(\"+\", this.next().read_expr());\n    if (this.token === \"-\")\n      return this.node(\"unary\")(\"-\", this.next().read_expr());\n    if (this.token === \"!\")\n      return this.node(\"unary\")(\"!\", this.next().read_expr());\n    if (this.token === \"~\")\n      return this.node(\"unary\")(\"~\", this.next().read_expr());\n\n    if (this.token === \"(\") {\n      expr = this.next().read_expr();\n      expr.parenthesizedExpression = true;\n      this.expect(\")\") && this.next();\n      return this.handleDereferencable(expr);\n    }\n\n    if (this.token === \"`\") {\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1048\n      return this.read_encapsed_string(\"`\");\n    }\n\n    if (this.token === this.tok.T_LIST) {\n      let assign = null;\n      const isInner = this.innerList;\n      result = this.node(\"list\");\n      if (!isInner) {\n        assign = this.node(\"assign\");\n      }\n      if (this.next().expect(\"(\")) {\n        this.next();\n      }\n\n      if (!this.innerList) this.innerList = true;\n\n      // reads inner items\n      const assignList = this.read_array_pair_list(false);\n      if (this.expect(\")\")) {\n        this.next();\n      }\n\n      // check if contains at least one assignment statement\n      let hasItem = false;\n      for (let i = 0; i < assignList.length; i++) {\n        if (assignList[i] !== null && assignList[i].kind !== \"noop\") {\n          hasItem = true;\n          break;\n        }\n      }\n      if (!hasItem) {\n        this.raiseError(\n          \"Fatal Error :  Cannot use empty list on line \" +\n            this.lexer.yylloc.first_line\n        );\n      }\n\n      // handles the node resolution\n      if (!isInner) {\n        this.innerList = false;\n        if (this.expect(\"=\")) {\n          return assign(\n            result(assignList, false),\n            this.next().read_expr(),\n            \"=\"\n          );\n        } else {\n          // error fallback : list($a, $b);\n          return result(assignList, false);\n        }\n      } else {\n        return result(assignList, false);\n      }\n    }\n\n    if (this.token === this.tok.T_CLONE)\n      return this.node(\"clone\")(this.next().read_expr());\n\n    switch (this.token) {\n      case this.tok.T_INC:\n        return this.node(\"pre\")(\"+\", this.next().read_variable(false, false));\n\n      case this.tok.T_DEC:\n        return this.node(\"pre\")(\"-\", this.next().read_variable(false, false));\n\n      case this.tok.T_NEW:\n        return this.read_new_expr();\n\n      case this.tok.T_ISSET:\n      case this.tok.T_EMPTY:\n      case this.tok.T_INCLUDE:\n      case this.tok.T_INCLUDE_ONCE:\n      case this.tok.T_EVAL:\n      case this.tok.T_REQUIRE:\n      case this.tok.T_REQUIRE_ONCE:\n        return this.read_internal_functions_in_yacc();\n      case this.tok.T_INT_CAST:\n        return this.read_expr_cast(\"int\");\n\n      case this.tok.T_DOUBLE_CAST:\n        return this.read_expr_cast(\"float\");\n\n      case this.tok.T_STRING_CAST:\n        return this.read_expr_cast(\n          this.text().indexOf(\"binary\") !== -1 ? \"binary\" : \"string\"\n        );\n\n      case this.tok.T_ARRAY_CAST:\n        return this.read_expr_cast(\"array\");\n\n      case this.tok.T_OBJECT_CAST:\n        return this.read_expr_cast(\"object\");\n\n      case this.tok.T_BOOL_CAST:\n        return this.read_expr_cast(\"bool\");\n\n      case this.tok.T_UNSET_CAST:\n        return this.read_expr_cast(\"unset\");\n\n      case this.tok.T_EXIT: {\n        const useDie = this.lexer.yytext.toLowerCase() === \"die\";\n        result = this.node(\"exit\");\n        this.next();\n        const expression = this.read_exit_expr();\n        return result(expression, useDie);\n      }\n\n      case this.tok.T_PRINT:\n        return this.node(\"print\")(this.next().read_expr());\n\n      // T_YIELD (expr (T_DOUBLE_ARROW expr)?)?\n      case this.tok.T_YIELD: {\n        let value = null;\n        let key = null;\n        result = this.node(\"yield\");\n        if (this.next().is(\"EXPR\")) {\n          // reads the yield return value\n          value = this.read_expr();\n          if (this.token === this.tok.T_DOUBLE_ARROW) {\n            // reads the yield returned key\n            key = value;\n            value = this.next().read_expr();\n          }\n        }\n        return result(value, key);\n      }\n\n      // T_YIELD_FROM expr\n      case this.tok.T_YIELD_FROM:\n        result = this.node(\"yieldfrom\");\n        expr = this.next().read_expr();\n        return result(expr);\n\n      case this.tok.T_FN:\n      case this.tok.T_FUNCTION:\n        return this.read_inline_function();\n\n      case this.tok.T_STATIC: {\n        const backup = [this.token, this.lexer.getState()];\n        this.next();\n        if (\n          this.token === this.tok.T_FUNCTION ||\n          (this.version >= 704 && this.token === this.tok.T_FN)\n        ) {\n          // handles static function\n          return this.read_inline_function([0, 1, 0]);\n        } else {\n          // rollback\n          this.lexer.tokens.push(backup);\n          this.next();\n        }\n      }\n    }\n\n    // SCALAR | VARIABLE\n    if (this.is(\"VARIABLE\")) {\n      result = this.node();\n      expr = this.read_variable(false, false);\n\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L877\n      // should accept only a variable\n      const isConst =\n        expr.kind === \"identifier\" ||\n        (expr.kind === \"staticlookup\" && expr.offset.kind === \"identifier\");\n\n      // VARIABLES SPECIFIC OPERATIONS\n      switch (this.token) {\n        case \"=\": {\n          if (isConst) this.error(\"VARIABLE\");\n          if (this.next().token == \"&\") {\n            return this.read_assignref(result, expr);\n          }\n          return result(\"assign\", expr, this.read_expr(), \"=\");\n        }\n\n        // operations :\n        case this.tok.T_PLUS_EQUAL:\n          if (isConst) this.error(\"VARIABLE\");\n          return result(\"assign\", expr, this.next().read_expr(), \"+=\");\n\n        case this.tok.T_MINUS_EQUAL:\n          if (isConst) this.error(\"VARIABLE\");\n          return result(\"assign\", expr, this.next().read_expr(), \"-=\");\n\n        case this.tok.T_MUL_EQUAL:\n          if (isConst) this.error(\"VARIABLE\");\n          return result(\"assign\", expr, this.next().read_expr(), \"*=\");\n\n        case this.tok.T_POW_EQUAL:\n          if (isConst) this.error(\"VARIABLE\");\n          return result(\"assign\", expr, this.next().read_expr(), \"**=\");\n\n        case this.tok.T_DIV_EQUAL:\n          if (isConst) this.error(\"VARIABLE\");\n          return result(\"assign\", expr, this.next().read_expr(), \"/=\");\n\n        case this.tok.T_CONCAT_EQUAL:\n          if (isConst) this.error(\"VARIABLE\");\n          return result(\"assign\", expr, this.next().read_expr(), \".=\");\n\n        case this.tok.T_MOD_EQUAL:\n          if (isConst) this.error(\"VARIABLE\");\n          return result(\"assign\", expr, this.next().read_expr(), \"%=\");\n\n        case this.tok.T_AND_EQUAL:\n          if (isConst) this.error(\"VARIABLE\");\n          return result(\"assign\", expr, this.next().read_expr(), \"&=\");\n\n        case this.tok.T_OR_EQUAL:\n          if (isConst) this.error(\"VARIABLE\");\n          return result(\"assign\", expr, this.next().read_expr(), \"|=\");\n\n        case this.tok.T_XOR_EQUAL:\n          if (isConst) this.error(\"VARIABLE\");\n          return result(\"assign\", expr, this.next().read_expr(), \"^=\");\n\n        case this.tok.T_SL_EQUAL:\n          if (isConst) this.error(\"VARIABLE\");\n          return result(\"assign\", expr, this.next().read_expr(), \"<<=\");\n\n        case this.tok.T_SR_EQUAL:\n          if (isConst) this.error(\"VARIABLE\");\n          return result(\"assign\", expr, this.next().read_expr(), \">>=\");\n\n        case this.tok.T_COALESCE_EQUAL:\n          if (isConst) this.error(\"VARIABLE\");\n          return result(\"assign\", expr, this.next().read_expr(), \"??=\");\n\n        case this.tok.T_INC:\n          if (isConst) this.error(\"VARIABLE\");\n          this.next();\n          return result(\"post\", \"+\", expr);\n        case this.tok.T_DEC:\n          if (isConst) this.error(\"VARIABLE\");\n          this.next();\n          return result(\"post\", \"-\", expr);\n        default:\n          // see #193\n          result.destroy(expr);\n      }\n    } else if (this.is(\"SCALAR\")) {\n      result = this.node();\n      expr = this.read_scalar();\n      if (expr.kind === \"array\" && expr.shortForm && this.token === \"=\") {\n        // list assign\n        const list = this.convertToList(expr);\n        if (expr.loc) list.loc = expr.loc;\n        const right = this.next().read_expr();\n        return result(\"assign\", list, right, \"=\");\n      } else {\n        // see #189 - swap docs on nodes\n        result.destroy(expr);\n      }\n      // classic array\n      return this.handleDereferencable(expr);\n    } else {\n      this.error(\"EXPR\");\n      this.next();\n    }\n\n    // returns variable | scalar\n    return expr;\n  },\n\n  /*\n   * Recursively convert nested array to nested list.\n   */\n  convertToList: function (array) {\n    const convertedItems = array.items.map((entry) => {\n      if (\n        entry.value &&\n        entry.value.kind === \"array\" &&\n        entry.value.shortForm\n      ) {\n        entry.value = this.convertToList(entry.value);\n      }\n      return entry;\n    });\n    const node = this.node(\"list\")(convertedItems, true);\n    if (array.loc) node.loc = array.loc;\n    if (array.leadingComments) node.leadingComments = array.leadingComments;\n    if (array.trailingComments) node.trailingComments = array.trailingComments;\n    return node;\n  },\n\n  /*\n   * Reads assignment\n   * @param {*} left\n   */\n  read_assignref: function (result, left) {\n    this.next();\n    let right;\n    if (this.token === this.tok.T_NEW) {\n      if (this.version >= 700) {\n        this.error();\n      }\n      right = this.read_new_expr();\n    } else {\n      right = this.read_variable(false, false);\n    }\n\n    return result(\"assignref\", left, right);\n  },\n\n  /*\n   *\n   * inline_function:\n   * \t\tfunction returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type\n   * \t\tbackup_fn_flags '{' inner_statement_list '}' backup_fn_flags\n   * \t\t\t{ $$ = zend_ast_create_decl(ZEND_AST_CLOSURE, $2 | $13, $1, $3,\n   * \t\t\t\t  zend_string_init(\"{closure}\", sizeof(\"{closure}\") - 1, 0),\n   * \t\t\t\t  $5, $7, $11, $8); CG(extra_fn_flags) = $9; }\n   * \t|\tfn returns_ref '(' parameter_list ')' return_type backup_doc_comment T_DOUBLE_ARROW backup_fn_flags backup_lex_pos expr backup_fn_flags\n   * \t\t\t{ $$ = zend_ast_create_decl(ZEND_AST_ARROW_FUNC, $2 | $12, $1, $7,\n   * \t\t\t\t  zend_string_init(\"{closure}\", sizeof(\"{closure}\") - 1, 0), $4, NULL,\n   * \t\t\t\t  zend_ast_create(ZEND_AST_RETURN, $11), $6);\n   * \t\t\t\t  ((zend_ast_decl *) $$)->lex_pos = $10;\n   * \t\t\t\t  CG(extra_fn_flags) = $9; }   *\n   */\n  read_inline_function: function (flags) {\n    if (this.token === this.tok.T_FUNCTION) {\n      return this.read_function(true, flags);\n    }\n    // introduced in PHP 7.4\n    if (!this.version >= 704) {\n      this.raiseError(\"Arrow Functions are not allowed\");\n    }\n    // as an arrowfunc\n    const node = this.node(\"arrowfunc\");\n    // eat T_FN\n    if (this.expect(this.tok.T_FN)) this.next();\n    // check the &\n    const isRef = this.is_reference();\n    // ...\n    if (this.expect(\"(\")) this.next();\n    const params = this.read_parameter_list();\n    if (this.expect(\")\")) this.next();\n    let nullable = false;\n    let returnType = null;\n    if (this.token === \":\") {\n      if (this.next().token === \"?\") {\n        nullable = true;\n        this.next();\n      }\n      returnType = this.read_type();\n    }\n    if (this.expect(this.tok.T_DOUBLE_ARROW)) this.next();\n    const body = this.read_expr();\n    return node(\n      params,\n      isRef,\n      body,\n      returnType,\n      nullable,\n      flags ? true : false\n    );\n  },\n\n  /*\n   * ```ebnf\n   *    new_expr ::= T_NEW (namespace_name function_argument_list) | (T_CLASS ... class declaration)\n   * ```\n   * https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L850\n   */\n  read_new_expr: function () {\n    const result = this.node(\"new\");\n    this.expect(this.tok.T_NEW) && this.next();\n    let args = [];\n    if (this.token === this.tok.T_CLASS) {\n      const what = this.node(\"class\");\n      // Annonymous class declaration\n      if (this.next().token === \"(\") {\n        args = this.read_argument_list();\n      }\n      const propExtends = this.read_extends_from();\n      const propImplements = this.read_implements_list();\n      let body = null;\n      if (this.expect(\"{\")) {\n        body = this.next().read_class_body();\n      }\n      return result(\n        what(null, propExtends, propImplements, body, [0, 0, 0]),\n        args\n      );\n    }\n    // Already existing class\n    const name = this.read_new_class_name();\n    if (this.token === \"(\") {\n      args = this.read_argument_list();\n    }\n    return result(name, args);\n  },\n  /*\n   * Reads a class name\n   * ```ebnf\n   * read_new_class_name ::= namespace_name | variable\n   * ```\n   */\n  read_new_class_name: function () {\n    if (\n      this.token === this.tok.T_NS_SEPARATOR ||\n      this.token === this.tok.T_STRING ||\n      this.token === this.tok.T_NAMESPACE\n    ) {\n      let result = this.read_namespace_name(true);\n      if (this.token === this.tok.T_DOUBLE_COLON) {\n        result = this.read_static_getter(result);\n      }\n      return result;\n    } else if (this.is(\"VARIABLE\")) {\n      return this.read_variable(true, false);\n    } else {\n      this.expect([this.tok.T_STRING, \"VARIABLE\"]);\n    }\n  },\n  handleDereferencable: function (expr) {\n    while (this.token !== this.EOF) {\n      if (\n        this.token === this.tok.T_OBJECT_OPERATOR ||\n        this.token === this.tok.T_DOUBLE_COLON\n      ) {\n        expr = this.recursive_variable_chain_scan(expr, false, false, true);\n      } else if (this.token === this.tok.T_CURLY_OPEN || this.token === \"[\") {\n        expr = this.read_dereferencable(expr);\n      } else if (this.token === \"(\") {\n        // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1118\n        expr = this.node(\"call\")(expr, this.read_argument_list());\n      } else {\n        return expr;\n      }\n    }\n    return expr;\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /*\n   * checks if current token is a reference keyword\n   */\n  is_reference: function () {\n    if (this.token == \"&\") {\n      this.next();\n      return true;\n    }\n    return false;\n  },\n  /*\n   * checks if current token is a variadic keyword\n   */\n  is_variadic: function () {\n    if (this.token === this.tok.T_ELLIPSIS) {\n      this.next();\n      return true;\n    }\n    return false;\n  },\n  /*\n   * reading a function\n   * ```ebnf\n   * function ::= function_declaration code_block\n   * ```\n   */\n  read_function: function (closure, flag) {\n    const result = this.read_function_declaration(\n      closure ? 1 : flag ? 2 : 0,\n      flag && flag[1] === 1\n    );\n    if (flag && flag[2] == 1) {\n      // abstract function :\n      result.parseFlags(flag);\n      if (this.expect(\";\")) {\n        this.next();\n      }\n    } else {\n      if (this.expect(\"{\")) {\n        result.body = this.read_code_block(false);\n        if (result.loc && result.body.loc) {\n          result.loc.end = result.body.loc.end;\n        }\n      }\n      if (!closure && flag) {\n        result.parseFlags(flag);\n      }\n    }\n    return result;\n  },\n  /*\n   * reads a function declaration (without his body)\n   * ```ebnf\n   * function_declaration ::= T_FUNCTION '&'?  T_STRING '(' parameter_list ')'\n   * ```\n   */\n  read_function_declaration: function (type, isStatic) {\n    let nodeName = \"function\";\n    if (type === 1) {\n      nodeName = \"closure\";\n    } else if (type === 2) {\n      nodeName = \"method\";\n    }\n    const result = this.node(nodeName);\n\n    if (this.expect(this.tok.T_FUNCTION)) {\n      this.next();\n    }\n    const isRef = this.is_reference();\n    let name = false,\n      use = [],\n      returnType = null,\n      nullable = false;\n    if (type !== 1) {\n      const nameNode = this.node(\"identifier\");\n      if (type === 2) {\n        if (this.version >= 700) {\n          if (this.token === this.tok.T_STRING || this.is(\"IDENTIFIER\")) {\n            name = this.text();\n            this.next();\n          } else if (this.version < 704) {\n            this.error(\"IDENTIFIER\");\n          }\n        } else if (this.token === this.tok.T_STRING) {\n          name = this.text();\n          this.next();\n        } else {\n          this.error(\"IDENTIFIER\");\n        }\n      } else {\n        if (this.version >= 700) {\n          if (this.token === this.tok.T_STRING) {\n            name = this.text();\n            this.next();\n          } else if (this.version >= 704) {\n            if (!this.expect(\"(\")) {\n              this.next();\n            }\n          } else {\n            this.error(this.tok.T_STRING);\n            this.next();\n          }\n        } else {\n          if (this.expect(this.tok.T_STRING)) {\n            name = this.text();\n          }\n          this.next();\n        }\n      }\n      name = nameNode(name);\n    }\n    if (this.expect(\"(\")) this.next();\n    const params = this.read_parameter_list();\n    if (this.expect(\")\")) this.next();\n    if (type === 1) {\n      use = this.read_lexical_vars();\n    }\n    if (this.token === \":\") {\n      if (this.next().token === \"?\") {\n        nullable = true;\n        this.next();\n      }\n      returnType = this.read_type();\n    }\n    if (type === 1) {\n      // closure\n      return result(params, isRef, use, returnType, nullable, isStatic);\n    }\n    return result(name, params, isRef, returnType, nullable);\n  },\n\n  read_lexical_vars: function () {\n    let result = [];\n\n    if (this.token === this.tok.T_USE) {\n      this.next();\n      this.expect(\"(\") && this.next();\n      result = this.read_lexical_var_list();\n      this.expect(\")\") && this.next();\n    }\n\n    return result;\n  },\n\n  read_lexical_var_list: function () {\n    return this.read_list(this.read_lexical_var, \",\");\n  },\n\n  /*\n   * ```ebnf\n   * lexical_var ::= '&'? T_VARIABLE\n   * ```\n   */\n  read_lexical_var: function () {\n    if (this.token === \"&\") {\n      return this.read_byref(this.read_lexical_var.bind(this));\n    }\n    const result = this.node(\"variable\");\n    this.expect(this.tok.T_VARIABLE);\n    const name = this.text().substring(1);\n    this.next();\n    return result(name, false);\n  },\n  /*\n   * reads a list of parameters\n   * ```ebnf\n   *  parameter_list ::= (parameter ',')* parameter?\n   * ```\n   */\n  read_parameter_list: function () {\n    const result = [];\n    if (this.token != \")\") {\n      while (this.token != this.EOF) {\n        result.push(this.read_parameter());\n        if (this.token == \",\") {\n          this.next();\n        } else if (this.token == \")\") {\n          break;\n        } else {\n          this.error([\",\", \")\"]);\n          break;\n        }\n      }\n    }\n    return result;\n  },\n  /*\n   * ```ebnf\n   *  parameter ::= type? '&'? T_ELLIPSIS? T_VARIABLE ('=' expr)?\n   * ```\n   * @see https://github.com/php/php-src/blob/493524454d66adde84e00d249d607ecd540de99f/Zend/zend_language_parser.y#L640\n   */\n  read_parameter: function () {\n    const node = this.node(\"parameter\");\n    let parameterName = null;\n    let value = null;\n    let type = null;\n    let nullable = false;\n    if (this.token === \"?\") {\n      this.next();\n      nullable = true;\n    }\n    type = this.read_type();\n    if (nullable && !type) {\n      this.raiseError(\n        \"Expecting a type definition combined with nullable operator\"\n      );\n    }\n    const isRef = this.is_reference();\n    const isVariadic = this.is_variadic();\n    if (this.expect(this.tok.T_VARIABLE)) {\n      parameterName = this.node(\"identifier\");\n      const name = this.text().substring(1);\n      this.next();\n      parameterName = parameterName(name);\n    }\n    if (this.token == \"=\") {\n      value = this.next().read_expr();\n    }\n    return node(parameterName, type, value, isRef, isVariadic, nullable);\n  },\n  /*\n   * Reads a list of arguments\n   * ```ebnf\n   *  function_argument_list ::= '(' (argument_list (',' argument_list)*)? ')'\n   * ```\n   */\n  read_argument_list: function () {\n    let result = [];\n    this.expect(\"(\") && this.next();\n    if (this.token !== \")\") {\n      result = this.read_non_empty_argument_list();\n    }\n    this.expect(\")\") && this.next();\n    return result;\n  },\n  /*\n   * Reads non empty argument list\n   */\n  read_non_empty_argument_list: function () {\n    let wasVariadic = false;\n\n    return this.read_function_list(\n      function () {\n        const argument = this.read_argument();\n        if (argument) {\n          if (wasVariadic) {\n            this.raiseError(\"Unexpected argument after a variadic argument\");\n          }\n          if (argument.kind === \"variadic\") {\n            wasVariadic = true;\n          }\n        }\n        return argument;\n      }.bind(this),\n      \",\"\n    );\n  },\n  /*\n   * ```ebnf\n   *    argument_list ::= T_ELLIPSIS? expr\n   * ```\n   */\n  read_argument: function () {\n    if (this.token === this.tok.T_ELLIPSIS) {\n      return this.node(\"variadic\")(this.next().read_expr());\n    }\n    return this.read_expr();\n  },\n  /*\n   * read type hinting\n   * ```ebnf\n   *  type ::= T_ARRAY | T_CALLABLE | namespace_name\n   * ```\n   */\n  read_type: function () {\n    const result = this.node();\n    if (this.token === this.tok.T_ARRAY || this.token === this.tok.T_CALLABLE) {\n      const type = this.text();\n      this.next();\n      return result(\"typereference\", type.toLowerCase(), type);\n    } else if (this.token === this.tok.T_STRING) {\n      const type = this.text();\n      const backup = [this.token, this.lexer.getState()];\n      this.next();\n      if (\n        this.token !== this.tok.T_NS_SEPARATOR &&\n        this.ast.typereference.types.indexOf(type.toLowerCase()) > -1\n      ) {\n        return result(\"typereference\", type.toLowerCase(), type);\n      } else {\n        // rollback a classic namespace\n        this.lexer.tokens.push(backup);\n        this.next();\n        // fix : destroy not consumed node (release comments)\n        result.destroy();\n        return this.read_namespace_name();\n      }\n    } else if (\n      this.token === this.tok.T_NAMESPACE ||\n      this.token === this.tok.T_NS_SEPARATOR\n    ) {\n      // fix : destroy not consumed node (release comments)\n      result.destroy();\n      return this.read_namespace_name();\n    }\n    // fix : destroy not consumed node (release comments)\n    result.destroy();\n    return null;\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /*\n   * Reads an IF statement\n   *\n   * ```ebnf\n   *  if ::= T_IF '(' expr ')' ':' ...\n   * ```\n   */\n  read_if: function () {\n    const result = this.node(\"if\");\n    const test = this.next().read_if_expr();\n    let body = null;\n    let alternate = null;\n    let shortForm = false;\n\n    if (this.token === \":\") {\n      shortForm = true;\n      this.next();\n      body = this.node(\"block\");\n      const items = [];\n      while (this.token !== this.EOF && this.token !== this.tok.T_ENDIF) {\n        if (this.token === this.tok.T_ELSEIF) {\n          alternate = this.read_elseif_short();\n          break;\n        } else if (this.token === this.tok.T_ELSE) {\n          alternate = this.read_else_short();\n          break;\n        }\n        items.push(this.read_inner_statement());\n      }\n      body = body(null, items);\n      this.expect(this.tok.T_ENDIF) && this.next();\n      this.expectEndOfStatement();\n    } else {\n      body = this.read_statement();\n      if (this.token === this.tok.T_ELSEIF) {\n        alternate = this.read_if();\n      } else if (this.token === this.tok.T_ELSE) {\n        alternate = this.next().read_statement();\n      }\n    }\n    return result(test, body, alternate, shortForm);\n  },\n  /*\n   * reads an if expression : '(' expr ')'\n   */\n  read_if_expr: function () {\n    this.expect(\"(\") && this.next();\n    const result = this.read_expr();\n    this.expect(\")\") && this.next();\n    return result;\n  },\n  /*\n   * reads an elseif (expr): statements\n   */\n  read_elseif_short: function () {\n    let alternate = null;\n    const result = this.node(\"if\");\n    const test = this.next().read_if_expr();\n    if (this.expect(\":\")) this.next();\n    const body = this.node(\"block\");\n    const items = [];\n    while (this.token != this.EOF && this.token !== this.tok.T_ENDIF) {\n      if (this.token === this.tok.T_ELSEIF) {\n        alternate = this.read_elseif_short();\n        break;\n      } else if (this.token === this.tok.T_ELSE) {\n        alternate = this.read_else_short();\n        break;\n      }\n      items.push(this.read_inner_statement());\n    }\n    return result(test, body(null, items), alternate, true);\n  },\n  /*\n   *\n   */\n  read_else_short: function () {\n    if (this.next().expect(\":\")) this.next();\n    const body = this.node(\"block\");\n    const items = [];\n    while (this.token != this.EOF && this.token !== this.tok.T_ENDIF) {\n      items.push(this.read_inner_statement());\n    }\n    return body(null, items);\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /*\n   * Reads a while statement\n   * ```ebnf\n   * while ::= T_WHILE (statement | ':' inner_statement_list T_ENDWHILE ';')\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L587\n   * @return {While}\n   */\n  read_while: function () {\n    const result = this.node(\"while\");\n    this.expect(this.tok.T_WHILE) && this.next();\n    let test = null;\n    let body = null;\n    let shortForm = false;\n    if (this.expect(\"(\")) this.next();\n    test = this.read_expr();\n    if (this.expect(\")\")) this.next();\n    if (this.token === \":\") {\n      shortForm = true;\n      body = this.read_short_form(this.tok.T_ENDWHILE);\n    } else {\n      body = this.read_statement();\n    }\n    return result(test, body, shortForm);\n  },\n  /*\n   * Reads a do / while loop\n   * ```ebnf\n   * do ::= T_DO statement T_WHILE '(' expr ')' ';'\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L423\n   * @return {Do}\n   */\n  read_do: function () {\n    const result = this.node(\"do\");\n    this.expect(this.tok.T_DO) && this.next();\n    let test = null;\n    let body = null;\n    body = this.read_statement();\n    if (this.expect(this.tok.T_WHILE)) {\n      if (this.next().expect(\"(\")) this.next();\n      test = this.read_expr();\n      if (this.expect(\")\")) this.next();\n      if (this.expect(\";\")) this.next();\n    }\n    return result(test, body);\n  },\n  /*\n   * Read a for incremental loop\n   * ```ebnf\n   * for ::= T_FOR '(' for_exprs ';' for_exprs ';' for_exprs ')' for_statement\n   * for_statement ::= statement | ':' inner_statement_list T_ENDFOR ';'\n   * for_exprs ::= expr? (',' expr)*\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L425\n   * @return {For}\n   */\n  read_for: function () {\n    const result = this.node(\"for\");\n    this.expect(this.tok.T_FOR) && this.next();\n    let init = [];\n    let test = [];\n    let increment = [];\n    let body = null;\n    let shortForm = false;\n    if (this.expect(\"(\")) this.next();\n    if (this.token !== \";\") {\n      init = this.read_list(this.read_expr, \",\");\n      if (this.expect(\";\")) this.next();\n    } else {\n      this.next();\n    }\n    if (this.token !== \";\") {\n      test = this.read_list(this.read_expr, \",\");\n      if (this.expect(\";\")) this.next();\n    } else {\n      this.next();\n    }\n    if (this.token !== \")\") {\n      increment = this.read_list(this.read_expr, \",\");\n      if (this.expect(\")\")) this.next();\n    } else {\n      this.next();\n    }\n    if (this.token === \":\") {\n      shortForm = true;\n      body = this.read_short_form(this.tok.T_ENDFOR);\n    } else {\n      body = this.read_statement();\n    }\n    return result(init, test, increment, body, shortForm);\n  },\n  /*\n   * Reads a foreach loop\n   * ```ebnf\n   * foreach ::= '(' expr T_AS foreach_variable (T_DOUBLE_ARROW foreach_variable)? ')' statement\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L438\n   * @return {Foreach}\n   */\n  read_foreach: function () {\n    const result = this.node(\"foreach\");\n    this.expect(this.tok.T_FOREACH) && this.next();\n    let source = null;\n    let key = null;\n    let value = null;\n    let body = null;\n    let shortForm = false;\n    if (this.expect(\"(\")) this.next();\n    source = this.read_expr();\n    if (this.expect(this.tok.T_AS)) {\n      this.next();\n      value = this.read_foreach_variable();\n      if (this.token === this.tok.T_DOUBLE_ARROW) {\n        key = value;\n        value = this.next().read_foreach_variable();\n      }\n    }\n\n    // grammatically correct but not supported by PHP\n    if (key && key.kind === \"list\") {\n      this.raiseError(\"Fatal Error : Cannot use list as key element\");\n    }\n\n    if (this.expect(\")\")) this.next();\n\n    if (this.token === \":\") {\n      shortForm = true;\n      body = this.read_short_form(this.tok.T_ENDFOREACH);\n    } else {\n      body = this.read_statement();\n    }\n    return result(source, key, value, body, shortForm);\n  },\n  /*\n   * Reads a foreach variable statement\n   * ```ebnf\n   * foreach_variable =\n   *    variable |\n   *    '&' variable |\n   *    T_LIST '(' assignment_list ')' |\n   *    '[' assignment_list ']'\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L544\n   * @return {Expression}\n   */\n  read_foreach_variable: function () {\n    if (this.token === this.tok.T_LIST || this.token === \"[\") {\n      const isShort = this.token === \"[\";\n      const result = this.node(\"list\");\n      this.next();\n      if (!isShort && this.expect(\"(\")) this.next();\n      const assignList = this.read_array_pair_list(isShort);\n      if (this.expect(isShort ? \"]\" : \")\")) this.next();\n      return result(assignList, isShort);\n    } else {\n      return this.read_variable(false, false);\n    }\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /*\n   * ```ebnf\n   * start ::= (namespace | top_statement)*\n   * ```\n   */\n  read_start: function () {\n    if (this.token == this.tok.T_NAMESPACE) {\n      return this.read_namespace();\n    } else {\n      return this.read_top_statement();\n    }\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /*\n   * Reads a namespace declaration block\n   * ```ebnf\n   * namespace ::= T_NAMESPACE namespace_name? '{'\n   *    top_statements\n   * '}'\n   * | T_NAMESPACE namespace_name ';' top_statements\n   * ```\n   * @see http://php.net/manual/en/language.namespaces.php\n   * @return {Namespace}\n   */\n  read_namespace: function () {\n    const result = this.node(\"namespace\");\n    let body;\n    this.expect(this.tok.T_NAMESPACE) && this.next();\n    let name;\n\n    if (this.token == \"{\") {\n      name = {\n        name: [\"\"],\n      };\n    } else {\n      name = this.read_namespace_name();\n    }\n    this.currentNamespace = name;\n\n    if (this.token == \";\") {\n      this.currentNamespace = name;\n      body = this.next().read_top_statements();\n      this.expect(this.EOF);\n      return result(name.name, body, false);\n    } else if (this.token == \"{\") {\n      this.currentNamespace = name;\n      body = this.next().read_top_statements();\n      this.expect(\"}\") && this.next();\n      if (\n        body.length === 0 &&\n        this.extractDoc &&\n        this._docs.length > this._docIndex\n      ) {\n        body.push(this.node(\"noop\")());\n      }\n      return result(name.name, body, true);\n    } else if (this.token === \"(\") {\n      // @fixme after merging #478\n      name.resolution = this.ast.reference.RELATIVE_NAME;\n      name.name = name.name.substring(1);\n      result.destroy();\n      return this.node(\"call\")(name, this.read_argument_list());\n    } else {\n      this.error([\"{\", \";\"]);\n      // graceful mode :\n      this.currentNamespace = name;\n      body = this.read_top_statements();\n      this.expect(this.EOF);\n      return result(name, body, false);\n    }\n  },\n  /*\n   * Reads a namespace name\n   * ```ebnf\n   *  namespace_name ::= T_NS_SEPARATOR? (T_STRING T_NS_SEPARATOR)* T_STRING\n   * ```\n   * @see http://php.net/manual/en/language.namespaces.rules.php\n   * @return {Reference}\n   */\n  read_namespace_name: function (resolveReference) {\n    const result = this.node();\n    let relative = false;\n    if (this.token === this.tok.T_NAMESPACE) {\n      this.next().expect(this.tok.T_NS_SEPARATOR) && this.next();\n      relative = true;\n    }\n    const names = this.read_list(\n      this.tok.T_STRING,\n      this.tok.T_NS_SEPARATOR,\n      true\n    );\n    if (\n      !relative &&\n      names.length === 1 &&\n      (resolveReference || this.token !== \"(\")\n    ) {\n      if (names[0].toLowerCase() === \"parent\") {\n        return result(\"parentreference\", names[0]);\n      } else if (names[0].toLowerCase() === \"self\") {\n        return result(\"selfreference\", names[0]);\n      }\n    }\n    return result(\"name\", names, relative);\n  },\n  /*\n   * Reads a use statement\n   * ```ebnf\n   * use_statement ::= T_USE\n   *   use_type? use_declarations |\n   *   use_type use_statement '{' use_declarations '}' |\n   *   use_statement '{' use_declarations(=>typed) '}'\n   * ';'\n   * ```\n   * @see http://php.net/manual/en/language.namespaces.importing.php\n   * @return {UseGroup}\n   */\n  read_use_statement: function () {\n    let result = this.node(\"usegroup\");\n    let items = [];\n    let name = null;\n    this.expect(this.tok.T_USE) && this.next();\n    const type = this.read_use_type();\n    items.push(this.read_use_declaration(false));\n    if (this.token === \",\") {\n      items = items.concat(this.next().read_use_declarations(false));\n    } else if (this.token === \"{\") {\n      name = items[0].name;\n      items = this.next().read_use_declarations(type === null);\n      this.expect(\"}\") && this.next();\n    }\n    result = result(name, type, items);\n    this.expect(\";\") && this.next();\n    return result;\n  },\n  /*\n   *\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1045\n   */\n  read_class_name_reference: function () {\n    // resolved as the same\n    return this.read_variable(true, false);\n  },\n  /*\n   * Reads a use declaration\n   * ```ebnf\n   * use_declaration ::= use_type? namespace_name use_alias\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L380\n   * @return {UseItem}\n   */\n  read_use_declaration: function (typed) {\n    const result = this.node(\"useitem\");\n    let type = null;\n    if (typed) type = this.read_use_type();\n    const name = this.read_namespace_name();\n    const alias = this.read_use_alias();\n    return result(name.name, alias, type);\n  },\n  /*\n   * Reads a list of use declarations\n   * ```ebnf\n   * use_declarations ::= use_declaration (',' use_declaration)*\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L380\n   * @return {UseItem[]}\n   */\n  read_use_declarations: function (typed) {\n    const result = [this.read_use_declaration(typed)];\n    while (this.token === \",\") {\n      this.next();\n      if (typed) {\n        if (\n          this.token !== this.tok.T_FUNCTION &&\n          this.token !== this.tok.T_CONST &&\n          this.token !== this.tok.T_STRING\n        ) {\n          break;\n        }\n      } else if (\n        this.token !== this.tok.T_STRING &&\n        this.token !== this.tok.T_NS_SEPARATOR\n      ) {\n        break;\n      }\n      result.push(this.read_use_declaration(typed));\n    }\n    return result;\n  },\n  /*\n   * Reads a use statement\n   * ```ebnf\n   * use_alias ::= (T_AS T_STRING)?\n   * ```\n   * @return {String|null}\n   */\n  read_use_alias: function () {\n    let result = null;\n    if (this.token === this.tok.T_AS) {\n      if (this.next().expect(this.tok.T_STRING)) {\n        const aliasName = this.node(\"identifier\");\n        const name = this.text();\n        this.next();\n        result = aliasName(name);\n      }\n    }\n    return result;\n  },\n  /*\n   * Reads the namespace type declaration\n   * ```ebnf\n   * use_type ::= (T_FUNCTION | T_CONST)?\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L335\n   * @return {String|null} Possible values : function, const\n   */\n  read_use_type: function () {\n    if (this.token === this.tok.T_FUNCTION) {\n      this.next();\n      return this.ast.useitem.TYPE_FUNCTION;\n    } else if (this.token === this.tok.T_CONST) {\n      this.next();\n      return this.ast.useitem.TYPE_CONST;\n    }\n    return null;\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nconst specialChar = {\n  \"\\\\\": \"\\\\\",\n  $: \"$\",\n  n: \"\\n\",\n  r: \"\\r\",\n  t: \"\\t\",\n  f: String.fromCharCode(12),\n  v: String.fromCharCode(11),\n  e: String.fromCharCode(27),\n};\n\nmodule.exports = {\n  /*\n   * Unescape special chars\n   */\n  resolve_special_chars: function (text, doubleQuote) {\n    if (!doubleQuote) {\n      // single quote fix\n      return text.replace(/\\\\\\\\/g, \"\\\\\").replace(/\\\\'/g, \"'\");\n    }\n    return text\n      .replace(/\\\\\"/, '\"')\n      .replace(\n        /\\\\([\\\\$nrtfve]|[xX][0-9a-fA-F]{1,2}|[0-7]{1,3}|u{([0-9a-fA-F]+)})/g,\n        ($match, p1, p2) => {\n          if (specialChar[p1]) {\n            return specialChar[p1];\n          } else if (\"x\" === p1[0] || \"X\" === p1[0]) {\n            return String.fromCodePoint(parseInt(p1.substr(1), 16));\n          } else if (\"u\" === p1[0]) {\n            return String.fromCodePoint(parseInt(p2, 16));\n          } else {\n            return String.fromCodePoint(parseInt(p1, 8));\n          }\n        }\n      );\n  },\n\n  /*\n   * Remove all leading spaces each line for heredoc text if there is a indentation\n   * @param {string} text\n   * @param {number} indentation\n   * @param {boolean} indentation_uses_spaces\n   * @param {boolean} first_encaps_node if it is behind a variable, the first N spaces should not be removed\n   */\n  remove_heredoc_leading_whitespace_chars: function (\n    text,\n    indentation,\n    indentation_uses_spaces,\n    first_encaps_node\n  ) {\n    if (indentation === 0) {\n      return text;\n    }\n\n    this.check_heredoc_indentation_level(\n      text,\n      indentation,\n      indentation_uses_spaces,\n      first_encaps_node\n    );\n\n    const matchedChar = indentation_uses_spaces ? \" \" : \"\\t\";\n    const removementRegExp = new RegExp(\n      `\\\\n${matchedChar}{${indentation}}`,\n      \"g\"\n    );\n    const removementFirstEncapsNodeRegExp = new RegExp(\n      `^${matchedChar}{${indentation}}`\n    );\n\n    // Rough replace, need more check\n    if (first_encaps_node) {\n      // Remove text leading whitespace\n      text = text.replace(removementFirstEncapsNodeRegExp, \"\");\n    }\n\n    // Remove leading whitespace after \\n\n    return text.replace(removementRegExp, \"\\n\");\n  },\n\n  /*\n   * Check indentation level of heredoc in text, if mismatch, raiseError\n   * @param {string} text\n   * @param {number} indentation\n   * @param {boolean} indentation_uses_spaces\n   * @param {boolean} first_encaps_node if it is behind a variable, the first N spaces should not be removed\n   */\n  check_heredoc_indentation_level: function (\n    text,\n    indentation,\n    indentation_uses_spaces,\n    first_encaps_node\n  ) {\n    const textSize = text.length;\n    let offset = 0;\n    let leadingWhitespaceCharCount = 0;\n    /*\n     * @var inCoutingState {boolean} reset to true after a new line\n     * @private\n     */\n    let inCoutingState = true;\n    const chToCheck = indentation_uses_spaces ? \" \" : \"\\t\";\n    let inCheckState = false;\n    if (!first_encaps_node) {\n      // start from first \\n\n      offset = text.indexOf(\"\\n\");\n      // if no \\n, just return\n      if (offset === -1) {\n        return;\n      }\n      offset++;\n    }\n    while (offset < textSize) {\n      if (inCoutingState) {\n        if (text[offset] === chToCheck) {\n          leadingWhitespaceCharCount++;\n        } else {\n          inCheckState = true;\n        }\n      } else {\n        inCoutingState = false;\n      }\n\n      if (\n        text[offset] !== \"\\n\" &&\n        inCheckState &&\n        leadingWhitespaceCharCount < indentation\n      ) {\n        this.raiseError(\n          `Invalid body indentation level (expecting an indentation at least ${indentation})`\n        );\n      } else {\n        inCheckState = false;\n      }\n\n      if (text[offset] === \"\\n\") {\n        // Reset counting state\n        inCoutingState = true;\n        leadingWhitespaceCharCount = 0;\n      }\n      offset++;\n    }\n  },\n\n  /*\n   * Reads dereferencable scalar\n   */\n  read_dereferencable_scalar: function () {\n    let result = null;\n\n    switch (this.token) {\n      case this.tok.T_CONSTANT_ENCAPSED_STRING:\n        {\n          let value = this.node(\"string\");\n          const text = this.text();\n          let offset = 0;\n          if (text[0] === \"b\" || text[0] === \"B\") {\n            offset = 1;\n          }\n          const isDoubleQuote = text[offset] === '\"';\n          this.next();\n          const textValue = this.resolve_special_chars(\n            text.substring(offset + 1, text.length - 1),\n            isDoubleQuote\n          );\n          value = value(\n            isDoubleQuote,\n            textValue,\n            offset === 1, // unicode flag\n            text\n          );\n          if (this.token === this.tok.T_DOUBLE_COLON) {\n            // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1151\n            result = this.read_static_getter(value);\n          } else {\n            // dirrect string\n            result = value;\n          }\n        }\n        break;\n      case this.tok.T_ARRAY: // array parser\n        result = this.read_array();\n        break;\n      case \"[\": // short array format\n        result = this.read_array();\n        break;\n    }\n\n    return result;\n  },\n\n  /*\n   * ```ebnf\n   *  scalar ::= T_MAGIC_CONST\n   *       | T_LNUMBER | T_DNUMBER\n   *       | T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE? T_END_HEREDOC\n   *       | '\"' encaps_list '\"'\n   *       | T_START_HEREDOC encaps_list T_END_HEREDOC\n   *       | namespace_name (T_DOUBLE_COLON T_STRING)?\n   * ```\n   */\n  read_scalar: function () {\n    if (this.is(\"T_MAGIC_CONST\")) {\n      return this.get_magic_constant();\n    } else {\n      let value, node;\n      switch (this.token) {\n        // NUMERIC\n        case this.tok.T_LNUMBER: // long\n        case this.tok.T_DNUMBER: {\n          // double\n          const result = this.node(\"number\");\n          value = this.text();\n          this.next();\n          return result(value, null);\n        }\n        case this.tok.T_START_HEREDOC:\n          if (this.lexer.curCondition === \"ST_NOWDOC\") {\n            const start = this.lexer.yylloc.first_offset;\n            node = this.node(\"nowdoc\");\n            value = this.next().text();\n            // strip the last line return char\n            if (this.lexer.heredoc_label.indentation > 0) {\n              value = value.substring(\n                0,\n                value.length - this.lexer.heredoc_label.indentation\n              );\n            }\n            const lastCh = value[value.length - 1];\n            if (lastCh === \"\\n\") {\n              if (value[value.length - 2] === \"\\r\") {\n                // windows style\n                value = value.substring(0, value.length - 2);\n              } else {\n                // linux style\n                value = value.substring(0, value.length - 1);\n              }\n            } else if (lastCh === \"\\r\") {\n              // mac style\n              value = value.substring(0, value.length - 1);\n            }\n            this.expect(this.tok.T_ENCAPSED_AND_WHITESPACE) && this.next();\n            this.expect(this.tok.T_END_HEREDOC) && this.next();\n            const raw = this.lexer._input.substring(\n              start,\n              this.lexer.yylloc.first_offset\n            );\n            node = node(\n              this.remove_heredoc_leading_whitespace_chars(\n                value,\n                this.lexer.heredoc_label.indentation,\n                this.lexer.heredoc_label.indentation_uses_spaces,\n                this.lexer.heredoc_label.first_encaps_node\n              ),\n              raw,\n              this.lexer.heredoc_label.label\n            );\n            return node;\n          } else {\n            return this.read_encapsed_string(this.tok.T_END_HEREDOC);\n          }\n\n        case '\"':\n          return this.read_encapsed_string('\"');\n\n        case 'b\"':\n        case 'B\"': {\n          return this.read_encapsed_string('\"', true);\n        }\n\n        // TEXTS\n        case this.tok.T_CONSTANT_ENCAPSED_STRING:\n        case this.tok.T_ARRAY: // array parser\n        case \"[\": // short array format\n          return this.read_dereferencable_scalar();\n        default: {\n          const err = this.error(\"SCALAR\");\n          // graceful mode : ignore token & return error node\n          this.next();\n          return err;\n        }\n      }\n    }\n  },\n  /*\n   * Handles the dereferencing\n   */\n  read_dereferencable: function (expr) {\n    let result, offset;\n    const node = this.node(\"offsetlookup\");\n    if (this.token === \"[\") {\n      offset = this.next().read_expr();\n      if (this.expect(\"]\")) this.next();\n      result = node(expr, offset);\n    } else if (this.token === this.tok.T_DOLLAR_OPEN_CURLY_BRACES) {\n      offset = this.read_encapsed_string_item(false);\n      result = node(expr, offset);\n    }\n    return result;\n  },\n  /*\n   * Reads and extracts an encapsed item\n   * ```ebnf\n   * encapsed_string_item ::= T_ENCAPSED_AND_WHITESPACE\n   *  | T_DOLLAR_OPEN_CURLY_BRACES expr '}'\n   *  | T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}'\n   *  | T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}'\n   *  | T_CURLY_OPEN variable '}'\n   *  | variable\n   *  | variable '[' expr ']'\n   *  | variable T_OBJECT_OPERATOR T_STRING\n   * ```\n   * @return {String|Variable|Expr|Lookup}\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1219\n   */\n  read_encapsed_string_item: function (isDoubleQuote) {\n    const encapsedPart = this.node(\"encapsedpart\");\n    let syntax = null;\n    let curly = false;\n    let result = this.node(),\n      offset,\n      node,\n      name;\n\n    // plain text\n    // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1222\n    if (this.token === this.tok.T_ENCAPSED_AND_WHITESPACE) {\n      const text = this.text();\n      this.next();\n\n      // if this.lexer.heredoc_label.first_encaps_node -> remove first indents\n      result = result(\n        \"string\",\n        false,\n        this.version >= 703 && !this.lexer.heredoc_label.finished\n          ? this.remove_heredoc_leading_whitespace_chars(\n              this.resolve_special_chars(text, isDoubleQuote),\n              this.lexer.heredoc_label.indentation,\n              this.lexer.heredoc_label.indentation_uses_spaces,\n              this.lexer.heredoc_label.first_encaps_node\n            )\n          : text,\n        false,\n        text\n      );\n    } else if (this.token === this.tok.T_DOLLAR_OPEN_CURLY_BRACES) {\n      syntax = \"simple\";\n      curly = true;\n      // dynamic variable name\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1239\n      name = null;\n      if (this.next().token === this.tok.T_STRING_VARNAME) {\n        name = this.node(\"variable\");\n        const varName = this.text();\n        this.next();\n        // check if lookup an offset\n        // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1243\n        if (this.token === \"[\") {\n          name = name(varName, false);\n          node = this.node(\"offsetlookup\");\n          offset = this.next().read_expr();\n          this.expect(\"]\") && this.next();\n          result = node(name, offset);\n        } else {\n          result = name(varName, false);\n        }\n      } else {\n        result = result(\"variable\", this.read_expr(), false);\n      }\n      this.expect(\"}\") && this.next();\n    } else if (this.token === this.tok.T_CURLY_OPEN) {\n      // expression\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1246\n      syntax = \"complex\";\n      result.destroy();\n      result = this.next().read_variable(false, false);\n      this.expect(\"}\") && this.next();\n    } else if (this.token === this.tok.T_VARIABLE) {\n      syntax = \"simple\";\n      // plain variable\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1231\n      result.destroy();\n      result = this.read_simple_variable();\n\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1233\n      if (this.token === \"[\") {\n        node = this.node(\"offsetlookup\");\n        offset = this.next().read_encaps_var_offset();\n        this.expect(\"]\") && this.next();\n        result = node(result, offset);\n      }\n\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1236\n      if (this.token === this.tok.T_OBJECT_OPERATOR) {\n        node = this.node(\"propertylookup\");\n        this.next().expect(this.tok.T_STRING);\n        const what = this.node(\"identifier\");\n        name = this.text();\n        this.next();\n        result = node(result, what(name));\n      }\n\n      // error / fallback\n    } else {\n      this.expect(this.tok.T_ENCAPSED_AND_WHITESPACE);\n      const value = this.text();\n      this.next();\n      // consider it as string\n      result.destroy();\n      result = result(\"string\", false, value, false, value);\n    }\n\n    // reset first_encaps_node to false after access any node\n    this.lexer.heredoc_label.first_encaps_node = false;\n    return encapsedPart(result, syntax, curly);\n  },\n  /*\n   * Reads an encapsed string\n   */\n  read_encapsed_string: function (expect, isBinary = false) {\n    const labelStart = this.lexer.yylloc.first_offset;\n    let node = this.node(\"encapsed\");\n    this.next();\n    const start = this.lexer.yylloc.prev_offset - (isBinary ? 1 : 0);\n    const value = [];\n    let type = null;\n\n    if (expect === \"`\") {\n      type = this.ast.encapsed.TYPE_SHELL;\n    } else if (expect === '\"') {\n      type = this.ast.encapsed.TYPE_STRING;\n    } else {\n      type = this.ast.encapsed.TYPE_HEREDOC;\n    }\n\n    // reading encapsed parts\n    while (this.token !== expect && this.token !== this.EOF) {\n      value.push(this.read_encapsed_string_item(true));\n    }\n    if (\n      value.length > 0 &&\n      value[value.length - 1].kind === \"encapsedpart\" &&\n      value[value.length - 1].expression.kind === \"string\"\n    ) {\n      const node = value[value.length - 1].expression;\n      const lastCh = node.value[node.value.length - 1];\n      if (lastCh === \"\\n\") {\n        if (node.value[node.value.length - 2] === \"\\r\") {\n          // windows style\n          node.value = node.value.substring(0, node.value.length - 2);\n        } else {\n          // linux style\n          node.value = node.value.substring(0, node.value.length - 1);\n        }\n      } else if (lastCh === \"\\r\") {\n        // mac style\n        node.value = node.value.substring(0, node.value.length - 1);\n      }\n    }\n    this.expect(expect) && this.next();\n    const raw = this.lexer._input.substring(\n      type === \"heredoc\" ? labelStart : start - 1,\n      this.lexer.yylloc.first_offset\n    );\n    node = node(value, raw, type);\n\n    if (expect === this.tok.T_END_HEREDOC) {\n      node.label = this.lexer.heredoc_label.label;\n      this.lexer.heredoc_label.finished = true;\n    }\n    return node;\n  },\n  /*\n   * Constant token\n   */\n  get_magic_constant: function () {\n    const result = this.node(\"magic\");\n    const name = this.text();\n    this.next();\n    return result(name.toUpperCase(), name);\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /*\n   * reading a list of top statements (helper for top_statement*)\n   * ```ebnf\n   *  top_statements ::= top_statement*\n   * ```\n   */\n  read_top_statements: function () {\n    let result = [];\n    while (this.token !== this.EOF && this.token !== \"}\") {\n      const statement = this.read_top_statement();\n      if (statement) {\n        if (Array.isArray(statement)) {\n          result = result.concat(statement);\n        } else {\n          result.push(statement);\n        }\n      }\n    }\n    return result;\n  },\n  /*\n   * reading a top statement\n   * ```ebnf\n   *  top_statement ::=\n   *       namespace | function | class\n   *       | interface | trait\n   *       | use_statements | const_list\n   *       | statement\n   * ```\n   */\n  read_top_statement: function () {\n    switch (this.token) {\n      case this.tok.T_FUNCTION:\n        return this.read_function(false, false);\n      // optional flags\n      case this.tok.T_ABSTRACT:\n      case this.tok.T_FINAL:\n      case this.tok.T_CLASS:\n        return this.read_class_declaration_statement();\n      case this.tok.T_INTERFACE:\n        return this.read_interface_declaration_statement();\n      case this.tok.T_TRAIT:\n        return this.read_trait_declaration_statement();\n      case this.tok.T_USE:\n        return this.read_use_statement();\n      case this.tok.T_CONST: {\n        const result = this.node(\"constantstatement\");\n        const items = this.next().read_const_list();\n        this.expectEndOfStatement();\n        return result(null, items);\n      }\n      case this.tok.T_NAMESPACE:\n        return this.read_namespace();\n      case this.tok.T_HALT_COMPILER: {\n        const result = this.node(\"halt\");\n        if (this.next().expect(\"(\")) this.next();\n        if (this.expect(\")\")) this.next();\n        this.expect(\";\");\n        this.lexer.done = true;\n        return result(this.lexer._input.substring(this.lexer.offset));\n      }\n      default:\n        return this.read_statement();\n    }\n  },\n  /*\n   * reads a list of simple inner statements (helper for inner_statement*)\n   * ```ebnf\n   *  inner_statements ::= inner_statement*\n   * ```\n   */\n  read_inner_statements: function () {\n    let result = [];\n    while (this.token != this.EOF && this.token !== \"}\") {\n      const statement = this.read_inner_statement();\n      if (statement) {\n        if (Array.isArray(statement)) {\n          result = result.concat(statement);\n        } else {\n          result.push(statement);\n        }\n      }\n    }\n    return result;\n  },\n  /*\n   * Reads a list of constants declaration\n   * ```ebnf\n   *   const_list ::= T_CONST T_STRING '=' expr (',' T_STRING '=' expr)* ';'\n   * ```\n   */\n  read_const_list: function () {\n    return this.read_list(\n      function () {\n        this.expect(this.tok.T_STRING);\n        const result = this.node(\"constant\");\n        let constName = this.node(\"identifier\");\n        const name = this.text();\n        this.next();\n        constName = constName(name);\n        if (this.expect(\"=\")) {\n          return result(constName, this.next().read_expr());\n        } else {\n          // fallback\n          return result(constName, null);\n        }\n      },\n      \",\",\n      false\n    );\n  },\n  /*\n   * Reads a list of constants declaration\n   * ```ebnf\n   *   declare_list ::= IDENTIFIER '=' expr (',' IDENTIFIER '=' expr)*\n   * ```\n   * @retrurn {Array}\n   */\n  read_declare_list: function () {\n    const result = [];\n    while (this.token != this.EOF && this.token !== \")\") {\n      this.expect(this.tok.T_STRING);\n      const directive = this.node(\"declaredirective\");\n      let key = this.node(\"identifier\");\n      const name = this.text();\n      this.next();\n      key = key(name);\n      let value = null;\n      if (this.expect(\"=\")) {\n        value = this.next().read_expr();\n      }\n      result.push(directive(key, value));\n      if (this.token !== \",\") break;\n      this.next();\n    }\n    return result;\n  },\n  /*\n   * reads a simple inner statement\n   * ```ebnf\n   *  inner_statement ::= '{' inner_statements '}' | token\n   * ```\n   */\n  read_inner_statement: function () {\n    switch (this.token) {\n      case this.tok.T_FUNCTION:\n        return this.read_function(false, false);\n      // optional flags\n      case this.tok.T_ABSTRACT:\n      case this.tok.T_FINAL:\n      case this.tok.T_CLASS:\n        return this.read_class_declaration_statement();\n      case this.tok.T_INTERFACE:\n        return this.read_interface_declaration_statement();\n      case this.tok.T_TRAIT:\n        return this.read_trait_declaration_statement();\n      case this.tok.T_HALT_COMPILER: {\n        this.raiseError(\n          \"__HALT_COMPILER() can only be used from the outermost scope\"\n        );\n        // fallback : returns a node but does not stop the parsing\n        let node = this.node(\"halt\");\n        this.next().expect(\"(\") && this.next();\n        this.expect(\")\") && this.next();\n        node = node(this.lexer._input.substring(this.lexer.offset));\n        this.expect(\";\") && this.next();\n        return node;\n      }\n      default:\n        return this.read_statement();\n    }\n  },\n  /*\n   * Reads statements\n   */\n  read_statement: function () {\n    switch (this.token) {\n      case \"{\":\n        return this.read_code_block(false);\n\n      case this.tok.T_IF:\n        return this.read_if();\n\n      case this.tok.T_SWITCH:\n        return this.read_switch();\n\n      case this.tok.T_FOR:\n        return this.read_for();\n\n      case this.tok.T_FOREACH:\n        return this.read_foreach();\n\n      case this.tok.T_WHILE:\n        return this.read_while();\n\n      case this.tok.T_DO:\n        return this.read_do();\n\n      case this.tok.T_COMMENT:\n        return this.read_comment();\n\n      case this.tok.T_DOC_COMMENT:\n        return this.read_doc_comment();\n\n      case this.tok.T_RETURN: {\n        const result = this.node(\"return\");\n        this.next();\n        const expr = this.read_optional_expr(\";\");\n        this.expectEndOfStatement();\n        return result(expr);\n      }\n\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L429\n      case this.tok.T_BREAK:\n      case this.tok.T_CONTINUE: {\n        const result = this.node(\n          this.token === this.tok.T_CONTINUE ? \"continue\" : \"break\"\n        );\n        this.next();\n        const level = this.read_optional_expr(\";\");\n        this.expectEndOfStatement();\n        return result(level);\n      }\n\n      case this.tok.T_GLOBAL: {\n        const result = this.node(\"global\");\n        const items = this.next().read_list(this.read_simple_variable, \",\");\n        this.expectEndOfStatement();\n        return result(items);\n      }\n\n      case this.tok.T_STATIC: {\n        const current = [this.token, this.lexer.getState()];\n        const result = this.node();\n        if (this.next().token === this.tok.T_DOUBLE_COLON) {\n          // static keyword for a class\n          this.lexer.tokens.push(current);\n          const expr = this.next().read_expr();\n          this.expectEndOfStatement(expr);\n          return result(\"expressionstatement\", expr);\n        }\n        if (this.token === this.tok.T_FUNCTION) {\n          return this.read_function(true, [0, 1, 0]);\n        }\n        const items = this.read_variable_declarations();\n        this.expectEndOfStatement();\n        return result(\"static\", items);\n      }\n\n      case this.tok.T_ECHO: {\n        const result = this.node(\"echo\");\n        const text = this.text();\n        const shortForm = text === \"<?=\" || text === \"<%=\";\n        const expressions = this.next().read_function_list(this.read_expr, \",\");\n        this.expectEndOfStatement();\n        return result(expressions, shortForm);\n      }\n\n      case this.tok.T_INLINE_HTML: {\n        const value = this.text();\n        let prevChar =\n          this.lexer.yylloc.first_offset > 0\n            ? this.lexer._input[this.lexer.yylloc.first_offset - 1]\n            : null;\n        const fixFirstLine = prevChar === \"\\r\" || prevChar === \"\\n\";\n        // revert back the first stripped line\n        if (fixFirstLine) {\n          if (\n            prevChar === \"\\n\" &&\n            this.lexer.yylloc.first_offset > 1 &&\n            this.lexer._input[this.lexer.yylloc.first_offset - 2] === \"\\r\"\n          ) {\n            prevChar = \"\\r\\n\";\n          }\n        }\n        const result = this.node(\"inline\");\n        this.next();\n        return result(value, fixFirstLine ? prevChar + value : value);\n      }\n\n      case this.tok.T_UNSET: {\n        const result = this.node(\"unset\");\n        this.next().expect(\"(\") && this.next();\n        const variables = this.read_function_list(this.read_variable, \",\");\n        this.expect(\")\") && this.next();\n        this.expect(\";\") && this.next();\n        return result(variables);\n      }\n\n      case this.tok.T_DECLARE: {\n        const result = this.node(\"declare\");\n        const body = [];\n        let mode;\n        this.next().expect(\"(\") && this.next();\n        const directives = this.read_declare_list();\n        this.expect(\")\") && this.next();\n        if (this.token === \":\") {\n          this.next();\n          while (\n            this.token != this.EOF &&\n            this.token !== this.tok.T_ENDDECLARE\n          ) {\n            // @todo : check declare_statement from php / not valid\n            body.push(this.read_top_statement());\n          }\n          if (\n            body.length === 0 &&\n            this.extractDoc &&\n            this._docs.length > this._docIndex\n          ) {\n            body.push(this.node(\"noop\")());\n          }\n          this.expect(this.tok.T_ENDDECLARE) && this.next();\n          this.expectEndOfStatement();\n          mode = this.ast.declare.MODE_SHORT;\n        } else if (this.token === \"{\") {\n          this.next();\n          while (this.token != this.EOF && this.token !== \"}\") {\n            // @todo : check declare_statement from php / not valid\n            body.push(this.read_top_statement());\n          }\n          if (\n            body.length === 0 &&\n            this.extractDoc &&\n            this._docs.length > this._docIndex\n          ) {\n            body.push(this.node(\"noop\")());\n          }\n          this.expect(\"}\") && this.next();\n          mode = this.ast.declare.MODE_BLOCK;\n        } else {\n          this.expect(\";\") && this.next();\n          mode = this.ast.declare.MODE_NONE;\n        }\n        return result(directives, body, mode);\n      }\n\n      case this.tok.T_TRY:\n        return this.read_try();\n\n      case this.tok.T_THROW: {\n        const result = this.node(\"throw\");\n        const expr = this.next().read_expr();\n        this.expectEndOfStatement();\n        return result(expr);\n      }\n\n      // ignore this (extra ponctuation)\n      case \";\": {\n        this.next();\n        return null;\n      }\n\n      case this.tok.T_STRING: {\n        const result = this.node();\n        const current = [this.token, this.lexer.getState()];\n        const labelNameText = this.text();\n        let labelName = this.node(\"identifier\");\n        // AST : https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L457\n        if (this.next().token === \":\") {\n          labelName = labelName(labelNameText);\n          this.next();\n          return result(\"label\", labelName);\n        } else {\n          labelName.destroy();\n        }\n\n        // default fallback expr / T_STRING '::' (etc...)\n        result.destroy();\n        this.lexer.tokens.push(current);\n        const statement = this.node(\"expressionstatement\");\n        const expr = this.next().read_expr();\n        this.expectEndOfStatement(expr);\n        return statement(expr);\n      }\n\n      case this.tok.T_GOTO: {\n        const result = this.node(\"goto\");\n        let labelName = null;\n        if (this.next().expect(this.tok.T_STRING)) {\n          labelName = this.node(\"identifier\");\n          const name = this.text();\n          this.next();\n          labelName = labelName(name);\n          this.expectEndOfStatement();\n        }\n        return result(labelName);\n      }\n\n      default: {\n        // default fallback expr\n        const statement = this.node(\"expressionstatement\");\n        const expr = this.read_expr();\n        this.expectEndOfStatement(expr);\n        return statement(expr);\n      }\n    }\n  },\n  /*\n   * ```ebnf\n   *  code_block ::= '{' (inner_statements | top_statements) '}'\n   * ```\n   */\n  read_code_block: function (top) {\n    const result = this.node(\"block\");\n    this.expect(\"{\") && this.next();\n    const body = top\n      ? this.read_top_statements()\n      : this.read_inner_statements();\n    if (\n      body.length === 0 &&\n      this.extractDoc &&\n      this._docs.length > this._docIndex\n    ) {\n      body.push(this.node(\"noop\")());\n    }\n    this.expect(\"}\") && this.next();\n    return result(null, body);\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /*\n   * Reads a switch statement\n   * ```ebnf\n   *  switch ::= T_SWITCH '(' expr ')' switch_case_list\n   * ```\n   * @return {Switch}\n   * @see http://php.net/manual/en/control-structures.switch.php\n   */\n  read_switch: function () {\n    const result = this.node(\"switch\");\n    this.expect(this.tok.T_SWITCH) && this.next();\n    this.expect(\"(\") && this.next();\n    const test = this.read_expr();\n    this.expect(\")\") && this.next();\n    const shortForm = this.token === \":\";\n    const body = this.read_switch_case_list();\n    return result(test, body, shortForm);\n  },\n  /*\n   * ```ebnf\n   *  switch_case_list ::= '{' ';'? case_list* '}' | ':' ';'? case_list* T_ENDSWITCH ';'\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L566\n   */\n  read_switch_case_list: function () {\n    // DETECT SWITCH MODE\n    let expect = null;\n    const result = this.node(\"block\");\n    const items = [];\n    if (this.token === \"{\") {\n      expect = \"}\";\n    } else if (this.token === \":\") {\n      expect = this.tok.T_ENDSWITCH;\n    } else {\n      this.expect([\"{\", \":\"]);\n    }\n    this.next();\n    // OPTIONNAL ';'\n    // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L570\n    if (this.token === \";\") {\n      this.next();\n    }\n    // EXTRACTING CASES\n    while (this.token !== this.EOF && this.token !== expect) {\n      items.push(this.read_case_list(expect));\n    }\n    if (\n      items.length === 0 &&\n      this.extractDoc &&\n      this._docs.length > this._docIndex\n    ) {\n      items.push(this.node(\"noop\")());\n    }\n    // CHECK END TOKEN\n    this.expect(expect) && this.next();\n    if (expect === this.tok.T_ENDSWITCH) {\n      this.expectEndOfStatement();\n    }\n    return result(null, items);\n  },\n  /*\n   * ```ebnf\n   *   case_list ::= ((T_CASE expr) | T_DEFAULT) (':' | ';') inner_statement*\n   * ```\n   */\n  read_case_list: function (stopToken) {\n    const result = this.node(\"case\");\n    let test = null;\n    if (this.token === this.tok.T_CASE) {\n      test = this.next().read_expr();\n    } else if (this.token === this.tok.T_DEFAULT) {\n      // the default entry - no condition\n      this.next();\n    } else {\n      this.expect([this.tok.T_CASE, this.tok.T_DEFAULT]);\n    }\n    // case_separator\n    this.expect([\":\", \";\"]) && this.next();\n    const body = this.node(\"block\");\n    const items = [];\n    while (\n      this.token !== this.EOF &&\n      this.token !== stopToken &&\n      this.token !== this.tok.T_CASE &&\n      this.token !== this.tok.T_DEFAULT\n    ) {\n      items.push(this.read_inner_statement());\n    }\n    return result(test, body(null, items));\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /*\n   * ```ebnf\n   *  try ::= T_TRY '{' inner_statement* '}'\n   *          (\n   *              T_CATCH '(' namespace_name variable ')' '{'  inner_statement* '}'\n   *          )*\n   *          (T_FINALLY '{' inner_statement* '}')?\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L448\n   * @return {Try}\n   */\n  read_try: function () {\n    this.expect(this.tok.T_TRY);\n    const result = this.node(\"try\");\n    let always = null;\n    const catches = [];\n    const body = this.next().read_statement();\n    // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L455\n    while (this.token === this.tok.T_CATCH) {\n      const item = this.node(\"catch\");\n      this.next().expect(\"(\") && this.next();\n      const what = this.read_list(this.read_namespace_name, \"|\", false);\n      const variable = this.read_variable(true, false);\n      this.expect(\")\");\n      catches.push(item(this.next().read_statement(), what, variable));\n    }\n    if (this.token === this.tok.T_FINALLY) {\n      always = this.next().read_statement();\n    }\n    return result(body, catches, always);\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /*\n   * Reads a short form of tokens\n   * @param {Number} token - The ending token\n   * @return {Block}\n   */\n  read_short_form: function (token) {\n    const body = this.node(\"block\");\n    const items = [];\n    if (this.expect(\":\")) this.next();\n    while (this.token != this.EOF && this.token !== token) {\n      items.push(this.read_inner_statement());\n    }\n    if (\n      items.length === 0 &&\n      this.extractDoc &&\n      this._docs.length > this._docIndex\n    ) {\n      items.push(this.node(\"noop\")());\n    }\n    if (this.expect(token)) this.next();\n    this.expectEndOfStatement();\n    return body(null, items);\n  },\n\n  /*\n   * https://wiki.php.net/rfc/trailing-comma-function-calls\n   * @param {*} item\n   * @param {*} separator\n   */\n  read_function_list: function (item, separator) {\n    const result = [];\n    do {\n      if (this.token == separator && this.version >= 703 && result.length > 0) {\n        result.push(this.node(\"noop\")());\n        break;\n      }\n      result.push(item.apply(this, []));\n      if (this.token != separator) {\n        break;\n      }\n      if (this.next().token == \")\" && this.version >= 703) {\n        break;\n      }\n    } while (this.token != this.EOF);\n    return result;\n  },\n\n  /*\n   * Helper : reads a list of tokens / sample : T_STRING ',' T_STRING ...\n   * ```ebnf\n   * list ::= separator? ( item separator )* item\n   * ```\n   */\n  read_list: function (item, separator, preserveFirstSeparator) {\n    const result = [];\n\n    if (this.token == separator) {\n      if (preserveFirstSeparator) {\n        result.push(typeof item === \"function\" ? this.node(\"noop\")() : null);\n      }\n      this.next();\n    }\n\n    if (typeof item === \"function\") {\n      do {\n        const itemResult = item.apply(this, []);\n        if (itemResult) {\n          result.push(itemResult);\n        }\n        if (this.token != separator) {\n          break;\n        }\n      } while (this.next().token != this.EOF);\n    } else {\n      if (this.expect(item)) {\n        result.push(this.text());\n      } else {\n        return [];\n      }\n      while (this.next().token != this.EOF) {\n        if (this.token != separator) break;\n        // trim current separator & check item\n        if (this.next().token != item) break;\n        result.push(this.text());\n      }\n    }\n    return result;\n  },\n\n  /*\n   * Reads a list of names separated by a comma\n   *\n   * ```ebnf\n   * name_list ::= namespace (',' namespace)*\n   * ```\n   *\n   * Sample code :\n   * ```php\n   * <?php class foo extends bar, baz { }\n   * ```\n   *\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L726\n   * @return {Reference[]}\n   */\n  read_name_list: function () {\n    return this.read_list(this.read_namespace_name, \",\", false);\n  },\n\n  /*\n   * Reads the byref token and assign it to the specified node\n   * @param {*} cb\n   */\n  read_byref: function (cb) {\n    let byref = this.node(\"byref\");\n    this.next();\n    byref = byref(null);\n    const result = cb();\n    if (result) {\n      this.ast.swapLocations(result, byref, result, this);\n      result.byref = true;\n    }\n    return result;\n  },\n\n  /*\n   * Reads a list of variables declarations\n   *\n   * ```ebnf\n   * variable_declaration ::= T_VARIABLE ('=' expr)?*\n   * variable_declarations ::= variable_declaration (',' variable_declaration)*\n   * ```\n   *\n   * Sample code :\n   * ```php\n   * <?php static $a = 'hello', $b = 'world';\n   * ```\n   * @return {StaticVariable[]} Returns an array composed by a list of variables, or\n   * assign values\n   */\n  read_variable_declarations: function () {\n    return this.read_list(function () {\n      const node = this.node(\"staticvariable\");\n      let variable = this.node(\"variable\");\n      // plain variable name\n      if (this.expect(this.tok.T_VARIABLE)) {\n        const name = this.text().substring(1);\n        this.next();\n        variable = variable(name, false);\n      } else {\n        variable = variable(\"#ERR\", false);\n      }\n      if (this.token === \"=\") {\n        return node(variable, this.next().read_expr());\n      } else {\n        return variable;\n      }\n    }, \",\");\n  },\n\n  /*\n   * Reads class extends\n   */\n  read_extends_from: function () {\n    if (this.token === this.tok.T_EXTENDS) {\n      return this.next().read_namespace_name();\n    }\n\n    return null;\n  },\n\n  /*\n   * Reads interface extends list\n   */\n  read_interface_extends_list: function () {\n    if (this.token === this.tok.T_EXTENDS) {\n      return this.next().read_name_list();\n    }\n\n    return null;\n  },\n\n  /*\n   * Reads implements list\n   */\n  read_implements_list: function () {\n    if (this.token === this.tok.T_IMPLEMENTS) {\n      return this.next().read_name_list();\n    }\n\n    return null;\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /*\n   * Reads a variable\n   *\n   * ```ebnf\n   *   variable ::= &? ...complex @todo\n   * ```\n   *\n   * Some samples of parsed code :\n   * ```php\n   *  &$var                      // simple var\n   *  $var                      // simple var\n   *  classname::CONST_NAME     // dynamic class name with const retrieval\n   *  foo()                     // function call\n   *  $var->func()->property    // chained calls\n   * ```\n   */\n  read_variable: function (read_only, encapsed) {\n    let result;\n\n    // check the byref flag\n    if (this.token === \"&\") {\n      return this.read_byref(\n        this.read_variable.bind(this, read_only, encapsed)\n      );\n    }\n\n    // reads the entry point\n    if (this.is([this.tok.T_VARIABLE, \"$\"])) {\n      result = this.read_reference_variable(encapsed);\n    } else if (\n      this.is([\n        this.tok.T_NS_SEPARATOR,\n        this.tok.T_STRING,\n        this.tok.T_NAMESPACE,\n      ])\n    ) {\n      result = this.node();\n      const name = this.read_namespace_name();\n      if (\n        this.token != this.tok.T_DOUBLE_COLON &&\n        this.token != \"(\" &&\n        [\"parentreference\", \"selfreference\"].indexOf(name.kind) === -1\n      ) {\n        // @see parser.js line 130 : resolves a conflict with scalar\n        const literal = name.name.toLowerCase();\n        if (literal === \"true\") {\n          result = name.destroy(result(\"boolean\", true, name.name));\n        } else if (literal === \"false\") {\n          result = name.destroy(result(\"boolean\", false, name.name));\n        } else if (literal === \"null\") {\n          result = name.destroy(result(\"nullkeyword\", name.name));\n        } else {\n          result.destroy(name);\n          result = name;\n        }\n      } else {\n        // @fixme possible #193 bug\n        result.destroy(name);\n        result = name;\n      }\n    } else if (this.token === this.tok.T_STATIC) {\n      result = this.node(\"staticreference\");\n      const raw = this.text();\n      this.next();\n      result = result(raw);\n    } else {\n      this.expect(\"VARIABLE\");\n    }\n\n    // static mode\n    if (this.token === this.tok.T_DOUBLE_COLON) {\n      result = this.read_static_getter(result, encapsed);\n    }\n\n    return this.recursive_variable_chain_scan(result, read_only, encapsed);\n  },\n\n  // resolves a static call\n  read_static_getter: function (what, encapsed) {\n    const result = this.node(\"staticlookup\");\n    let offset, name;\n    if (this.next().is([this.tok.T_VARIABLE, \"$\"])) {\n      offset = this.read_reference_variable(encapsed);\n    } else if (\n      this.token === this.tok.T_STRING ||\n      this.token === this.tok.T_CLASS ||\n      (this.version >= 700 && this.is(\"IDENTIFIER\"))\n    ) {\n      offset = this.node(\"identifier\");\n      name = this.text();\n      this.next();\n      offset = offset(name);\n    } else if (this.token === \"{\") {\n      offset = this.node(\"literal\");\n      name = this.next().read_expr();\n      this.expect(\"}\") && this.next();\n      offset = offset(\"literal\", name, null);\n      this.expect(\"(\");\n    } else {\n      this.error([this.tok.T_VARIABLE, this.tok.T_STRING]);\n      // graceful mode : set getter as error node and continue\n      offset = this.node(\"identifier\");\n      name = this.text();\n      this.next();\n      offset = offset(name);\n    }\n    return result(what, offset);\n  },\n\n  read_what: function (is_static_lookup = false) {\n    let what = null;\n    let name = null;\n    switch (this.next().token) {\n      case this.tok.T_STRING:\n        what = this.node(\"identifier\");\n        name = this.text();\n        this.next();\n        what = what(name);\n\n        if (is_static_lookup && this.token === this.tok.T_OBJECT_OPERATOR) {\n          this.error();\n        }\n        break;\n      case this.tok.T_VARIABLE:\n        what = this.node(\"variable\");\n        name = this.text().substring(1);\n        this.next();\n        what = what(name, false);\n        break;\n      case \"$\":\n        what = this.node();\n        this.next().expect([\"$\", \"{\", this.tok.T_VARIABLE]);\n        if (this.token === \"{\") {\n          // $obj->${$varname}\n          name = this.next().read_expr();\n          this.expect(\"}\") && this.next();\n          what = what(\"variable\", name, true);\n        } else {\n          // $obj->$$varname\n          name = this.read_expr();\n          what = what(\"variable\", name, false);\n        }\n        break;\n      case \"{\":\n        what = this.node(\"encapsedpart\");\n        name = this.next().read_expr();\n        this.expect(\"}\") && this.next();\n        what = what(name, \"complex\", false);\n        break;\n      default:\n        this.error([this.tok.T_STRING, this.tok.T_VARIABLE, \"$\", \"{\"]);\n        // graceful mode : set what as error mode & continue\n        what = this.node(\"identifier\");\n        name = this.text();\n        this.next();\n        what = what(name);\n        break;\n    }\n\n    return what;\n  },\n\n  recursive_variable_chain_scan: function (result, read_only, encapsed) {\n    let node, offset;\n    recursive_scan_loop: while (this.token != this.EOF) {\n      switch (this.token) {\n        case \"(\":\n          if (read_only) {\n            // @fixme : add more informations & test\n            return result;\n          } else {\n            result = this.node(\"call\")(result, this.read_argument_list());\n          }\n          break;\n        case \"[\":\n        case \"{\": {\n          const backet = this.token;\n          const isSquareBracket = backet === \"[\";\n          node = this.node(\"offsetlookup\");\n          this.next();\n          offset = false;\n          if (encapsed) {\n            offset = this.read_encaps_var_offset();\n            this.expect(isSquareBracket ? \"]\" : \"}\") && this.next();\n          } else {\n            const isCallableVariable = isSquareBracket\n              ? this.token !== \"]\"\n              : this.token !== \"}\";\n            // callable_variable : https://github.com/php/php-src/blob/493524454d66adde84e00d249d607ecd540de99f/Zend/zend_language_parser.y#L1122\n            if (isCallableVariable) {\n              offset = this.read_expr();\n              this.expect(isSquareBracket ? \"]\" : \"}\") && this.next();\n            } else {\n              this.next();\n            }\n          }\n          result = node(result, offset);\n          break;\n        }\n        case this.tok.T_DOUBLE_COLON:\n          // @see https://github.com/glayzzle/php-parser/issues/107#issuecomment-354104574\n          if (\n            result.kind === \"staticlookup\" &&\n            result.offset.kind === \"identifier\"\n          ) {\n            this.error();\n          }\n\n          node = this.node(\"staticlookup\");\n          result = node(result, this.read_what(true));\n\n          // fix 185\n          // static lookup dereferencables are limited to staticlookup over functions\n          /*if (dereferencable && this.token !== \"(\") {\n            this.error(\"(\");\n          }*/\n          break;\n        case this.tok.T_OBJECT_OPERATOR: {\n          node = this.node(\"propertylookup\");\n          result = node(result, this.read_what());\n          break;\n        }\n        default:\n          break recursive_scan_loop;\n      }\n    }\n    return result;\n  },\n  /*\n   * https://github.com/php/php-src/blob/493524454d66adde84e00d249d607ecd540de99f/Zend/zend_language_parser.y#L1231\n   */\n  read_encaps_var_offset: function () {\n    let offset = this.node();\n    if (this.token === this.tok.T_STRING) {\n      const text = this.text();\n      this.next();\n      offset = offset(\"identifier\", text);\n    } else if (this.token === this.tok.T_NUM_STRING) {\n      const num = this.text();\n      this.next();\n      offset = offset(\"number\", num, null);\n    } else if (this.token === \"-\") {\n      this.next();\n      const num = -1 * this.text();\n      this.expect(this.tok.T_NUM_STRING) && this.next();\n      offset = offset(\"number\", num, null);\n    } else if (this.token === this.tok.T_VARIABLE) {\n      const name = this.text().substring(1);\n      this.next();\n      offset = offset(\"variable\", name, false);\n    } else {\n      this.expect([\n        this.tok.T_STRING,\n        this.tok.T_NUM_STRING,\n        \"-\",\n        this.tok.T_VARIABLE,\n      ]);\n      // fallback : consider as identifier\n      const text = this.text();\n      this.next();\n      offset = offset(\"identifier\", text);\n    }\n    return offset;\n  },\n  /*\n   * ```ebnf\n   *  reference_variable ::=  simple_variable ('[' OFFSET ']')* | '{' EXPR '}'\n   * ```\n   * <code>\n   *  $foo[123];      // foo is an array ==> gets its entry\n   *  $foo{1};        // foo is a string ==> get the 2nd char offset\n   *  ${'foo'}[123];  // get the dynamic var $foo\n   *  $foo[123]{1};   // gets the 2nd char from the 123 array entry\n   * </code>\n   */\n  read_reference_variable: function (encapsed) {\n    let result = this.read_simple_variable();\n    let offset;\n    while (this.token != this.EOF) {\n      const node = this.node();\n      if (this.token == \"{\" && !encapsed) {\n        // @fixme check coverage, not sure thats working\n        offset = this.next().read_expr();\n        this.expect(\"}\") && this.next();\n        result = node(\"offsetlookup\", result, offset);\n      } else {\n        node.destroy();\n        break;\n      }\n    }\n    return result;\n  },\n  /*\n   * ```ebnf\n   *  simple_variable ::= T_VARIABLE | '$' '{' expr '}' | '$' simple_variable\n   * ```\n   */\n  read_simple_variable: function () {\n    let result = this.node(\"variable\");\n    let name;\n    if (\n      this.expect([this.tok.T_VARIABLE, \"$\"]) &&\n      this.token === this.tok.T_VARIABLE\n    ) {\n      // plain variable name\n      name = this.text().substring(1);\n      this.next();\n      result = result(name, false);\n    } else {\n      if (this.token === \"$\") this.next();\n      // dynamic variable name\n      switch (this.token) {\n        case \"{\": {\n          const expr = this.next().read_expr();\n          this.expect(\"}\") && this.next();\n          result = result(expr, true);\n          break;\n        }\n        case \"$\": // $$$var\n          result = result(this.read_simple_variable(), false);\n          break;\n        case this.tok.T_VARIABLE: {\n          // $$var\n          name = this.text().substring(1);\n          const node = this.node(\"variable\");\n          this.next();\n          result = result(node(name, false), false);\n          break;\n        }\n        default:\n          this.error([\"{\", \"$\", this.tok.T_VARIABLE]);\n          // graceful mode\n          name = this.text();\n          this.next();\n          result = result(name, false);\n      }\n    }\n    return result;\n  },\n};\n","/**\n * Copyright (C) 2018 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\n/**\n * @memberOf module:php-parser\n * @readonly\n * @enum\n */\nconst TokenNames = {\n  T_HALT_COMPILER: 101,\n  T_USE: 102,\n  T_ENCAPSED_AND_WHITESPACE: 103,\n  T_OBJECT_OPERATOR: 104,\n  T_STRING: 105,\n  T_DOLLAR_OPEN_CURLY_BRACES: 106,\n  T_STRING_VARNAME: 107,\n  T_CURLY_OPEN: 108,\n  T_NUM_STRING: 109,\n  T_ISSET: 110,\n  T_EMPTY: 111,\n  T_INCLUDE: 112,\n  T_INCLUDE_ONCE: 113,\n  T_EVAL: 114,\n  T_REQUIRE: 115,\n  T_REQUIRE_ONCE: 116,\n  T_NAMESPACE: 117,\n  T_NS_SEPARATOR: 118,\n  T_AS: 119,\n  T_IF: 120,\n  T_ENDIF: 121,\n  T_WHILE: 122,\n  T_DO: 123,\n  T_FOR: 124,\n  T_SWITCH: 125,\n  T_BREAK: 126,\n  T_CONTINUE: 127,\n  T_RETURN: 128,\n  T_GLOBAL: 129,\n  T_STATIC: 130,\n  T_ECHO: 131,\n  T_INLINE_HTML: 132,\n  T_UNSET: 133,\n  T_FOREACH: 134,\n  T_DECLARE: 135,\n  T_TRY: 136,\n  T_THROW: 137,\n  T_GOTO: 138,\n  T_FINALLY: 139,\n  T_CATCH: 140,\n  T_ENDDECLARE: 141,\n  T_LIST: 142,\n  T_CLONE: 143,\n  T_PLUS_EQUAL: 144,\n  T_MINUS_EQUAL: 145,\n  T_MUL_EQUAL: 146,\n  T_DIV_EQUAL: 147,\n  T_CONCAT_EQUAL: 148,\n  T_MOD_EQUAL: 149,\n  T_AND_EQUAL: 150,\n  T_OR_EQUAL: 151,\n  T_XOR_EQUAL: 152,\n  T_SL_EQUAL: 153,\n  T_SR_EQUAL: 154,\n  T_INC: 155,\n  T_DEC: 156,\n  T_BOOLEAN_OR: 157,\n  T_BOOLEAN_AND: 158,\n  T_LOGICAL_OR: 159,\n  T_LOGICAL_AND: 160,\n  T_LOGICAL_XOR: 161,\n  T_SL: 162,\n  T_SR: 163,\n  T_IS_IDENTICAL: 164,\n  T_IS_NOT_IDENTICAL: 165,\n  T_IS_EQUAL: 166,\n  T_IS_NOT_EQUAL: 167,\n  T_IS_SMALLER_OR_EQUAL: 168,\n  T_IS_GREATER_OR_EQUAL: 169,\n  T_INSTANCEOF: 170,\n  T_INT_CAST: 171,\n  T_DOUBLE_CAST: 172,\n  T_STRING_CAST: 173,\n  T_ARRAY_CAST: 174,\n  T_OBJECT_CAST: 175,\n  T_BOOL_CAST: 176,\n  T_UNSET_CAST: 177,\n  T_EXIT: 178,\n  T_PRINT: 179,\n  T_YIELD: 180,\n  T_YIELD_FROM: 181,\n  T_FUNCTION: 182,\n  T_DOUBLE_ARROW: 183,\n  T_DOUBLE_COLON: 184,\n  T_ARRAY: 185,\n  T_CALLABLE: 186,\n  T_CLASS: 187,\n  T_ABSTRACT: 188,\n  T_TRAIT: 189,\n  T_FINAL: 190,\n  T_EXTENDS: 191,\n  T_INTERFACE: 192,\n  T_IMPLEMENTS: 193,\n  T_VAR: 194,\n  T_PUBLIC: 195,\n  T_PROTECTED: 196,\n  T_PRIVATE: 197,\n  T_CONST: 198,\n  T_NEW: 199,\n  T_INSTEADOF: 200,\n  T_ELSEIF: 201,\n  T_ELSE: 202,\n  T_ENDSWITCH: 203,\n  T_CASE: 204,\n  T_DEFAULT: 205,\n  T_ENDFOR: 206,\n  T_ENDFOREACH: 207,\n  T_ENDWHILE: 208,\n  T_CONSTANT_ENCAPSED_STRING: 209,\n  T_LNUMBER: 210,\n  T_DNUMBER: 211,\n  T_LINE: 212,\n  T_FILE: 213,\n  T_DIR: 214,\n  T_TRAIT_C: 215,\n  T_METHOD_C: 216,\n  T_FUNC_C: 217,\n  T_NS_C: 218,\n  T_START_HEREDOC: 219,\n  T_END_HEREDOC: 220,\n  T_CLASS_C: 221,\n  T_VARIABLE: 222,\n  T_OPEN_TAG: 223,\n  T_OPEN_TAG_WITH_ECHO: 224,\n  T_CLOSE_TAG: 225,\n  T_WHITESPACE: 226,\n  T_COMMENT: 227,\n  T_DOC_COMMENT: 228,\n  T_ELLIPSIS: 229,\n  T_COALESCE: 230,\n  T_POW: 231,\n  T_POW_EQUAL: 232,\n  T_SPACESHIP: 233,\n  T_COALESCE_EQUAL: 234,\n  T_FN: 235,\n};\n\n/**\n * PHP AST Tokens\n * @readonly\n * @memberOf module:php-parser\n *\n * @type {object}\n * @property {Object.<number, string>} values\n * @property {TokenNames} names\n */\nconst tokens = {\n  values: {\n    101: \"T_HALT_COMPILER\",\n    102: \"T_USE\",\n    103: \"T_ENCAPSED_AND_WHITESPACE\",\n    104: \"T_OBJECT_OPERATOR\",\n    105: \"T_STRING\",\n    106: \"T_DOLLAR_OPEN_CURLY_BRACES\",\n    107: \"T_STRING_VARNAME\",\n    108: \"T_CURLY_OPEN\",\n    109: \"T_NUM_STRING\",\n    110: \"T_ISSET\",\n    111: \"T_EMPTY\",\n    112: \"T_INCLUDE\",\n    113: \"T_INCLUDE_ONCE\",\n    114: \"T_EVAL\",\n    115: \"T_REQUIRE\",\n    116: \"T_REQUIRE_ONCE\",\n    117: \"T_NAMESPACE\",\n    118: \"T_NS_SEPARATOR\",\n    119: \"T_AS\",\n    120: \"T_IF\",\n    121: \"T_ENDIF\",\n    122: \"T_WHILE\",\n    123: \"T_DO\",\n    124: \"T_FOR\",\n    125: \"T_SWITCH\",\n    126: \"T_BREAK\",\n    127: \"T_CONTINUE\",\n    128: \"T_RETURN\",\n    129: \"T_GLOBAL\",\n    130: \"T_STATIC\",\n    131: \"T_ECHO\",\n    132: \"T_INLINE_HTML\",\n    133: \"T_UNSET\",\n    134: \"T_FOREACH\",\n    135: \"T_DECLARE\",\n    136: \"T_TRY\",\n    137: \"T_THROW\",\n    138: \"T_GOTO\",\n    139: \"T_FINALLY\",\n    140: \"T_CATCH\",\n    141: \"T_ENDDECLARE\",\n    142: \"T_LIST\",\n    143: \"T_CLONE\",\n    144: \"T_PLUS_EQUAL\",\n    145: \"T_MINUS_EQUAL\",\n    146: \"T_MUL_EQUAL\",\n    147: \"T_DIV_EQUAL\",\n    148: \"T_CONCAT_EQUAL\",\n    149: \"T_MOD_EQUAL\",\n    150: \"T_AND_EQUAL\",\n    151: \"T_OR_EQUAL\",\n    152: \"T_XOR_EQUAL\",\n    153: \"T_SL_EQUAL\",\n    154: \"T_SR_EQUAL\",\n    155: \"T_INC\",\n    156: \"T_DEC\",\n    157: \"T_BOOLEAN_OR\",\n    158: \"T_BOOLEAN_AND\",\n    159: \"T_LOGICAL_OR\",\n    160: \"T_LOGICAL_AND\",\n    161: \"T_LOGICAL_XOR\",\n    162: \"T_SL\",\n    163: \"T_SR\",\n    164: \"T_IS_IDENTICAL\",\n    165: \"T_IS_NOT_IDENTICAL\",\n    166: \"T_IS_EQUAL\",\n    167: \"T_IS_NOT_EQUAL\",\n    168: \"T_IS_SMALLER_OR_EQUAL\",\n    169: \"T_IS_GREATER_OR_EQUAL\",\n    170: \"T_INSTANCEOF\",\n    171: \"T_INT_CAST\",\n    172: \"T_DOUBLE_CAST\",\n    173: \"T_STRING_CAST\",\n    174: \"T_ARRAY_CAST\",\n    175: \"T_OBJECT_CAST\",\n    176: \"T_BOOL_CAST\",\n    177: \"T_UNSET_CAST\",\n    178: \"T_EXIT\",\n    179: \"T_PRINT\",\n    180: \"T_YIELD\",\n    181: \"T_YIELD_FROM\",\n    182: \"T_FUNCTION\",\n    183: \"T_DOUBLE_ARROW\",\n    184: \"T_DOUBLE_COLON\",\n    185: \"T_ARRAY\",\n    186: \"T_CALLABLE\",\n    187: \"T_CLASS\",\n    188: \"T_ABSTRACT\",\n    189: \"T_TRAIT\",\n    190: \"T_FINAL\",\n    191: \"T_EXTENDS\",\n    192: \"T_INTERFACE\",\n    193: \"T_IMPLEMENTS\",\n    194: \"T_VAR\",\n    195: \"T_PUBLIC\",\n    196: \"T_PROTECTED\",\n    197: \"T_PRIVATE\",\n    198: \"T_CONST\",\n    199: \"T_NEW\",\n    200: \"T_INSTEADOF\",\n    201: \"T_ELSEIF\",\n    202: \"T_ELSE\",\n    203: \"T_ENDSWITCH\",\n    204: \"T_CASE\",\n    205: \"T_DEFAULT\",\n    206: \"T_ENDFOR\",\n    207: \"T_ENDFOREACH\",\n    208: \"T_ENDWHILE\",\n    209: \"T_CONSTANT_ENCAPSED_STRING\",\n    210: \"T_LNUMBER\",\n    211: \"T_DNUMBER\",\n    212: \"T_LINE\",\n    213: \"T_FILE\",\n    214: \"T_DIR\",\n    215: \"T_TRAIT_C\",\n    216: \"T_METHOD_C\",\n    217: \"T_FUNC_C\",\n    218: \"T_NS_C\",\n    219: \"T_START_HEREDOC\",\n    220: \"T_END_HEREDOC\",\n    221: \"T_CLASS_C\",\n    222: \"T_VARIABLE\",\n    223: \"T_OPEN_TAG\",\n    224: \"T_OPEN_TAG_WITH_ECHO\",\n    225: \"T_CLOSE_TAG\",\n    226: \"T_WHITESPACE\",\n    227: \"T_COMMENT\",\n    228: \"T_DOC_COMMENT\",\n    229: \"T_ELLIPSIS\",\n    230: \"T_COALESCE\",\n    231: \"T_POW\",\n    232: \"T_POW_EQUAL\",\n    233: \"T_SPACESHIP\",\n    234: \"T_COALESCE_EQUAL\",\n    235: \"T_FN\",\n  },\n  names: TokenNames,\n};\n\nmodule.exports = Object.freeze(tokens);\n","import Structure from \"../structures/Structure\";\nimport Exception from \"../throwable/Exception\";\nimport StructureConvertionException from \"../throwable/StructureConvertionException\";\nimport Throwable from \"../throwable/Throwable\";\nimport capitalize from \"../tools/tools\";\n\nexport default abstract class AbstractStructureConverter {\n    [key: string]: any;\n\n    #exceptions : Map<string, StructureConvertionException[]> = new Map();\n\n    constructor(converterConfig : any = {}) {\n        \n    }\n\n    protected abstract toCurrLang(tgStruct : any): Record<any, any> | null;\n\n    public canConvert(tgStructID : string) : boolean {\n        return typeof this['to' + capitalize(tgStructID)] === 'function';\n    }\n\n    public convert(structure: any, tgStructID : string, options : Record<string, any> = {}): Structure | null {\n        try {\n            const tgMethodName = tgStructID;\n            if(!this.canConvert(tgStructID)) {\n                throw new Exception(\"Convertion type \" + tgMethodName + \" not found in \" + this.constructor.name);\n            }\n            return this['to' + capitalize(tgMethodName)](structure, options);\n        } catch (exc) {\n            if(exc instanceof StructureConvertionException) {\n                this.pathException(exc);\n            }\n            return null;\n        }\n    };\n\n    public pathException(exc : StructureConvertionException, converterTarget : string = 'universal'): void {\n        if(!this.#exceptions.has(converterTarget))\n        {\n            this.#exceptions.set(converterTarget, []);\n        }\n        this.#exceptions?.get(converterTarget)?.push(exc);\n    }\n}","import AbstractStructureConverter from \"./AbstractStructureConverter\";\nimport JSObject from \"../libs/JSObject/JSObject\";\nimport capitalize from \"../tools/tools\";\nimport CurrentLangStructurePartialConverter from \"./fromCurrLang/CurrentLangStructurePartialConverter\";\nimport Exception from \"../throwable/Exception\";\n\nexport default class CurrentLangStructureConverter extends AbstractStructureConverter {\n    public registerConvertionMethod(tgPartialConverter : CurrentLangStructurePartialConverter): void\n    {\n        try {\n            if(!(tgPartialConverter instanceof CurrentLangStructurePartialConverter)) {\n                throw new Exception(\"Invalid partial converter providen in \");\n            }\n            Object.defineProperty(this, \"to\" + capitalize(tgPartialConverter.name), {\n                value:(objStruct : Record<string, any>, options: Record<string, any>) => {\n                    return tgPartialConverter.convert(objStruct, options);\n                },\n                configurable:false,\n                writable:false,\n                enumerable:true\n            });\n        } catch(exc) {\n            //this.pathException(exc);\n        }\n    }\n\n    public toJsObjectDeclaration(obj: Record<string, any>): string {\n        try {\n            const prepJSObjectDeclaration = JSObject.stringify(obj);\n            return prepJSObjectDeclaration;\n        } catch(jsexc) {\n            return \"\";\n        }\n    }\n\n    public toCurrLang(obj: Record<string, any>): Record<string, any> {\n        return obj;\n    }\n\n    public valueOf() : string[] {\n        const names = [];\n        for(let methName in this) {\n            if(methName.indexOf(\"to\") === 0) {\n                names.push(methName);\n            }\n        }\n        return names;\n    }\n}","import StructureConvertionException from \"../throwable/StructureConvertionException\";\nimport AbstractStructureConverter from \"./AbstractStructureConverter\";\nimport CurrentLangStructureConverter from \"./CurrentLangStructureConverter\";\n\nexport default class JSONStructureConverter extends AbstractStructureConverter {\n    toTextPairs(structure: any): any {\n        const langDataStruct = this.toCurrLang(structure);\n        for (const langDataInd in langDataStruct) {\n            \n        }\n    }\n\n    toCurrLang(tgStruct : string) : Record<any, any> | null {\n        try {\n            const parsedObj = JSON.parse(tgStruct);\n            return parsedObj;\n        } catch (jsexc) {\n            if(jsexc instanceof StructureConvertionException) {\n                this.pathException(jsexc);\n            }\n            return null;\n        }\n    }\n}","import PHPArray from \"../libs/PHPArray/PHPArray\";\nimport StructureConvertionException from \"../throwable/StructureConvertionException\";\nimport AbstractStructureConverter from \"./AbstractStructureConverter\";\n\nexport default class PHPArrayStructureConverter extends AbstractStructureConverter {\n    public toCurrLang(tgStruct: any): Record<any, any> | null {\n        try {\n            const parsedObj = PHPArray.parse(tgStruct);\n            return parsedObj;\n        } catch(jsexc) {\n            if(jsexc instanceof StructureConvertionException) {\n                this.pathException(jsexc);\n            }\n            return null;\n        }\n    }\n}","import StructureConvertionException from \"../throwable/StructureConvertionException\";\r\nimport AbstractStructureConverter from \"./AbstractStructureConverter\";\r\nimport { DOMParser } from 'xmldom';\r\n\r\nexport default class XMLStructureConverter extends AbstractStructureConverter {\r\n    protected toCurrLang(tgStruct: any): Record<any, any> | null {\r\n        try {\r\n            const parsedObj = new DOMParser().parseFromString(tgStruct);\r\n            return parsedObj;\r\n        } catch (jsexc) {\r\n            if(jsexc instanceof StructureConvertionException) {\r\n                this.pathException(jsexc);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n}","import StructureConvertionException from \"../throwable/StructureConvertionException\";\nimport * as YML from 'yamljs';\nimport AbstractStructureConverter from \"./AbstractStructureConverter\";\n\nexport default class YMLStructureConverter extends AbstractStructureConverter {\n    toCurrLang(tgStruct : string) : Record<any, any> | null {\n        try {\n            const parsedObj = YML.parse(tgStruct);\n            return parsedObj;\n        } catch (jsexc) {\n            if(jsexc instanceof StructureConvertionException) {\n                this.pathException(jsexc);\n            }\n            return null;\n        }\n    }\n}","export default abstract class CurrentLangStructurePartialConverter {\n    abstract readonly name: string;\n    \n    public abstract convert(objStruct : Record<string, any>, options: Record<string, any>): any; \n}","import CurrentLangStructurePartialConverter from \"./CurrentLangStructurePartialConverter\";\r\n\r\nexport default class ToJSONStructureConverter extends CurrentLangStructurePartialConverter {\r\n    readonly name = \"JSON\";\r\n\r\n    public convert(obj: Record<string, any>, options: Record<string, any> = {}) : string {\r\n        try {\r\n            options = Object.assign({\r\n                replacer:null,\r\n                space:2\r\n            }, options);\r\n            const prepJSON = JSON.stringify(obj, options.replacer, options.space);\r\n            return prepJSON;\r\n        } catch (jsexc) {\r\n            return \"\";\r\n        }\r\n    }\r\n}","import CurrentLangStructurePartialConverter from \"./CurrentLangStructurePartialConverter\";\r\nimport PHPArray from \"../../libs/PHPArray/PHPArray\";\r\n\r\nexport default class ToPHPArrayStructureConverter extends CurrentLangStructurePartialConverter {\r\n    readonly name = \"PHPArray\";\r\n\r\n    public convert(objStruct: Record<string, any>, options: Record<string, any>) : string {\r\n        options = Object.assign({\r\n            newLines:true,\r\n            quoteType: PHPArray.singleQuote,\r\n            space:2\r\n        }, options);\r\n        try {\r\n            const prepPHPArray = PHPArray.stringify(objStruct, options);\r\n            return prepPHPArray;\r\n        } catch(jsexc) {\r\n            return \"\";\r\n        }\r\n    }\r\n}","import CurrentLangStructurePartialConverter from \"./CurrentLangStructurePartialConverter\";\n\nexport default class ToSQLTableDefinitionStructureConverter extends CurrentLangStructurePartialConverter {\n    readonly name = \"sqlTableDefinition\";\n    \n    public convert(objStruct : Record<string, any>, options: Record<string, any>) {\n        \n    }\n}","import CurrentLangStructurePartialConverter from \"./CurrentLangStructurePartialConverter\";\r\nimport { XMLSerializer } from \"xmldom\";\r\nimport XMLStruct from \"../../libs/XMLStruct/XMLStruct\";\r\n\r\nexport default class ToXMLStructureConverter extends CurrentLangStructurePartialConverter {\r\n    readonly name = \"XML\";\r\n\r\n    public convert(objStruct: any, options: Record<string, any>) : string {\r\n        options = Object.assign({\r\n            \r\n        }, options);\r\n        try {\r\n            const prepPHPArray = XMLStruct.stringify(objStruct, options);\r\n            return prepPHPArray;\r\n        } catch(jsexc) {\r\n            return \"\";\r\n        }\r\n    }\r\n}","import CurrentLangStructurePartialConverter from \"./CurrentLangStructurePartialConverter\";\r\nimport * as YAML from 'yamljs';\r\n\r\nexport default class ToYMLStructureConverter extends CurrentLangStructurePartialConverter {\r\n    readonly name = \"YML\";\r\n\r\n    public convert(objStruct: Record<string, any>, options: Record<string, any>) : string {\r\n        try {\r\n            const prepYAML = YAML.stringify(objStruct, 1, 2);\r\n            return prepYAML;\r\n        } catch (jsexc) {\r\n            return \"\";\r\n        }\r\n    }\r\n}","export default class StructureDetectionStrategy {\n    \n    constructor() {\n\n    }\n\n    public byJSONFile() {\n\n    }\n}","import ValidationResult from \"../results/validationResult\";\nimport definitions, { StructureDefinitionEntry } from \"../structures/definitions\";\nimport StructureDetectionStrategy from \"./StructureDetectionStrategy\";\nimport StructureDefinitionFactory from '../structures/StructureDefinitionFactory';\n\ninterface FileMeta {\n    mimeType: string;\n}\n\ninterface StructureMeta {\n    language?: string;\n    fileDetails?: FileMeta;\n    languageContext?: any;\n}\n\nexport default class StructureDetector {\n    #tgValue = \"\";\n    #language = \"\";\n    #languageContext = \"\";\n    #fileDetails : FileMeta | null  = null;\n    #strategies : StructureDetectionStrategy;\n    #reason = '';\n\n    #userSettings : ExtensionSettings;\n\n    get reason() {\n        return this.#reason;\n    }\n\n    constructor(extensionSettings : ExtensionSettings) {\n        this.#userSettings = extensionSettings;\n        this.#strategies = new StructureDetectionStrategy();\n    }\n\n    public detect(structValue : string, structMeta : StructureMeta) : string {\n        this.#tgValue = structValue;\n        this.#configureMeta(structMeta);\n        const potentiallyStructs : Array<StructureDefinitionEntry[]> = [];\n        for(let defInd in definitions) {\n            const structDefInfo = definitions[defInd];\n            const qualificationPriority = this.#matchQualifications(structDefInfo);\n            const structDef = StructureDefinitionFactory.createFromObject(structDefInfo);\n            if (qualificationPriority >= 0) {\n                if (!Array.isArray(potentiallyStructs[qualificationPriority])) {\n                    potentiallyStructs[qualificationPriority] = [];\n                }\n                potentiallyStructs[qualificationPriority].push(structDef);\n            }\n        }\n        if(potentiallyStructs.length === 0) {\n            this.#reason = \"Not found potentially structs\";\n            return \"\";\n        }\n        for(const structCollInd in potentiallyStructs) {\n            for (const structInd in potentiallyStructs[structCollInd]) {\n                const tgStructDef = potentiallyStructs[structCollInd][structInd];\n                for (const validatorDef of tgStructDef.validators) {\n                    const validationRes = validatorDef.validate(structValue) as ValidationResult;\n                    if (validationRes.passed) {\n                        return tgStructDef.id;\n                    }\n                }\n            }\n        }\n        this.#reason = \"No struct matched\";\n        return \"\";\n    }\n\n    #matchQualifications(structDef : any) : number {\n        if(this.#language === \"\" && this.#languageContext === \"\") {\n            return -1;\n        }\n        if(structDef.languages.length === 0) {\n            return -1;\n        }\n        const langIndex = structDef.languages.indexOf(this.#language);\n        const langContextIndex = structDef.languageContexts.indexOf(this.#languageContext);\n        const mimeIndex = \n            typeof this.#fileDetails?.mimeType === \"string\" ? structDef.preferredMimes.indexOf(this.#fileDetails.mimeType) : -1;\n\n        let totalQualification = -1;\n\n        if(this.#userSettings?.validateUncoveredStructures) {\n            totalQualification += 1;\n        }\n        if(langIndex <= -1 && langContextIndex <= -1 && mimeIndex <= -1) {\n            return totalQualification;\n        }\n        if(langIndex > -1) {\n            totalQualification += (structDef.languages.length - langIndex) * 2;\n        }\n        if(langContextIndex > -1) {\n            totalQualification += langContextIndex;\n        }\n        if(mimeIndex > -1) {\n            totalQualification += mimeIndex;\n        }\n        return totalQualification;\n    }\n\n    #configureMeta(structMeta : StructureMeta) : void {\n        if(typeof structMeta.language === \"string\") {\n            this.#language = structMeta.language;\n        } else {\n            this.#language = \"\";\n        }\n        if(typeof structMeta.languageContext === \"string\") {\n            this.#languageContext = structMeta.languageContext;\n        } else {\n            this.#languageContext = \"\";\n        }\n        if(typeof structMeta.fileDetails === \"object\") {\n            this.#fileDetails = structMeta.fileDetails;\n        } else {\n            this.#fileDetails = null;\n        }\n    }\n}","import StructuresDefinitionManager from \"../managers/StructuresDefinitionManager\";\r\n\r\nexport default class DataReplacerExtensionFasade {\r\n    #structDefManager : StructuresDefinitionManager;\r\n    #settings : ExtensionSettings\r\n\r\n    constructor(structDefManager: StructuresDefinitionManager, settings : ExtensionSettings) {\r\n        this.#structDefManager = structDefManager;\r\n        this.#settings = settings;\r\n    }\r\n\r\n    public getDefintionsNames() : string[] {\r\n        return this.#structDefManager.getDefintionsNames();\r\n    }\r\n\r\n    public getCurrLangConverters() : string[] {\r\n        return this.#structDefManager.getCurrLangConverters();\r\n    }\r\n}","import * as vscode from 'vscode';\n\nexport interface ConvertToActionQuickPickItem extends vscode.QuickPickItem {\n    id : string;\n    extension? : string;\n    inherit? : string;\n    convertionOptions?: Record<string, any>;\n}\n\nexport default [\n    // {\n    //     id:'text-pair',\n    //     label:'$(symbol-type-parameter) Text pair',\n    //     description:'Convert structure to text pair structure',\n    //     detail:'Text pair is a structure that contains two strings. It is used to store text pairs.',\n    // },\n    // {\n    //     id:'jsObjectDeclaration',\n    //     label:'$(symbol-object) JavaScript Object Declaration',\n    //     description:'Convert structure to JavaScript Object Declaration',\n    //     detail:'JavaScript Object Declaration is a structure that contains a JavaScript object declaration.',\n    // },\n    // {\n    //     id:'php-object-declaration',\n    //     label:'PHP Object Declaration',\n    // },\n    {\n        id:'PHPArray',\n        tgStruct:'PHPArray',\n        label:'$(notebook-mimetype) PHP Array',\n        description:'Convert structure to PHP array',\n        detail:'PHP array with squere brackets',\n        extension:'php'\n    },\n    {\n        id:'PHPArray',\n        tgStruct:'PHPArray',\n        primitive:'array',\n        label:'$(file-code) Minifed PHP Array',\n        description:'Convert structure to PHP array',\n        detail:'PHP array with squere brackets',\n        extension:'php',\n        convertionOptions:{\n            space:0,\n            newLines:false,\n            lastComma:false\n        }\n    },\n    {\n        id:'JSON',\n        tgStruct:'JSON',\n        label:'$(symbol-object) JSON',\n        description:'Convert structure to pretty JSON',\n        detail:'Pretty-printed JSON',\n        extension:'json'\n    },\n    {\n        id:'JSON',\n        tgStruct:'JSON',\n        label:'$(file-code) Minified JSON',\n        description:'Convert structure to minified JSON',\n        detail:'Minified JSON',\n        extension:'json',\n        convertionOptions:{\n            space:0,\n            replacer:null\n        }\n    },\n    // {\n    //     id:'BSON',\n    //     label:'BSON',\n    // },\n    {\n        id:'YAML',\n        tgStruct:'YAML',\n        label:'$(symbol-constructor) YAML',\n        extension:'yml'\n    },\n    {\n        id:'XML',\n        label:'XML',\n        extension:'xml'\n    },\n    // {\n    //     id:'SQL',\n    //     label:'SQL Bump',\n    // },\n    // {\n    //     id:'html-table',\n    //     label:'HTML table',\n    // },\n    // {\n    //     id:'html-table-row',\n    //     label:'HTML table (with header)'\n    // },\n    // {\n    //     id:'html-definition-list',\n    //     label:'HTML Definition List'\n    // },\n    // {\n    //     id:'typescript-object-declaration',\n    //     label:'TypeScript Object Declaration',\n    // },\n    // {\n    //     id:'typescript-interface',\n    //     label:'TypeScript Interface',\n    // },\n    // {\n    //     id:'typescript-class',\n    //     label:'TypeScript Class',\n    // },\n    // {\n    //     id:'typescript-enum',\n    //     label:'TypeScript Enum',\n    // }\n\n];","import { CancellationToken, Uri, Webview, WebviewView, WebviewViewProvider, WebviewViewResolveContext } from 'vscode';\r\nimport DataReplacerExtensionFasade from '../../fasades/DataReplacerExtensionFasade';\r\nimport { getExtensionURI, getNonce } from '../../tools/tools';\r\n\r\nexport default class SidepanelMenuProivder implements WebviewViewProvider {\r\n    public static readonly viewType = 'dataReplacer.structureView';\r\n\r\n    private _view?: WebviewView;\r\n\r\n    constructor(\r\n\t\tprivate readonly _extensionUri: Uri,\r\n\t\tprivate readonly _accessor: DataReplacerExtensionFasade\r\n\t) { }\r\n\r\n    public resolveWebviewView(\r\n\t\twebviewView: WebviewView,\r\n\t\tcontext: WebviewViewResolveContext,\r\n\t\t_token: CancellationToken,\r\n    ) : Thenable<void> | void {\r\n        webviewView.webview.options= {\r\n            enableScripts:true,\r\n            localResourceRoots: [\r\n\t\t\t\tthis._extensionUri\r\n\t\t\t]\r\n        };\r\n        webviewView.webview.html = this.#getHtmlForWebview(webviewView.webview);\r\n\r\n        webviewView.webview.onDidReceiveMessage(data => {\r\n\t\t\tswitch (data.type) {\r\n\t\t\t\tcase 'colorSelected':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//vscode.window.activeTextEditor?.insertSnippet(new vscode.SnippetString(`#${data.value}`));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n    }\r\n\r\n\t#getHtmlForWebview(webview: Webview) {\r\n\t\tconst styleResetUri = webview.asWebviewUri(\r\n\t\t  \tUri.joinPath(this._extensionUri, \"media\", \"reset.css\")\r\n\t\t);\r\n\t\tconst styleVSCodeUri = webview.asWebviewUri(\r\n\t\t  \tUri.joinPath(this._extensionUri, \"media\", \"vscode.css\")\r\n\t\t);\r\n\t\r\n\t\tconst scriptUri = webview.asWebviewUri(\r\n\t\t  \tUri.joinPath(this._extensionUri, \"out\", \"compiled/sidebar.js\")\r\n\t\t);\r\n\t\tconst styleMainUri = webview.asWebviewUri(\r\n\t\t  \tUri.joinPath(this._extensionUri, \"out\", \"compiled/sidebar.css\")\r\n\t\t);\r\n\r\n\t\tconst toolkitUri = getExtensionURI(webview, this._extensionUri, [\r\n\t\t\t\"node_modules\",\r\n\t\t\t\"@vscode\",\r\n\t\t\t\"webview-ui-toolkit\",\r\n\t\t\t\"dist\",\r\n\t\t\t\"toolkit.js\",\r\n\t]);\r\n\t\r\n\t\t// Use a nonce to only allow a specific script to be run.\r\n\t\tconst nonce = getNonce();\r\n\t\r\n\t\treturn `<!DOCTYPE html>\r\n\t\t\t\t<html lang=\"en\">\r\n\t\t\t\t<head>\r\n\t\t\t\t\t<meta charset=\"UTF-8\">\r\n\t\t\t\t\t<meta http-equiv=\"Content-Security-Policy\" content=\"img-src https: data:; style-src 'unsafe-inline' ${\r\n\t\t\t\twebview.cspSource\r\n\t\t\t\t}; script-src 'nonce-${nonce}';\">\r\n\t\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\t\t\t\t\t<link href=\"${styleResetUri}\" rel=\"stylesheet\" type=\"text/css\">\r\n\t\t\t\t\t<link href=\"${styleVSCodeUri}\" rel=\"stylesheet\" type=\"text/css\">\r\n\t\t\t\t\t<link href=\"${styleMainUri}\" rel=\"stylesheet\">\r\n\t\t\t\t\t<script type=\"module\" nonce=\"${nonce}\" src=\"${toolkitUri}\"></script>\r\n\t\t\t\t\t<script nonce=\"${nonce}\">\r\n\t\t\t\t\tconst tsvscode = acquireVsCodeApi();\r\n\r\n\t\t\t\t\t</script>\r\n\t\t\t\t</head>\r\n\t\t  \t\t<body>\r\n\t\t\t\t  \t<vscode-panels>\r\n\t\t\t\t\t\t<vscode-panel-tab id=\"tab-1\">ABOUT</vscode-panel-tab>\r\n\t\t\t\t\t\t<vscode-panel-view id=\"view-1\">\r\n\t\t\t\t\t\t\t<div class=\"panel-view-content\">\r\n\t\t\t\t\t\t\t\t<h3>Enabled converters</h3>\r\n\t\t\t\t\t\t\t\t<h4>General</h4>\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t${this._accessor.getDefintionsNames().map(converter => `<li>${converter}</li>`).join('')}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<h4>Current language interceptor</h4>\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t${this._accessor.getCurrLangConverters().map(converter => `<li>${converter}</li>`).join('')}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</vscode-panel-view>\r\n\t\t\t\t\t</vscode-panels>\r\n\t\t\t\t</body>\r\n\t\t\t\t</html>`;\r\n\t  }\r\n}","export default class JSObject {\n    public static stringify(obj: Record<string, any>): string {\n        return '';\n    }\n}","/**\n * PHPArray parser\n * Copyright (C) 2020 Glayzzle with grano22 changes (BSD3 License)\n * \n * @package PHPArray\n * @author Adrian Błasiak <grano22@outlook.com>\n * @author Rubens Mariuzzo\n */\nimport * as PHPParser from 'php-parser';\n\nfunction parseKey(expr : any) {\n  switch(expr.kind) {\n    case 'string':\n      return expr.value;\n    case 'number':\n      return parseInt(expr.value, 10);\n    case 'boolean':\n      return expr.value ? 1 : 0;\n    default:\n      throw new Error(`Unexpected PHP key: \"${expr.kind}\", details: ${JSON.stringify(expr)}`);\n  }\n}\n\nfunction parseValue(expr: any): any {\n  switch(expr.kind) {\n    case 'array':\n      if (expr.items.length === 0) {\n        return [];\n      }\n      var isKeyed = expr.items.every((item : any) => item.key !== null);\n      var items = expr.items.map(parseValue);\n      if (isKeyed) {\n        items = items.reduce((acc : any, val : any) => Object.assign({}, acc, val), {});\n      }\n      return items;\n    case 'entry':\n      if (expr.key) {\n        return { [parseKey(expr.key)]: parseValue(expr.value) };\n      }\n      return parseValue(expr.value);\n    case 'string':\n      return expr.value;\n    case 'number':\n      return parseInt(expr.value, 10);\n    case 'boolean':\n      return !!expr.value;\n    default:\n      throw new Error(`Unexpected PHP value: \"${expr.kind}\", details: ${JSON.stringify(expr)}`);\n  }\n}\n\nexport default class PHPArray {\n    static readonly singleQuote = \"'\";\n    static readonly doubleQuote = '\"'; \n\n    public static parse(source : string) : Record<string, any> {\n        //@ts-ignore\n        const parser = new PHPParser({\n            parser: { extractDoc: true },\n            ast: { withPositions: true },\n        });\n        var ast = parser.parseEval(source);\n        var array = ast.children[0].expression as PHPParser.Array; //.find((child : PHPParser.ExpressionStatement) => child.kind === 'array');\n        if (typeof array === \"undefined\" || array === null) {\n           throw new Error(\"Detected expression is not array\");\n        }\n        return parseValue(array);\n    }\n\n    public static stringify(obj : Record<string, any>, options : Record<string, any>): string {\n        options = Object.assign({ before:0, newLines:true, lastComma:true }, options);\n        let phpArrayStr = '[';\n        if (options.newLines) {\n          phpArrayStr += \"\\n\";\n        }\n        const objKeys = Object.keys(obj) as string[];\n        for(const objKeyInd in objKeys) {\n            const objProp = objKeys[objKeyInd];\n            const objKey = options.quoteType + objProp + options.quoteType;\n            if(typeof obj[objProp] === \"object\") {\n                phpArrayStr += \" \".repeat(options.before) + \" \".repeat(options.space) + objKey + \" => \" + this.stringify(obj[objProp], { quoteType:options.quoteType, space:options.space, before:options.before + options.space, newLines:options.newLines, lastComma:options.lastComma });\n                if (options.lastComma || +objKeyInd < objKeys.length - 1) {\n                  phpArrayStr += \",\";\n                }\n                if (options.newLines) {\n                  phpArrayStr += \"\\n\";\n                }\n            } else {\n                let objValue = obj[objProp];\n                if (typeof objValue === \"string\") {\n                    objValue = options.quoteType + objValue + options.quoteType;\n                }\n                phpArrayStr += \" \".repeat(options.before) + \" \".repeat(options.space) + objKey + \" => \" + objValue; \n                if (options.lastComma || +objKeyInd < objKeys.length - 1) {\n                  phpArrayStr += \",\";\n                }\n                if(options.newLines) {\n                    phpArrayStr += \"\\n\";\n                }\n            }\n        }\n        return phpArrayStr + \" \".repeat(options.before) + ']';\n    }\n}","export default class XMLStruct {\r\n    public static stringify(obj: Record<string, any>, options: Record<string, any> = {}) : string {\r\n        options = Object.assign({ startDepth:0 }, options);\r\n        let xmlStr = '';\r\n        if (options.startDepth === 0) {\r\n            xmlStr += '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\r\n        }\r\n        const objKeys = Object.keys(obj) as string[];\r\n        for(const objKeyInd in objKeys) {\r\n            const objProp = objKeys[objKeyInd];\r\n            if(typeof obj[objProp] === \"object\") {\r\n                // TODO if matched signature -> if () {\r\n                //    this.toMatchedSignature(obj[objProp], options);\r\n                // }\r\n                xmlStr += this.makeTagSpace(options.startDepth) + '<' + objProp + '>\\n' + \r\n                this.stringify(obj[objProp], { startDepth:options.startDepth + 1 }) + '\\n' + \r\n                this.makeTagSpace(options.startDepth) + '</' + objProp + '>\\n';\r\n            } else {\r\n                xmlStr += this.makeTagSpace(options.startDepth) + '<' + objProp + '>\\n'+ \r\n                this.makeValueSpace(options.startDepth) + obj[objProp] + '\\n' +\r\n                this.makeTagSpace(options.startDepth) + '</' + objProp + '>\\n';\r\n            }\r\n        }\r\n        return xmlStr;\r\n    }\r\n\r\n    static makeTagSpace(depth : number) : string {\r\n        return \" \".repeat(depth);\r\n    }\r\n\r\n    static makeValueSpace(depth : number) : string {\r\n        return \" \".repeat(depth + 3);\r\n    }\r\n}","import AbstractStructureConverter from \"../converter/AbstractStructureConverter\";\nimport CurrentLangStructureConverter from \"../converter/CurrentLangStructureConverter\";\nimport CurrentLangStructurePartialConverter from \"../converter/fromCurrLang/CurrentLangStructurePartialConverter\";\nimport definitions from \"../structures/definitions\";\nimport StructureDefinition from \"../structures/StructureDefinition\";\nimport StructureDefinitionFactory from \"../structures/StructureDefinitionFactory\";\nimport Exception from \"../throwable/Exception\";\nimport StructureConvertionException from \"../throwable/StructureConvertionException\";\nimport capitalize from \"../tools/tools\";\n\nexport interface StructureDefinitionManagerSetup {\n    allowedStructures?: string[];\n    disallowedStructures?: string[];\n    nativeLangConverters?: CurrentLangStructurePartialConverter[];\n}\n\nexport default class StructuresDefinitionManager\n{\n    #preloadedDefinitions : Map<string, StructureDefinition> = new Map();\n    #loadedDefinitions : Map<string, StructureDefinition> = new Map();\n    #exceptions : Exception[] = [];\n    #currLangConverter : CurrentLangStructureConverter;\n\n    get errors() : Exception[] {\n        return this.#exceptions;\n    }\n\n    get hasErrors() : boolean {\n        return this.#exceptions.length > 0;\n    }\n\n    constructor(setup : StructureDefinitionManagerSetup) {\n        this.#currLangConverter = new CurrentLangStructureConverter();\n        this.#config(setup);\n        this.#loadDefinitions(setup);\n    }\n\n    public convertTo(tgValue : string, fromType : string, toType : string, toOptions : Record<string, any> = {}) : string {\n        try {\n            if (!this.#loadedDefinitions.has(fromType)) {\n                throw new StructureConvertionException(\"Type converter \" + fromType + \" do not exists\");\n            }\n            const tgStruct = this.#loadedDefinitions.get(fromType), tgConverter = tgStruct?.converters[\"*\"];\n            if (typeof tgConverter === \"undefined\" || tgConverter === null) {\n                throw new StructureConvertionException(\"Structure \" + fromType + \" do not have any converters\");\n            }\n            if (!(tgConverter instanceof AbstractStructureConverter)) {\n                throw new StructureConvertionException(\"Structure \" + fromType + \" converter is invaild\");\n            }\n            console.log(toType, fromType, tgConverter);\n            if (tgConverter.canConvert(toType)) {\n                return (tgConverter.convert(tgValue, toType, toOptions) || '').toString();\n            } else {\n                if (!this.#currLangConverter.canConvert(toType)) {\n                    throw new StructureConvertionException(\"Structure \" + fromType + \" cannot be converted from native lang to \" + toType);\n                }\n                const currLangResult = tgConverter.convert(tgValue, 'currLang');\n                return (this.#currLangConverter.convert(currLangResult, toType, toOptions) || '').toString();\n            }\n        } catch(err) {\n            if(err instanceof StructureConvertionException) {\n                this.#addException(err);\n            }\n            return tgValue;\n        }\n    }\n\n    public getDefintionsNames() : string[] {\n        const preloadedDefsNames = Array.from(this.#preloadedDefinitions.keys()) as string[];\n        const loadedDefsNames = Array.from(this.#loadedDefinitions.keys()) as string[];\n        return loadedDefsNames.concat(preloadedDefsNames);\n    }\n\n    public getCurrLangConverters() : string[] {\n        return this.#currLangConverter.valueOf();\n    }\n\n    public getDefinition(id : string) : StructureDefinition | null {\n        if(this.#preloadedDefinitions.has(id)) {\n            return this.#preloadedDefinitions.get(id) || null;\n        }\n        if(this.#loadedDefinitions.has(id)) {\n            return this.#loadedDefinitions.get(id) || null;\n        }\n        this.#addException(new Exception(\"Structure definition with id : \" + id + \" not found\"));\n        return null;\n    }\n\n    #config(setup : StructureDefinitionManagerSetup): void {\n        const isValid = this.#validateConfig(setup);\n        if (isValid) {\n            this.#loadDefinitions(setup);\n            if(Array.isArray(setup.nativeLangConverters)) {\n                for (const partialConverter of setup.nativeLangConverters) {\n                    this.#currLangConverter.registerConvertionMethod(partialConverter);\n                }\n            }\n        } else {\n\n        }\n    }\n\n    #validateConfig(setup : StructureDefinitionManagerSetup): boolean {\n        try {\n            if(!Array.isArray(setup.allowedStructures)) {\n                throw new Exception(\"allowedStructures must be an array\");\n            }\n            if(!Array.isArray(setup.disallowedStructures)) {\n                throw new Exception(\"disallowedStructures must be an array\");\n            }\n            for(const structID in setup.allowedStructures) {\n                if(setup.disallowedStructures.indexOf(structID) > -1) {\n                    throw new Exception(\"Disallowed structures ids for example : \" + structID + \" cannot be also allowed\");\n                }\n            }\n            return true;\n        } catch(exc) {\n            //this.#addException(exc);\n            return false;\n        }\n    }\n\n    #loadDefinitions(setup : StructureDefinitionManagerSetup): void {\n        let definitionsToLoad = definitions.map(def => def.id || '') as string[];\n        if(Array.isArray(setup.allowedStructures) && setup.allowedStructures.length > 0) {\n            definitionsToLoad = definitionsToLoad.map(def=>(setup!.allowedStructures || []).includes(def) ? def : '');\n        }\n        for(const definitionInd in definitionsToLoad) {\n            if(definitionsToLoad[definitionInd] !== '') {\n                const tgDefinition = StructureDefinitionFactory.createFromObject(definitions[definitionInd]);\n                this.#loadedDefinitions.set(definitionsToLoad[definitionInd], tgDefinition);\n            }\n        }\n    }\n\n    #addException(exc : Exception) {\n        this.#exceptions.push(exc);\n    }\n}","import Exception from \"../throwable/Exception\";\nimport ReportError from \"../throwable/ReportError\";\nimport StructureValidationException from \"../throwable/StructureValidationException\";\nimport Throwable from \"../throwable/Throwable\";\nimport TypeReportError from \"../throwable/TypeReportError\";\n\nexport default class ValidationResult {\n    #exceptions : Throwable[] = [];\n    #registerDatetime : Date;\n    #validationDuration : number = -1;\n    #params : Map<string, any> = new Map();\n\n    get passed() {\n        return this.#exceptions.length === 0;\n    }\n\n    get isValid() {\n        return this.#exceptions.length === 0;\n    }\n\n    get registerDatetime() {\n        return this.#registerDatetime;\n    }\n\n    get validationDuration() {\n        return this.#validationDuration;\n    }\n\n    get exceptions() {\n        return this.#exceptions;\n    }\n\n    constructor(initialExceptions : Array<StructureValidationException> = []) {\n        this.#registerDatetime = new Date();\n        this.addExceptions(...initialExceptions);\n    }\n\n    setValidationDuration(duration : number = 0): void {\n        if (this.#validationDuration === -1 && duration > 0) {\n            this.#validationDuration = duration;\n        }\n    }\n\n    public addExceptions(...exceptions : Throwable[]): void\n    {\n        for (const exception of exceptions)\n        {\n            if(!(exception instanceof Exception || exception instanceof ReportError)) {\n                this.#exceptions.push(TypeReportError.byComparing(exception, Exception));\n            } else {\n                this.#exceptions.push(exception);\n            }\n        }\n    }\n\n    public setParam(name : string, value : any): this\n    {\n        this.#params.set(name, value);\n        return this;\n    }\n\n    public getParam(name : string): any\n    {\n        return this.#params.has(name) ? this.#params.get(name) : null;\n    }\n\n    [Symbol.toPrimitive](hint : any)\n    {\n        return this.passed;\n    }\n\n    valueOf()\n    {\n        return this.passed;\n    }\n\n    toString() {\n        return this.passed ? 'Passed' : '';\n    }\n}","import AbstractStructureValidator from \"../validators/AbstractStructureValidator\";\n\ninterface StructureDefinitionMeta {\n    uid: string;\n    id: string;\n    name: string;\n    description: string;\n    version: string;\n    languages: string[];\n    languageContexts: string[];\n    validators: AbstractStructureValidator<any>[];\n    converters: any;\n}\n\nexport default class StructureDefinition {\n    #uid : string;\n    #id: string;\n    #name: string = '';\n    #languageContexts : string[] = [];\n    #languages: string[] = [];\n    #validators: AbstractStructureValidator<any>[] = [];\n    #converters : Record<string, any> = {};\n\n    get uid() {\n        return this.#uid;\n    }\n\n    get id() {\n        return this.#id;\n    }\n\n    get name() {\n        return this.#name;\n    }\n\n    get languageContexts() {\n        return this.#languageContexts;\n    }\n\n    get languages() {\n        return this.#languages;\n    }\n\n    get validators() {\n        return this.#validators;\n    }\n\n    get converters() {\n        return this.#converters;\n    }\n\n    constructor(configMeta : StructureDefinitionMeta) {\n        this.#uid = configMeta.uid;\n        this.#id = configMeta.id;\n        this.#name = configMeta.name;\n        this.#languageContexts = configMeta.languageContexts || [];\n        this.#languages = configMeta.languages || [];\n        this.#validators = configMeta.validators || [];\n        this.#converters = configMeta.converters || {};\n    }\n\n    setName(name: string) {\n        this.#name = name;\n    }\n\n    \n}","import AbstractStructureConverter from \"../converter/AbstractStructureConverter\";\nimport AbstractStructureValidator from \"../validators/AbstractStructureValidator\";\nimport StructureDefinition from \"./StructureDefinition\";\n\nexport default class StructureDefinitionFactory {\n    public static createFromObject(tgObject : Record<string , any>): StructureDefinition\n    {\n        const prepValidators : AbstractStructureValidator<any>[] = [], prepConverters : { [key: string] : AbstractStructureConverter } = {};\n        \n        for(const structValidator of tgObject.validators) {\n            const val = new structValidator();\n            prepValidators.push(val);\n        }\n\n        for(const structConverterType in tgObject.converters) {\n            const conv = new tgObject.converters[structConverterType]();\n            prepConverters[structConverterType] = conv;\n        }\n\n        const structDef = new StructureDefinition({\n            uid: this.#createID(),\n            id: tgObject.id || \"\",\n            name: tgObject.name || \"\",\n            description: tgObject.description || \"\",\n            languages: tgObject.languages || [],\n            languageContexts: tgObject.languageContexts || [],\n            converters: prepConverters,\n            validators: prepValidators,\n            version: tgObject.version || .1,\n        });\n\n        return structDef;\n    }\n\n    static #createID() {\n        return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    }\n}","import JSONStructureConverter from \"../converter/JSONStructureConverter\";\nimport PHPArrayStructureConverter from \"../converter/PHPArrayStructureConverter\";\nimport TextPairsStructureConverter from \"../converter/TextPairsStructureConverter\";\nimport XMLStructureConverter from \"../converter/XMLStructureConverter\";\nimport YMLStructureConverter from \"../converter/YMLStructureConverter\";\nimport JSONStructureValidator from \"../validators/JSONStructureValidator\";\nimport PHPArrayStructureValidator from \"../validators/PHPArrayStructureValidator\";\nimport TextPairsStructureValidator from \"../validators/TextPairsStructureValidator\";\nimport XMLStructureValidator from \"../validators/XMLStructureValidator\";\nimport YMLStructureValidator from \"../validators/YMLStructureValidator\";\n\nexport interface StructureDefinitionEntry {\n    id: string;\n    name: string;\n    description?: string;\n    languages: string[];\n    languageContexts: string[];\n    prefferedMimes?: string[];\n    validators: any[]; //new (...param : any) => AbstractStructureValidator AbstractStructureConverter\n    converters: Record<string, any>;\n}\n\nexport default [\n    /*{\n        id:'text-pair',\n        name:'Text pair',\n        languageContexts: [],\n        languages: [],\n        validators: [\n            TextPairsStructureValidator\n        ],\n        converters: {\n            '*': TextPairsStructureConverter\n        },\n    },*/\n    {\n        id:'JSON',\n        name: 'JSON',\n        preferredMimes : ['application/json'],\n        languageContexts: ['json'],\n        languages: ['json', 'javascript'],\n        validators: [\n            JSONStructureValidator\n        ],\n        converters: {\n            '*': JSONStructureConverter\n        }\n    },\n    {\n        id:'YAML',\n        name:'YML',\n        preferredMimes: ['application/x-yaml', 'text/yaml'],\n        languageContexts: ['yml'],\n        languages: ['yaml', 'yml'],\n        validators: [\n            YMLStructureValidator\n        ],\n        converters: {\n            '*': YMLStructureConverter\n        }\n    },\n    {\n        id:'PHPArray',\n        name:'PHP Array',\n        preferredMimes: ['application/x-httpd-php'],\n        languageContexts: ['php'],\n        languages: ['php'],\n        validators: [\n            PHPArrayStructureValidator\n        ],\n        converters: {\n            '*': PHPArrayStructureConverter\n        }\n    },\n    {\n        id:'XML',\n        name:'XML',\n        preferredMimes: ['application/xml', 'text/xml'],\n        languageContexts: ['xml'],\n        languages: ['xml'],\n        validators: [\n            XMLStructureValidator\n        ],\n        converters: {\n            \"*\": XMLStructureConverter\n        }\n    }\n];","import Throwable from \"./Throwable\";\n\n/**\n * @class\n * @classdesc Exception\n */\nexport default class Exception implements Throwable {\n    protected message : string;\n    protected code : number | string;\n    protected fileName : string;\n    protected lineNumber : number;\n\n    /**\n     * Create Exception\n     * @since 1.0.0\n     */\n    constructor(message : string, code : number | string = -1, previous: Throwable | null = null) {\n        this.message = message;\n        this.code = code;\n\n        if (\n            typeof process !== 'undefined' &&\n            typeof process.versions.node !== 'undefined'\n        ) {\n            this.fileName = __dirname; //new Error().stack.split('\\n')[1].split('(')[1].split(')')[0];\n        } else if (\n            typeof window !== \"undefined\" &&\n            typeof window[\"HTMLScriptElement\"] !== \"undefined\"\n        ) {\n            const allScriptsTags = document.getElementsByTagName(\"script\");\n            this.fileName = allScriptsTags[allScriptsTags.length - 1].src;\n        } else {\n            this.fileName = \"unknown\";\n        }\n\n        this.lineNumber = -1;\n    }\n\n    public getMessage() : string {\n        return this.message;\n    }\n\n    public getCode() : number | string {\n        return this.code;\n    }\n\n    public getFile() : string {\n        return this.fileName;\n    }\n\n    public getLine() : number {\n        return this.lineNumber;\n    }\n\n    public getTrace() : Array<string> {\n        return [];\n    }\n\n    public getTraceAsSring() : string {\n        return this.getTrace().join();\n    }\n\n    public getPrevious() : Exception | null {\n        return null;\n    }\n\n    public toString() : string {\n        return this.message;\n    }\n\n    public valueOf() : string {\n        return this.message;\n    }\n}","import Throwable from \"./Throwable\";\n\nexport default class ReportError extends Error implements Throwable {\n    #message : string;\n    #code : number;\n    #fileName : string;\n    #lineNumber : number;\n\n    get message() : string\n    {\n        return this.#message;\n    }\n\n    constructor(code : number, message : string) {\n        super();\n        this.#message = message;\n        this.#code = code;\n        this.#fileName = \"\";\n        this.#lineNumber = 0;\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, ReportError);\n        }\n    }\n\n    public getMessage() : string {\n        return this.message;\n    }\n\n    public getCode() : number | string {\n        return this.#code;\n    }\n\n    public getFile() : string {\n        return this.#fileName;\n    }\n\n    public getLine() : number {\n        return this.#lineNumber;\n    }\n\n    public getTrace() : Array<string> {\n        return [];\n    }\n\n    public getTraceAsSring() : string {\n        return this.getTrace().join();\n    }\n\n    public getPrevious() : ReportError | null {\n        return null;\n    }\n\n    public toString() : string {\n        return this.message;\n    }\n\n    public valueOf() : string {\n        return this.message;\n    }\n}","import Exception from \"./Exception\";\n\nexport default class StructureConvertionException extends Exception {\n    \n}","import AbstractStructureValidator from \"../validators/AbstractStructureValidator\";\nimport Exception from \"./Exception\";\n\nexport default class StructureValidationException extends Exception {\n    #structID: string;\n\n    constructor(tgStruct : AbstractStructureValidator<any>, message: string) {\n        super(message);\n        this.#structID = (tgStruct.constructor as any).name;\n    }\n}","import ReportError from \"./ReportError\";\n\nexport default class TypeReportError extends ReportError {\n    constructor(message : string) {\n        super(-1, message);\n    }\n\n    static byComparing(targetValue : any, expectedType : any, customMessage : string = ''): TypeReportError\n    {\n        let baseTypeValue = Array.isArray(targetValue) ? 'array' : typeof targetValue, baseTypeExpected = Array.isArray(expectedType) ? 'array' : typeof expectedType;\n        if (baseTypeValue === 'object')\n        {   \n            baseTypeValue = targetValue?.constructor?.name ?? baseTypeValue;\n        }\n        if (baseTypeExpected === 'object')\n        {\n            baseTypeExpected = expectedType?.constructor?.name ?? baseTypeExpected;\n        }\n        let compareMessage = customMessage ? customMessage.replace('%t', baseTypeValue).replace('%v', targetValue.toString()).replace('%e', expectedType) : `Given value ${targetValue.toString()} must be compatibile with type ${baseTypeExpected}, but given ${baseTypeValue}`;\n        return new TypeReportError(compareMessage);\n    }\n}","import { Uri, Webview } from \"vscode\";\n\nexport default function capitalize(str : string) : string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNonce() {\n    let text = \"\";\n    const possible =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (let i = 0; i < 32; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\n\nexport function getExtensionURI(webview: Webview, extensionUri: Uri, pathList: string[]) {\n    return webview.asWebviewUri(Uri.joinPath(extensionUri, ...pathList));\n}","import Clonable from \"../common/Clonable\";\nimport ValidationResult from \"../results/validationResult\";\nimport Exception from \"../throwable/Exception\";\n\nexport interface StructureValidationSnapshoot {\n    startDatetime: Date;\n    endDatetime: Date;\n    validatorRef: number;\n    result: ValidationResult;\n    data: StructureValidationData | null\n}\n\nexport interface StructureValidationOptions {\n\n}\n\nexport interface StructureValidationData {\n    [key : string] : any;\n}\n\nexport default abstract class AbstractStructureValidator<ValidationData extends StructureValidationData> \nimplements Clonable<AbstractStructureValidator<any>> {\n    static activeValidators : AbstractStructureValidator<any>[] = [];\n    static readonly ERROR_MESSAGES = {\n\n    };\n\n    #id = -1;\n    #snapshoots : StructureValidationSnapshoot[] = [];\n    //#currentSnapshoot : StructureValidationSnapshoot | null = null;\n    #validationData : ValidationData | null = null;\n\n    static getLastID() {\n        return this.activeValidators.length - 1;\n    }\n\n    get id() : number\n    {\n        return this.#id;\n    }\n\n    constructor() {\n        const validatorOrigin = (this.constructor as typeof AbstractStructureValidator);\n        validatorOrigin.activeValidators.push(this);\n        this.#id = validatorOrigin.getLastID();\n    }\n\n    public abstract validationModel(structStr: any, options : StructureValidationOptions): ValidationResult;\n    public abstract shortValidationModel(structStr : any, options : StructureValidationOptions) : ValidationResult;\n    public abstract getDefaultValidationData() : ValidationData;\n\n    public validate(tgStruct : any, options : StructureValidationOptions = {}) : ValidationResult {\n        this.#validationData = this.getDefaultValidationData();\n        const startDatetime = new Date();\n        const res = this.validationModel(tgStruct, options);\n        const endDatetime = new Date();\n        this.#snapshoots.push({\n            startDatetime: startDatetime,\n            endDatetime: endDatetime,\n            validatorRef:this.#id,\n            result:res,\n            data:this.getValidationAllData()\n        });\n        res.setValidationDuration(Math.abs(endDatetime.getTime() - startDatetime.getTime()));\n        return res;\n    }\n\n    public shortValidate(tgStruct : any, options : StructuredSerializeOptions = {}) : ValidationResult {\n        this.#validationData = this.getDefaultValidationData();\n        const startDatetime = new Date();\n        const res = this.shortValidationModel(tgStruct, options);\n        const endDatetime = new Date();\n        this.#snapshoots.push({\n            startDatetime: startDatetime,\n            endDatetime:endDatetime,\n            validatorRef:this.#id,\n            result:res,\n            data:this.getValidationAllData()\n        });\n        res.setValidationDuration(Math.abs(endDatetime.getTime() - startDatetime.getTime()));\n        return res;\n    }\n\n    protected getValidationData(optionName : string): any\n    {\n        return this.#validationData ? this.#validationData[optionName] || null : null;\n    }\n\n    protected getValidationAllData(): ValidationData | null\n    {\n        return this.#validationData;\n    }\n\n    protected addValidationData(optionName : string, optionValue : any, optionKey = ''): void\n    {\n        try {\n            if(this.#validationData === null) {\n                throw new Exception(\"Validation data not initialised\");\n            }\n            if(typeof this.#validationData[optionName] === \"undefined\") {\n                throw new Exception(\"Validation option with name \" + optionName + \" is not defined\");\n            }\n            if(Array.isArray(this.#validationData[optionName])) {\n                this.#validationData[optionName].push(optionValue);\n            } else if(this.#validationData[optionName] instanceof Map || this.#validationData[optionName] instanceof Set) {\n                this.#validationData[optionName].set(optionKey, optionValue);\n            } else if(typeof this.#validationData === \"object\") {\n                this.#validationData[optionName][optionKey] = optionValue;\n            } else {\n                throw new Exception(\"Type is not a collection\");\n            }\n        } catch(exc) {\n\n        }\n    }\n\n    protected updateValidationData(optionName : string, optionValue : any, optionKey = ''): void\n    {\n        try {\n            if(this.#validationData === null) {\n                throw new Exception(\"Validation data not initialised\");\n            }\n            if(typeof this.#validationData[optionName] === \"undefined\") {\n                throw new Exception(\"Validation option with name \" + optionName + \" is not defined\");\n            }\n            if(Array.isArray(this.#validationData[optionName])) {\n                this.#validationData[optionName].push(optionValue);\n            } else if(this.#validationData[optionName] instanceof Map || this.#validationData[optionName] instanceof Set) {\n                this.#validationData[optionName].set(optionKey, optionValue);\n            } else if(typeof this.#validationData === \"object\") {\n                this.#validationData[optionName][optionKey] = optionValue;\n            } else {\n                throw new Exception(\"Type is not a collection\");\n            }\n        } catch(exc) {\n            \n        }\n    }\n\n    protected setValidationData(optionName : string, optionCB : any): void\n    {\n        try {\n            if (this.#validationData === null) {\n                throw new Exception(\"Validation data is not initialized\");\n            }\n            if (typeof this.#validationData[optionName] === \"undefined\") {\n                throw new Exception(\"Validation option \" + optionName + \" do not exists\");\n            }\n            if (typeof optionCB !== \"function\") {\n                throw new Exception(\"Callback expected\");\n            }\n            const optionValue = optionCB(this.#validationData[optionName]);\n            if (typeof this.#validationData[optionName] !== typeof optionValue) {\n                throw new Exception(\"Validation option type is incorect\");\n            }\n            //@ts-ignore\n            this.#validationData[optionName] = optionValue as ValidationData[keyof ValidationData];\n        } catch(exc) {\n            console.error(exc);\n        }\n    }\n\n    #clearValidation() {\n        this.#validationData = null;\n    }\n\n    public clone(): AbstractStructureValidator<any> {\n        return Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n    }\n\n    public cloneEmpty(): AbstractStructureValidator<any> {\n        return Object.assign(Object.create(Object.getPrototypeOf(this)), this, {});\n    }\n}","import ValidationResult from \"../results/validationResult\";\nimport validationResult from \"../results/validationResult\";\nimport StructureValidationException from \"../throwable/StructureValidationException\";\nimport { StructureValidationOptions } from \"./AbstractStructureValidator\";\nimport StringableStructureValidator from \"./StringableStructureValidator\";\n\nexport default class JSONStructureValidator extends StringableStructureValidator {\n    public validationModel(structStr: string, options: StructureValidationOptions): ValidationResult {\n        const res = new ValidationResult();\n        try {\n            JSON.parse(structStr);\n        } catch(err) {\n            res.addExceptions(new StructureValidationException(this, \"Invalid JSON\"));\n        }\n        return res;\n    }\n\n    public shortValidationModel(structStr: string, options: StructureValidationOptions): ValidationResult {\n        const res = new ValidationResult();\n        if(!/^\\{\\w+:\\w+(,\\w+:\\w+)*\\}$/.test(structStr)) {\n            res.addExceptions();\n        }\n        return res;\n    }\n}","import PHPArray from \"../libs/PHPArray/PHPArray\";\nimport ValidationResult from \"../results/validationResult\";\nimport validationResult from \"../results/validationResult\";\nimport StructureValidationException from \"../throwable/StructureValidationException\";\nimport { StructureValidationOptions } from \"./AbstractStructureValidator\";\nimport StringableStructureValidator from \"./StringableStructureValidator\";\n\nexport default class PHPArrayStructureValidator extends StringableStructureValidator {\n    public validationModel(structStr: any, options: StructureValidationOptions): ValidationResult {\n        const res = new ValidationResult();\n        try {\n            PHPArray.parse(structStr);\n        } catch(err) {\n            console.error(err);\n            res.addExceptions(new StructureValidationException(this, \"Invalid PHP Array\"));\n        }\n        return res;\n    }\n\n    public shortValidationModel(structStr: any, options: StructureValidationOptions): ValidationResult {\n        const res = new ValidationResult();\n        try {\n            PHPArray.parse(structStr);\n        } catch(err) {\n            res.addExceptions(new StructureValidationException(this, \"Invalid PHP Array\"));\n        }\n        return res;\n    }\n}","import AbstractStructureValidator, { StructureValidationData, StructureValidationOptions } from \"./AbstractStructureValidator\";\n\ninterface StringableStructureValidationData extends StructureValidationData {\n    positionMarkers : Map<string, { from : number; to : number; }>;\n    invaildChars :  string[];\n    lastPosition : number;\n}\n\nexport interface StringableStructureValidationOptions extends StructureValidationOptions {\n    trimSides : number;\n}\n\nexport default abstract class StringableStructureValidator extends AbstractStructureValidator<StringableStructureValidationData> {    \n    public getDefaultValidationData(): StringableStructureValidationData {\n        return {\n            positionMarkers: new Map(),\n            invaildChars: [],\n            lastPosition: -1\n        };\n    }\n}","import { DOMParser } from \"xmldom\";\r\nimport ValidationResult from \"../results/validationResult\";\r\nimport StructureValidationException from \"../throwable/StructureValidationException\";\r\nimport { StructureValidationOptions } from \"./AbstractStructureValidator\";\r\nimport StringableStructureValidator from \"./StringableStructureValidator\";\r\n\r\nexport default class XMLStructureValidator extends StringableStructureValidator {\r\n    public validationModel(structStr: any, options: StructureValidationOptions): ValidationResult {\r\n        const res = new ValidationResult();\r\n        try {\r\n            new DOMParser().parseFromString(structStr);\r\n        } catch(err) {\r\n            res.addExceptions(new StructureValidationException(this, \"Invalid YML\"));\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public shortValidationModel(structStr: any, options: StructureValidationOptions): ValidationResult {\r\n        const res = new ValidationResult();\r\n        try {\r\n            new DOMParser().parseFromString(structStr);\r\n        } catch(err) {\r\n            res.addExceptions(new StructureValidationException(this, \"Invalid YML\"));\r\n        }\r\n        return res;\r\n    }\r\n}","import * as YAML from 'yamljs';\nimport ValidationResult from \"../results/validationResult\";\nimport validationResult from \"../results/validationResult\";\nimport StructureValidationException from '../throwable/StructureValidationException';\nimport { StructureValidationOptions } from \"./AbstractStructureValidator\";\nimport StringableStructureValidator from \"./StringableStructureValidator\";\n\nexport default class YMLStructureValidator extends StringableStructureValidator {\n    public validationModel(structStr: any, options: StructureValidationOptions): ValidationResult {\n        const res = new ValidationResult();\n        try {\n            YAML.parse(structStr);\n        } catch(err) {\n            res.addExceptions(new StructureValidationException(this, \"Invalid YML\"));\n        }\n        return res;\n    }\n\n    public shortValidationModel(structStr: any, options: StructureValidationOptions): ValidationResult {\n        const res = new ValidationResult();\n        return res;\n    }\n}","function DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML?htmlEntity.entityMap:{'lt':'<','gt':'>','amp':'&','quot':'\"','apos':\"'\"};\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap['']= 'http://www.w3.org/1999/xhtml';\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || 'http://www.w3.org/XML/1998/namespace';\n\tif(source && typeof source === 'string'){\n\t\tsax.parse(source,defaultNSMap,entityMap);\n\t}else{\n\t\tsax.errorHandler.error(\"invalid doc source\");\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\n//if(typeof require == 'function'){\nvar htmlEntity = require('./entities');\nvar sax = require('./sax');\nvar XMLReader = sax.XMLReader;\nvar ParseError = sax.ParseError;\nvar DOMImplementation = exports.DOMImplementation = require('./dom').DOMImplementation;\nexports.XMLSerializer = require('./dom').XMLSerializer ;\nexports.DOMParser = DOMParser;\nexports.__DOMHandler = DOMHandler;\n//}\n","function copy(src,dest){\n\tfor(var p in src){\n\t\tdest[p] = src[p];\n\t}\n}\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknow Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\nvar htmlns = 'http://www.w3.org/1999/xhtml' ;\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0, \n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long \n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index. \n\t */\n\titem: function(index) {\n\t\treturn this[index] || null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t}\n};\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif(list._inc != inc){\n\t\tvar ls = list._refresh(list._node);\n\t\t//console.log(ls.length)\n\t\t__set__(list,'length',ls.length);\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i];\n}\n\n_extends(LiveNodeList,NodeList);\n/**\n * \n * Objects implementing the NamedNodeMap interface are used to represent collections of nodes that can be accessed by name. Note that NamedNodeMap does not inherit from NodeList; NamedNodeMaps are not maintained in any particular order. Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a NamedNodeMap, and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities \n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t\t\n\t\t\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\t\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n/**\n * @see http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490\n */\nfunction DOMImplementation(/* Object */ features) {\n\tthis._features = {};\n\tif (features) {\n\t\tfor (var feature in features) {\n\t\t\t this._features = features[feature];\n\t\t}\n\t}\n};\n\nDOMImplementation.prototype = {\n\thasFeature: function(/* string */ feature, /* string */ version) {\n\t\tvar versions = this._features[feature.toLowerCase()];\n\t\tif (versions && (!version || version in versions)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateDocument:function(namespaceURI,  qualifiedName, doctype){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR,WRONG_DOCUMENT_ERR\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype;\n\t\tif(doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif(qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI,qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateDocumentType:function(qualifiedName, publicId, systemId){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId;\n\t\tnode.systemId = systemId;\n\t\t// Introduced in DOM Level 2:\n\t\t//readonly attribute DOMString        internalSubset;\n\t\t\n\t\t//TODO:..\n\t\t//  readonly attribute NamedNodeMap     entities;\n\t\t//  readonly attribute NamedNodeMap     notations;\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises \n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises \n\t\tthis.insertBefore(newChild,oldChild);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n    \t\t\t\tif(map[n] == namespaceURI){\n    \t\t\t\t\treturn n;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(prefix in map){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n}\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns == 'http://www.w3.org/2000/xmlns/'){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns == 'http://www.w3.org/2000/xmlns/'){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\nfunction _onUpdateChild(doc,el,newChild){\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif(newChild){\n\t\t\tcs[cs.length++] = newChild;\n\t\t}else{\n\t\t\t//console.log(1)\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile(child){\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild =child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t}\n\t}\n}\n\n/**\n * attributes;\n * children;\n * \n * writeable properties:\n * nodeValue,Attr:value,CharacterData:data\n * prefix\n */\nfunction _removeChild(parentNode,child){\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif(previous){\n\t\tprevious.nextSibling = next;\n\t}else{\n\t\tparentNode.firstChild = next\n\t}\n\tif(next){\n\t\tnext.previousSibling = previous;\n\t}else{\n\t\tparentNode.lastChild = previous;\n\t}\n\t_onUpdateChild(parentNode.ownerDocument,parentNode);\n\treturn child;\n}\n/**\n * preformance key(refChild == null)\n */\nfunction _insertBefore(parentNode,newChild,nextChild){\n\tvar cp = newChild.parentNode;\n\tif(cp){\n\t\tcp.removeChild(newChild);//remove and update\n\t}\n\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = newChild.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn newChild;\n\t\t}\n\t\tvar newLast = newChild.lastChild;\n\t}else{\n\t\tnewFirst = newLast = newChild;\n\t}\n\tvar pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = nextChild;\n\t\n\t\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparentNode.firstChild = newFirst;\n\t}\n\tif(nextChild == null){\n\t\tparentNode.lastChild = newLast;\n\t}else{\n\t\tnextChild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parentNode;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);\n\t//console.log(parentNode.lastChild.nextSibling == null)\n\tif (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnewChild.firstChild = newChild.lastChild = null;\n\t}\n\treturn newChild;\n}\nfunction _appendSingleChild(parentNode,newChild){\n\tvar cp = newChild.parentNode;\n\tif(cp){\n\t\tvar pre = parentNode.lastChild;\n\t\tcp.removeChild(newChild);//remove and update\n\t\tvar pre = parentNode.lastChild;\n\t}\n\tvar pre = parentNode.lastChild;\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = pre;\n\tnewChild.nextSibling = null;\n\tif(pre){\n\t\tpre.nextSibling = newChild;\n\t}else{\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);\n\treturn newChild;\n\t//console.log(\"__aa\",parentNode.lastChild.nextSibling == null)\n}\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\t\n\tinsertBefore :  function(newChild, refChild){//raises \n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\tif(this.documentElement == null && newChild.nodeType == ELEMENT_NODE){\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t\t\n\t\treturn _insertBefore(this,newChild,refChild),(newChild.ownerDocument = this),newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\t\n\tgetElementsByClassName: function(className) {\n\t\tvar pattern = new RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\");\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE) {\n\t\t\t\t\tif(pattern.test(node.getAttribute('class'))) {\n\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\t\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.target = target;\n\t\tnode.nodeValue= node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\t\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\t\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\t\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t\t\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\t\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\t\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\nfunction needNamespaceDefine(node,isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix||'';\n\tvar uri = node.namespaceURI;\n\tif (!prefix && !uri){\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === \"http://www.w3.org/XML/1998/namespace\" \n\t\t|| uri == 'http://www.w3.org/2000/xmlns/'){\n\t\treturn false;\n\t}\n\t\n\tvar i = visibleNamespaces.length \n\t//console.log('@@@@',node.tagName,prefix,uri,visibleNamespaces)\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\t//console.log(node.nodeType,node.tagName,ns.prefix,prefix)\n\t\tif (ns.prefix == prefix){\n\t\t\treturn ns.namespace != uri;\n\t\t}\n\t}\n\t//console.log(isHTML,uri,prefix=='')\n\t//if(isHTML && prefix ==null && uri == 'http://www.w3.org/1999/xhtml'){\n\t//\treturn false;\n\t//}\n\t//node.flag = '11111'\n\t//console.error(3,true,node.flag,node.prefix,node.namespaceURI)\n\treturn true;\n}\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tif (!visibleNamespaces) visibleNamespaces = [];\n\t\tvar startVisibleNamespaces = visibleNamespaces.length;\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\t\t\n\t\tisHTML =  (htmlns === node.namespaceURI) ||isHTML \n\t\tbuf.push('<',nodeName);\n\t\t\n\t\t\n\t\t\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\tvar ns = prefix ? ' xmlns:' + prefix : \" xmlns\";\n\t\t\t\tbuf.push(ns, '=\"' , uri , '\"');\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\t\t// add namespace for current node\t\t\n\t\tif (needNamespaceDefine(node,isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\tif (uri) {\n\t\t\t\t// Avoid empty namespace value like xmlns:ds=\"\"\n\t\t\t\t// Empty namespace URL will we produce an invalid XML document\n\t\t\t\tvar ns = prefix ? ' xmlns:' + prefix : \" xmlns\";\n\t\t\t\tbuf.push(ns, '=\"' , uri , '\"');\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',nodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\t/**\n\t\t * Well-formedness constraint: No < in Attribute Values\n\t\t * The replacement text of any entity referred to directly or indirectly in an attribute value must not contain a <.\n\t\t * @see https://www.w3.org/TR/xml/#CleanAttrVals\n\t\t * @see https://www.w3.org/TR/xml/#NT-AttValue\n\t\t */\n\t\treturn buf.push(' ', node.name, '=\"', node.value.replace(/[<&\"]/g,_xmlEncoder), '\"');\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&]/g,_xmlEncoder)\n\t\t\t.replace(/]]>/g, ']]&gt;')\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor(var n in node){\n\t\tvar v = node[n];\n\t\tif(typeof v != 'object' ){\n\t\t\tif(v != node2[n]){\n\t\t\t\tnode2[n] = v;\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t//TODO:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.Node = Node;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","exports.entityMap = {\n       lt: '<',\n       gt: '>',\n       amp: '&',\n       quot: '\"',\n       apos: \"'\",\n       Agrave: \"À\",\n       Aacute: \"Á\",\n       Acirc: \"Â\",\n       Atilde: \"Ã\",\n       Auml: \"Ä\",\n       Aring: \"Å\",\n       AElig: \"Æ\",\n       Ccedil: \"Ç\",\n       Egrave: \"È\",\n       Eacute: \"É\",\n       Ecirc: \"Ê\",\n       Euml: \"Ë\",\n       Igrave: \"Ì\",\n       Iacute: \"Í\",\n       Icirc: \"Î\",\n       Iuml: \"Ï\",\n       ETH: \"Ð\",\n       Ntilde: \"Ñ\",\n       Ograve: \"Ò\",\n       Oacute: \"Ó\",\n       Ocirc: \"Ô\",\n       Otilde: \"Õ\",\n       Ouml: \"Ö\",\n       Oslash: \"Ø\",\n       Ugrave: \"Ù\",\n       Uacute: \"Ú\",\n       Ucirc: \"Û\",\n       Uuml: \"Ü\",\n       Yacute: \"Ý\",\n       THORN: \"Þ\",\n       szlig: \"ß\",\n       agrave: \"à\",\n       aacute: \"á\",\n       acirc: \"â\",\n       atilde: \"ã\",\n       auml: \"ä\",\n       aring: \"å\",\n       aelig: \"æ\",\n       ccedil: \"ç\",\n       egrave: \"è\",\n       eacute: \"é\",\n       ecirc: \"ê\",\n       euml: \"ë\",\n       igrave: \"ì\",\n       iacute: \"í\",\n       icirc: \"î\",\n       iuml: \"ï\",\n       eth: \"ð\",\n       ntilde: \"ñ\",\n       ograve: \"ò\",\n       oacute: \"ó\",\n       ocirc: \"ô\",\n       otilde: \"õ\",\n       ouml: \"ö\",\n       oslash: \"ø\",\n       ugrave: \"ù\",\n       uacute: \"ú\",\n       ucirc: \"û\",\n       uuml: \"ü\",\n       yacute: \"ý\",\n       thorn: \"þ\",\n       yuml: \"ÿ\",\n       nbsp: \"\\u00a0\",\n       iexcl: \"¡\",\n       cent: \"¢\",\n       pound: \"£\",\n       curren: \"¤\",\n       yen: \"¥\",\n       brvbar: \"¦\",\n       sect: \"§\",\n       uml: \"¨\",\n       copy: \"©\",\n       ordf: \"ª\",\n       laquo: \"«\",\n       not: \"¬\",\n       shy: \"­­\",\n       reg: \"®\",\n       macr: \"¯\",\n       deg: \"°\",\n       plusmn: \"±\",\n       sup2: \"²\",\n       sup3: \"³\",\n       acute: \"´\",\n       micro: \"µ\",\n       para: \"¶\",\n       middot: \"·\",\n       cedil: \"¸\",\n       sup1: \"¹\",\n       ordm: \"º\",\n       raquo: \"»\",\n       frac14: \"¼\",\n       frac12: \"½\",\n       frac34: \"¾\",\n       iquest: \"¿\",\n       times: \"×\",\n       divide: \"÷\",\n       forall: \"∀\",\n       part: \"∂\",\n       exist: \"∃\",\n       empty: \"∅\",\n       nabla: \"∇\",\n       isin: \"∈\",\n       notin: \"∉\",\n       ni: \"∋\",\n       prod: \"∏\",\n       sum: \"∑\",\n       minus: \"−\",\n       lowast: \"∗\",\n       radic: \"√\",\n       prop: \"∝\",\n       infin: \"∞\",\n       ang: \"∠\",\n       and: \"∧\",\n       or: \"∨\",\n       cap: \"∩\",\n       cup: \"∪\",\n       'int': \"∫\",\n       there4: \"∴\",\n       sim: \"∼\",\n       cong: \"≅\",\n       asymp: \"≈\",\n       ne: \"≠\",\n       equiv: \"≡\",\n       le: \"≤\",\n       ge: \"≥\",\n       sub: \"⊂\",\n       sup: \"⊃\",\n       nsub: \"⊄\",\n       sube: \"⊆\",\n       supe: \"⊇\",\n       oplus: \"⊕\",\n       otimes: \"⊗\",\n       perp: \"⊥\",\n       sdot: \"⋅\",\n       Alpha: \"Α\",\n       Beta: \"Β\",\n       Gamma: \"Γ\",\n       Delta: \"Δ\",\n       Epsilon: \"Ε\",\n       Zeta: \"Ζ\",\n       Eta: \"Η\",\n       Theta: \"Θ\",\n       Iota: \"Ι\",\n       Kappa: \"Κ\",\n       Lambda: \"Λ\",\n       Mu: \"Μ\",\n       Nu: \"Ν\",\n       Xi: \"Ξ\",\n       Omicron: \"Ο\",\n       Pi: \"Π\",\n       Rho: \"Ρ\",\n       Sigma: \"Σ\",\n       Tau: \"Τ\",\n       Upsilon: \"Υ\",\n       Phi: \"Φ\",\n       Chi: \"Χ\",\n       Psi: \"Ψ\",\n       Omega: \"Ω\",\n       alpha: \"α\",\n       beta: \"β\",\n       gamma: \"γ\",\n       delta: \"δ\",\n       epsilon: \"ε\",\n       zeta: \"ζ\",\n       eta: \"η\",\n       theta: \"θ\",\n       iota: \"ι\",\n       kappa: \"κ\",\n       lambda: \"λ\",\n       mu: \"μ\",\n       nu: \"ν\",\n       xi: \"ξ\",\n       omicron: \"ο\",\n       pi: \"π\",\n       rho: \"ρ\",\n       sigmaf: \"ς\",\n       sigma: \"σ\",\n       tau: \"τ\",\n       upsilon: \"υ\",\n       phi: \"φ\",\n       chi: \"χ\",\n       psi: \"ψ\",\n       omega: \"ω\",\n       thetasym: \"ϑ\",\n       upsih: \"ϒ\",\n       piv: \"ϖ\",\n       OElig: \"Œ\",\n       oelig: \"œ\",\n       Scaron: \"Š\",\n       scaron: \"š\",\n       Yuml: \"Ÿ\",\n       fnof: \"ƒ\",\n       circ: \"ˆ\",\n       tilde: \"˜\",\n       ensp: \" \",\n       emsp: \" \",\n       thinsp: \" \",\n       zwnj: \"‌\",\n       zwj: \"‍\",\n       lrm: \"‎\",\n       rlm: \"‏\",\n       ndash: \"–\",\n       mdash: \"—\",\n       lsquo: \"‘\",\n       rsquo: \"’\",\n       sbquo: \"‚\",\n       ldquo: \"“\",\n       rdquo: \"”\",\n       bdquo: \"„\",\n       dagger: \"†\",\n       Dagger: \"‡\",\n       bull: \"•\",\n       hellip: \"…\",\n       permil: \"‰\",\n       prime: \"′\",\n       Prime: \"″\",\n       lsaquo: \"‹\",\n       rsaquo: \"›\",\n       oline: \"‾\",\n       euro: \"€\",\n       trade: \"™\",\n       larr: \"←\",\n       uarr: \"↑\",\n       rarr: \"→\",\n       darr: \"↓\",\n       harr: \"↔\",\n       crarr: \"↵\",\n       lceil: \"⌈\",\n       rceil: \"⌉\",\n       lfloor: \"⌊\",\n       rfloor: \"⌋\",\n       loz: \"◊\",\n       spades: \"♠\",\n       clubs: \"♣\",\n       hearts: \"♥\",\n       diams: \"♦\"\n};\n","//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring \nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\t\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif(k in entityMap){\n\t\t\treturn entityMap[k]; \n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\t\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart+2,end);\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\t\t\t\t\t\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor(var prefix in localNSMap){\n\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix) ;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\t\t\t\t\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(el.uri === 'http://www.w3.org/1999/xhtml' && !el.closed){\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t}else{\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (qname in el.attributeNames) errorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\tel.addValue(qname, value, startIndex)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t//console.log(attrName,value,start,p)\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\t//console.dir(el)\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value.replace(/&#?\\w+;/g,entityReplacer), start)\n\t\t\t\t}else{\n\t\t\t\t\tif(currentNSMap[''] !== 'http://www.w3.org/1999/xhtml' || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif(currentNSMap[''] !== 'http://www.w3.org/1999/xhtml' || !attrName.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute \n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = 'http://www.w3.org/2000/xmlns/'\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value) \n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = 'http://www.w3.org/XML/1998/namespace';\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\t\t\t\t\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor(prefix in localNSMap){\n\t\t\t\tdomBuilder.endPrefixMapping(prefix) \n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\t\t\t\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//} \n}\nfunction _copy(source,target){\n\tfor(var n in source){target[n] = source[n]}\n}\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA() \n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) \n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\t\t\t\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\t\t\t\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","// Generated by CoffeeScript 1.12.4\nvar Dumper, Inline, Utils;\n\nUtils = require('./Utils');\n\nInline = require('./Inline');\n\nDumper = (function() {\n  function Dumper() {}\n\n  Dumper.indentation = 4;\n\n  Dumper.prototype.dump = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    var i, key, len, output, prefix, value, willBeInlined;\n    if (inline == null) {\n      inline = 0;\n    }\n    if (indent == null) {\n      indent = 0;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    output = '';\n    prefix = (indent ? Utils.strRepeat(' ', indent) : '');\n    if (inline <= 0 || typeof input !== 'object' || input instanceof Date || Utils.isEmpty(input)) {\n      output += prefix + Inline.dump(input, exceptionOnInvalidType, objectEncoder);\n    } else {\n      if (input instanceof Array) {\n        for (i = 0, len = input.length; i < len; i++) {\n          value = input[i];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + '-' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      } else {\n        for (key in input) {\n          value = input[key];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + Inline.dump(key, exceptionOnInvalidType, objectEncoder) + ':' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      }\n    }\n    return output;\n  };\n\n  return Dumper;\n\n})();\n\nmodule.exports = Dumper;\n","// Generated by CoffeeScript 1.12.4\nvar Escaper, Pattern;\n\nPattern = require('./Pattern');\n\nEscaper = (function() {\n  var ch;\n\n  function Escaper() {}\n\n  Escaper.LIST_ESCAPEES = ['\\\\', '\\\\\\\\', '\\\\\"', '\"', \"\\x00\", \"\\x01\", \"\\x02\", \"\\x03\", \"\\x04\", \"\\x05\", \"\\x06\", \"\\x07\", \"\\x08\", \"\\x09\", \"\\x0a\", \"\\x0b\", \"\\x0c\", \"\\x0d\", \"\\x0e\", \"\\x0f\", \"\\x10\", \"\\x11\", \"\\x12\", \"\\x13\", \"\\x14\", \"\\x15\", \"\\x16\", \"\\x17\", \"\\x18\", \"\\x19\", \"\\x1a\", \"\\x1b\", \"\\x1c\", \"\\x1d\", \"\\x1e\", \"\\x1f\", (ch = String.fromCharCode)(0x0085), ch(0x00A0), ch(0x2028), ch(0x2029)];\n\n  Escaper.LIST_ESCAPED = ['\\\\\\\\', '\\\\\"', '\\\\\"', '\\\\\"', \"\\\\0\", \"\\\\x01\", \"\\\\x02\", \"\\\\x03\", \"\\\\x04\", \"\\\\x05\", \"\\\\x06\", \"\\\\a\", \"\\\\b\", \"\\\\t\", \"\\\\n\", \"\\\\v\", \"\\\\f\", \"\\\\r\", \"\\\\x0e\", \"\\\\x0f\", \"\\\\x10\", \"\\\\x11\", \"\\\\x12\", \"\\\\x13\", \"\\\\x14\", \"\\\\x15\", \"\\\\x16\", \"\\\\x17\", \"\\\\x18\", \"\\\\x19\", \"\\\\x1a\", \"\\\\e\", \"\\\\x1c\", \"\\\\x1d\", \"\\\\x1e\", \"\\\\x1f\", \"\\\\N\", \"\\\\_\", \"\\\\L\", \"\\\\P\"];\n\n  Escaper.MAPPING_ESCAPEES_TO_ESCAPED = (function() {\n    var i, j, mapping, ref;\n    mapping = {};\n    for (i = j = 0, ref = Escaper.LIST_ESCAPEES.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      mapping[Escaper.LIST_ESCAPEES[i]] = Escaper.LIST_ESCAPED[i];\n    }\n    return mapping;\n  })();\n\n  Escaper.PATTERN_CHARACTERS_TO_ESCAPE = new Pattern('[\\\\x00-\\\\x1f]|\\xc2\\x85|\\xc2\\xa0|\\xe2\\x80\\xa8|\\xe2\\x80\\xa9');\n\n  Escaper.PATTERN_MAPPING_ESCAPEES = new Pattern(Escaper.LIST_ESCAPEES.join('|').split('\\\\').join('\\\\\\\\'));\n\n  Escaper.PATTERN_SINGLE_QUOTING = new Pattern('[\\\\s\\'\":{}[\\\\],&*#?]|^[-?|<>=!%@`]');\n\n  Escaper.requiresDoubleQuoting = function(value) {\n    return this.PATTERN_CHARACTERS_TO_ESCAPE.test(value);\n  };\n\n  Escaper.escapeWithDoubleQuotes = function(value) {\n    var result;\n    result = this.PATTERN_MAPPING_ESCAPEES.replace(value, (function(_this) {\n      return function(str) {\n        return _this.MAPPING_ESCAPEES_TO_ESCAPED[str];\n      };\n    })(this));\n    return '\"' + result + '\"';\n  };\n\n  Escaper.requiresSingleQuoting = function(value) {\n    return this.PATTERN_SINGLE_QUOTING.test(value);\n  };\n\n  Escaper.escapeWithSingleQuotes = function(value) {\n    return \"'\" + value.replace(/'/g, \"''\") + \"'\";\n  };\n\n  return Escaper;\n\n})();\n\nmodule.exports = Escaper;\n","// Generated by CoffeeScript 1.12.4\nvar DumpException,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nDumpException = (function(superClass) {\n  extend(DumpException, superClass);\n\n  function DumpException(message, parsedLine, snippet) {\n    this.message = message;\n    this.parsedLine = parsedLine;\n    this.snippet = snippet;\n  }\n\n  DumpException.prototype.toString = function() {\n    if ((this.parsedLine != null) && (this.snippet != null)) {\n      return '<DumpException> ' + this.message + ' (line ' + this.parsedLine + ': \\'' + this.snippet + '\\')';\n    } else {\n      return '<DumpException> ' + this.message;\n    }\n  };\n\n  return DumpException;\n\n})(Error);\n\nmodule.exports = DumpException;\n","// Generated by CoffeeScript 1.12.4\nvar ParseException,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nParseException = (function(superClass) {\n  extend(ParseException, superClass);\n\n  function ParseException(message, parsedLine, snippet) {\n    this.message = message;\n    this.parsedLine = parsedLine;\n    this.snippet = snippet;\n  }\n\n  ParseException.prototype.toString = function() {\n    if ((this.parsedLine != null) && (this.snippet != null)) {\n      return '<ParseException> ' + this.message + ' (line ' + this.parsedLine + ': \\'' + this.snippet + '\\')';\n    } else {\n      return '<ParseException> ' + this.message;\n    }\n  };\n\n  return ParseException;\n\n})(Error);\n\nmodule.exports = ParseException;\n","// Generated by CoffeeScript 1.12.4\nvar ParseMore,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nParseMore = (function(superClass) {\n  extend(ParseMore, superClass);\n\n  function ParseMore(message, parsedLine, snippet) {\n    this.message = message;\n    this.parsedLine = parsedLine;\n    this.snippet = snippet;\n  }\n\n  ParseMore.prototype.toString = function() {\n    if ((this.parsedLine != null) && (this.snippet != null)) {\n      return '<ParseMore> ' + this.message + ' (line ' + this.parsedLine + ': \\'' + this.snippet + '\\')';\n    } else {\n      return '<ParseMore> ' + this.message;\n    }\n  };\n\n  return ParseMore;\n\n})(Error);\n\nmodule.exports = ParseMore;\n","// Generated by CoffeeScript 1.12.4\nvar DumpException, Escaper, Inline, ParseException, ParseMore, Pattern, Unescaper, Utils,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nPattern = require('./Pattern');\n\nUnescaper = require('./Unescaper');\n\nEscaper = require('./Escaper');\n\nUtils = require('./Utils');\n\nParseException = require('./Exception/ParseException');\n\nParseMore = require('./Exception/ParseMore');\n\nDumpException = require('./Exception/DumpException');\n\nInline = (function() {\n  function Inline() {}\n\n  Inline.REGEX_QUOTED_STRING = '(?:\"(?:[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"|\\'(?:[^\\']*(?:\\'\\'[^\\']*)*)\\')';\n\n  Inline.PATTERN_TRAILING_COMMENTS = new Pattern('^\\\\s*#.*$');\n\n  Inline.PATTERN_QUOTED_SCALAR = new Pattern('^' + Inline.REGEX_QUOTED_STRING);\n\n  Inline.PATTERN_THOUSAND_NUMERIC_SCALAR = new Pattern('^(-|\\\\+)?[0-9,]+(\\\\.[0-9]+)?$');\n\n  Inline.PATTERN_SCALAR_BY_DELIMITERS = {};\n\n  Inline.settings = {};\n\n  Inline.configure = function(exceptionOnInvalidType, objectDecoder) {\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = null;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    this.settings.exceptionOnInvalidType = exceptionOnInvalidType;\n    this.settings.objectDecoder = objectDecoder;\n  };\n\n  Inline.parse = function(value, exceptionOnInvalidType, objectDecoder) {\n    var context, result;\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    this.settings.exceptionOnInvalidType = exceptionOnInvalidType;\n    this.settings.objectDecoder = objectDecoder;\n    if (value == null) {\n      return '';\n    }\n    value = Utils.trim(value);\n    if (0 === value.length) {\n      return '';\n    }\n    context = {\n      exceptionOnInvalidType: exceptionOnInvalidType,\n      objectDecoder: objectDecoder,\n      i: 0\n    };\n    switch (value.charAt(0)) {\n      case '[':\n        result = this.parseSequence(value, context);\n        ++context.i;\n        break;\n      case '{':\n        result = this.parseMapping(value, context);\n        ++context.i;\n        break;\n      default:\n        result = this.parseScalar(value, null, ['\"', \"'\"], context);\n    }\n    if (this.PATTERN_TRAILING_COMMENTS.replace(value.slice(context.i), '') !== '') {\n      throw new ParseException('Unexpected characters near \"' + value.slice(context.i) + '\".');\n    }\n    return result;\n  };\n\n  Inline.dump = function(value, exceptionOnInvalidType, objectEncoder) {\n    var ref, result, type;\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    if (value == null) {\n      return 'null';\n    }\n    type = typeof value;\n    if (type === 'object') {\n      if (value instanceof Date) {\n        return value.toISOString();\n      } else if (objectEncoder != null) {\n        result = objectEncoder(value);\n        if (typeof result === 'string' || (result != null)) {\n          return result;\n        }\n      }\n      return this.dumpObject(value);\n    }\n    if (type === 'boolean') {\n      return (value ? 'true' : 'false');\n    }\n    if (Utils.isDigits(value)) {\n      return (type === 'string' ? \"'\" + value + \"'\" : String(parseInt(value)));\n    }\n    if (Utils.isNumeric(value)) {\n      return (type === 'string' ? \"'\" + value + \"'\" : String(parseFloat(value)));\n    }\n    if (type === 'number') {\n      return (value === 2e308 ? '.Inf' : (value === -2e308 ? '-.Inf' : (isNaN(value) ? '.NaN' : value)));\n    }\n    if (Escaper.requiresDoubleQuoting(value)) {\n      return Escaper.escapeWithDoubleQuotes(value);\n    }\n    if (Escaper.requiresSingleQuoting(value)) {\n      return Escaper.escapeWithSingleQuotes(value);\n    }\n    if ('' === value) {\n      return '\"\"';\n    }\n    if (Utils.PATTERN_DATE.test(value)) {\n      return \"'\" + value + \"'\";\n    }\n    if ((ref = value.toLowerCase()) === 'null' || ref === '~' || ref === 'true' || ref === 'false') {\n      return \"'\" + value + \"'\";\n    }\n    return value;\n  };\n\n  Inline.dumpObject = function(value, exceptionOnInvalidType, objectSupport) {\n    var j, key, len1, output, val;\n    if (objectSupport == null) {\n      objectSupport = null;\n    }\n    if (value instanceof Array) {\n      output = [];\n      for (j = 0, len1 = value.length; j < len1; j++) {\n        val = value[j];\n        output.push(this.dump(val));\n      }\n      return '[' + output.join(', ') + ']';\n    } else {\n      output = [];\n      for (key in value) {\n        val = value[key];\n        output.push(this.dump(key) + ': ' + this.dump(val));\n      }\n      return '{' + output.join(', ') + '}';\n    }\n  };\n\n  Inline.parseScalar = function(scalar, delimiters, stringDelimiters, context, evaluate) {\n    var i, joinedDelimiters, match, output, pattern, ref, ref1, strpos, tmp;\n    if (delimiters == null) {\n      delimiters = null;\n    }\n    if (stringDelimiters == null) {\n      stringDelimiters = ['\"', \"'\"];\n    }\n    if (context == null) {\n      context = null;\n    }\n    if (evaluate == null) {\n      evaluate = true;\n    }\n    if (context == null) {\n      context = {\n        exceptionOnInvalidType: this.settings.exceptionOnInvalidType,\n        objectDecoder: this.settings.objectDecoder,\n        i: 0\n      };\n    }\n    i = context.i;\n    if (ref = scalar.charAt(i), indexOf.call(stringDelimiters, ref) >= 0) {\n      output = this.parseQuotedScalar(scalar, context);\n      i = context.i;\n      if (delimiters != null) {\n        tmp = Utils.ltrim(scalar.slice(i), ' ');\n        if (!(ref1 = tmp.charAt(0), indexOf.call(delimiters, ref1) >= 0)) {\n          throw new ParseException('Unexpected characters (' + scalar.slice(i) + ').');\n        }\n      }\n    } else {\n      if (!delimiters) {\n        output = scalar.slice(i);\n        i += output.length;\n        strpos = output.indexOf(' #');\n        if (strpos !== -1) {\n          output = Utils.rtrim(output.slice(0, strpos));\n        }\n      } else {\n        joinedDelimiters = delimiters.join('|');\n        pattern = this.PATTERN_SCALAR_BY_DELIMITERS[joinedDelimiters];\n        if (pattern == null) {\n          pattern = new Pattern('^(.+?)(' + joinedDelimiters + ')');\n          this.PATTERN_SCALAR_BY_DELIMITERS[joinedDelimiters] = pattern;\n        }\n        if (match = pattern.exec(scalar.slice(i))) {\n          output = match[1];\n          i += output.length;\n        } else {\n          throw new ParseException('Malformed inline YAML string (' + scalar + ').');\n        }\n      }\n      if (evaluate) {\n        output = this.evaluateScalar(output, context);\n      }\n    }\n    context.i = i;\n    return output;\n  };\n\n  Inline.parseQuotedScalar = function(scalar, context) {\n    var i, match, output;\n    i = context.i;\n    if (!(match = this.PATTERN_QUOTED_SCALAR.exec(scalar.slice(i)))) {\n      throw new ParseMore('Malformed inline YAML string (' + scalar.slice(i) + ').');\n    }\n    output = match[0].substr(1, match[0].length - 2);\n    if ('\"' === scalar.charAt(i)) {\n      output = Unescaper.unescapeDoubleQuotedString(output);\n    } else {\n      output = Unescaper.unescapeSingleQuotedString(output);\n    }\n    i += match[0].length;\n    context.i = i;\n    return output;\n  };\n\n  Inline.parseSequence = function(sequence, context) {\n    var e, i, isQuoted, len, output, ref, value;\n    output = [];\n    len = sequence.length;\n    i = context.i;\n    i += 1;\n    while (i < len) {\n      context.i = i;\n      switch (sequence.charAt(i)) {\n        case '[':\n          output.push(this.parseSequence(sequence, context));\n          i = context.i;\n          break;\n        case '{':\n          output.push(this.parseMapping(sequence, context));\n          i = context.i;\n          break;\n        case ']':\n          return output;\n        case ',':\n        case ' ':\n        case \"\\n\":\n          break;\n        default:\n          isQuoted = ((ref = sequence.charAt(i)) === '\"' || ref === \"'\");\n          value = this.parseScalar(sequence, [',', ']'], ['\"', \"'\"], context);\n          i = context.i;\n          if (!isQuoted && typeof value === 'string' && (value.indexOf(': ') !== -1 || value.indexOf(\":\\n\") !== -1)) {\n            try {\n              value = this.parseMapping('{' + value + '}');\n            } catch (error) {\n              e = error;\n            }\n          }\n          output.push(value);\n          --i;\n      }\n      ++i;\n    }\n    throw new ParseMore('Malformed inline YAML string ' + sequence);\n  };\n\n  Inline.parseMapping = function(mapping, context) {\n    var done, i, key, len, output, shouldContinueWhileLoop, value;\n    output = {};\n    len = mapping.length;\n    i = context.i;\n    i += 1;\n    shouldContinueWhileLoop = false;\n    while (i < len) {\n      context.i = i;\n      switch (mapping.charAt(i)) {\n        case ' ':\n        case ',':\n        case \"\\n\":\n          ++i;\n          context.i = i;\n          shouldContinueWhileLoop = true;\n          break;\n        case '}':\n          return output;\n      }\n      if (shouldContinueWhileLoop) {\n        shouldContinueWhileLoop = false;\n        continue;\n      }\n      key = this.parseScalar(mapping, [':', ' ', \"\\n\"], ['\"', \"'\"], context, false);\n      i = context.i;\n      done = false;\n      while (i < len) {\n        context.i = i;\n        switch (mapping.charAt(i)) {\n          case '[':\n            value = this.parseSequence(mapping, context);\n            i = context.i;\n            if (output[key] === void 0) {\n              output[key] = value;\n            }\n            done = true;\n            break;\n          case '{':\n            value = this.parseMapping(mapping, context);\n            i = context.i;\n            if (output[key] === void 0) {\n              output[key] = value;\n            }\n            done = true;\n            break;\n          case ':':\n          case ' ':\n          case \"\\n\":\n            break;\n          default:\n            value = this.parseScalar(mapping, [',', '}'], ['\"', \"'\"], context);\n            i = context.i;\n            if (output[key] === void 0) {\n              output[key] = value;\n            }\n            done = true;\n            --i;\n        }\n        ++i;\n        if (done) {\n          break;\n        }\n      }\n    }\n    throw new ParseMore('Malformed inline YAML string ' + mapping);\n  };\n\n  Inline.evaluateScalar = function(scalar, context) {\n    var cast, date, exceptionOnInvalidType, firstChar, firstSpace, firstWord, objectDecoder, raw, scalarLower, subValue, trimmedScalar;\n    scalar = Utils.trim(scalar);\n    scalarLower = scalar.toLowerCase();\n    switch (scalarLower) {\n      case 'null':\n      case '':\n      case '~':\n        return null;\n      case 'true':\n        return true;\n      case 'false':\n        return false;\n      case '.inf':\n        return 2e308;\n      case '.nan':\n        return 0/0;\n      case '-.inf':\n        return 2e308;\n      default:\n        firstChar = scalarLower.charAt(0);\n        switch (firstChar) {\n          case '!':\n            firstSpace = scalar.indexOf(' ');\n            if (firstSpace === -1) {\n              firstWord = scalarLower;\n            } else {\n              firstWord = scalarLower.slice(0, firstSpace);\n            }\n            switch (firstWord) {\n              case '!':\n                if (firstSpace !== -1) {\n                  return parseInt(this.parseScalar(scalar.slice(2)));\n                }\n                return null;\n              case '!str':\n                return Utils.ltrim(scalar.slice(4));\n              case '!!str':\n                return Utils.ltrim(scalar.slice(5));\n              case '!!int':\n                return parseInt(this.parseScalar(scalar.slice(5)));\n              case '!!bool':\n                return Utils.parseBoolean(this.parseScalar(scalar.slice(6)), false);\n              case '!!float':\n                return parseFloat(this.parseScalar(scalar.slice(7)));\n              case '!!timestamp':\n                return Utils.stringToDate(Utils.ltrim(scalar.slice(11)));\n              default:\n                if (context == null) {\n                  context = {\n                    exceptionOnInvalidType: this.settings.exceptionOnInvalidType,\n                    objectDecoder: this.settings.objectDecoder,\n                    i: 0\n                  };\n                }\n                objectDecoder = context.objectDecoder, exceptionOnInvalidType = context.exceptionOnInvalidType;\n                if (objectDecoder) {\n                  trimmedScalar = Utils.rtrim(scalar);\n                  firstSpace = trimmedScalar.indexOf(' ');\n                  if (firstSpace === -1) {\n                    return objectDecoder(trimmedScalar, null);\n                  } else {\n                    subValue = Utils.ltrim(trimmedScalar.slice(firstSpace + 1));\n                    if (!(subValue.length > 0)) {\n                      subValue = null;\n                    }\n                    return objectDecoder(trimmedScalar.slice(0, firstSpace), subValue);\n                  }\n                }\n                if (exceptionOnInvalidType) {\n                  throw new ParseException('Custom object support when parsing a YAML file has been disabled.');\n                }\n                return null;\n            }\n            break;\n          case '0':\n            if ('0x' === scalar.slice(0, 2)) {\n              return Utils.hexDec(scalar);\n            } else if (Utils.isDigits(scalar)) {\n              return Utils.octDec(scalar);\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else {\n              return scalar;\n            }\n            break;\n          case '+':\n            if (Utils.isDigits(scalar)) {\n              raw = scalar;\n              cast = parseInt(raw);\n              if (raw === String(cast)) {\n                return cast;\n              } else {\n                return raw;\n              }\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else if (this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(scalar)) {\n              return parseFloat(scalar.replace(',', ''));\n            }\n            return scalar;\n          case '-':\n            if (Utils.isDigits(scalar.slice(1))) {\n              if ('0' === scalar.charAt(1)) {\n                return -Utils.octDec(scalar.slice(1));\n              } else {\n                raw = scalar.slice(1);\n                cast = parseInt(raw);\n                if (raw === String(cast)) {\n                  return -cast;\n                } else {\n                  return -raw;\n                }\n              }\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else if (this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(scalar)) {\n              return parseFloat(scalar.replace(',', ''));\n            }\n            return scalar;\n          default:\n            if (date = Utils.stringToDate(scalar)) {\n              return date;\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else if (this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(scalar)) {\n              return parseFloat(scalar.replace(',', ''));\n            }\n            return scalar;\n        }\n    }\n  };\n\n  return Inline;\n\n})();\n\nmodule.exports = Inline;\n","// Generated by CoffeeScript 1.12.4\nvar Inline, ParseException, ParseMore, Parser, Pattern, Utils;\n\nInline = require('./Inline');\n\nPattern = require('./Pattern');\n\nUtils = require('./Utils');\n\nParseException = require('./Exception/ParseException');\n\nParseMore = require('./Exception/ParseMore');\n\nParser = (function() {\n  Parser.prototype.PATTERN_FOLDED_SCALAR_ALL = new Pattern('^(?:(?<type>![^\\\\|>]*)\\\\s+)?(?<separator>\\\\||>)(?<modifiers>\\\\+|\\\\-|\\\\d+|\\\\+\\\\d+|\\\\-\\\\d+|\\\\d+\\\\+|\\\\d+\\\\-)?(?<comments> +#.*)?$');\n\n  Parser.prototype.PATTERN_FOLDED_SCALAR_END = new Pattern('(?<separator>\\\\||>)(?<modifiers>\\\\+|\\\\-|\\\\d+|\\\\+\\\\d+|\\\\-\\\\d+|\\\\d+\\\\+|\\\\d+\\\\-)?(?<comments> +#.*)?$');\n\n  Parser.prototype.PATTERN_SEQUENCE_ITEM = new Pattern('^\\\\-((?<leadspaces>\\\\s+)(?<value>.+?))?\\\\s*$');\n\n  Parser.prototype.PATTERN_ANCHOR_VALUE = new Pattern('^&(?<ref>[^ ]+) *(?<value>.*)');\n\n  Parser.prototype.PATTERN_COMPACT_NOTATION = new Pattern('^(?<key>' + Inline.REGEX_QUOTED_STRING + '|[^ \\'\"\\\\{\\\\[].*?) *\\\\:(\\\\s+(?<value>.+?))?\\\\s*$');\n\n  Parser.prototype.PATTERN_MAPPING_ITEM = new Pattern('^(?<key>' + Inline.REGEX_QUOTED_STRING + '|[^ \\'\"\\\\[\\\\{].*?) *\\\\:(\\\\s+(?<value>.+?))?\\\\s*$');\n\n  Parser.prototype.PATTERN_DECIMAL = new Pattern('\\\\d+');\n\n  Parser.prototype.PATTERN_INDENT_SPACES = new Pattern('^ +');\n\n  Parser.prototype.PATTERN_TRAILING_LINES = new Pattern('(\\n*)$');\n\n  Parser.prototype.PATTERN_YAML_HEADER = new Pattern('^\\\\%YAML[: ][\\\\d\\\\.]+.*\\n', 'm');\n\n  Parser.prototype.PATTERN_LEADING_COMMENTS = new Pattern('^(\\\\#.*?\\n)+', 'm');\n\n  Parser.prototype.PATTERN_DOCUMENT_MARKER_START = new Pattern('^\\\\-\\\\-\\\\-.*?\\n', 'm');\n\n  Parser.prototype.PATTERN_DOCUMENT_MARKER_END = new Pattern('^\\\\.\\\\.\\\\.\\\\s*$', 'm');\n\n  Parser.prototype.PATTERN_FOLDED_SCALAR_BY_INDENTATION = {};\n\n  Parser.prototype.CONTEXT_NONE = 0;\n\n  Parser.prototype.CONTEXT_SEQUENCE = 1;\n\n  Parser.prototype.CONTEXT_MAPPING = 2;\n\n  function Parser(offset) {\n    this.offset = offset != null ? offset : 0;\n    this.lines = [];\n    this.currentLineNb = -1;\n    this.currentLine = '';\n    this.refs = {};\n  }\n\n  Parser.prototype.parse = function(value, exceptionOnInvalidType, objectDecoder) {\n    var alias, allowOverwrite, block, c, context, data, e, first, i, indent, isRef, j, k, key, l, lastKey, len, len1, len2, len3, lineCount, m, matches, mergeNode, n, name, parsed, parsedItem, parser, ref, ref1, ref2, refName, refValue, val, values;\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    this.currentLineNb = -1;\n    this.currentLine = '';\n    this.lines = this.cleanup(value).split(\"\\n\");\n    data = null;\n    context = this.CONTEXT_NONE;\n    allowOverwrite = false;\n    while (this.moveToNextLine()) {\n      if (this.isCurrentLineEmpty()) {\n        continue;\n      }\n      if (\"\\t\" === this.currentLine[0]) {\n        throw new ParseException('A YAML file cannot contain tabs as indentation.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n      isRef = mergeNode = false;\n      if (values = this.PATTERN_SEQUENCE_ITEM.exec(this.currentLine)) {\n        if (this.CONTEXT_MAPPING === context) {\n          throw new ParseException('You cannot define a sequence item when in a mapping');\n        }\n        context = this.CONTEXT_SEQUENCE;\n        if (data == null) {\n          data = [];\n        }\n        if ((values.value != null) && (matches = this.PATTERN_ANCHOR_VALUE.exec(values.value))) {\n          isRef = matches.ref;\n          values.value = matches.value;\n        }\n        if (!(values.value != null) || '' === Utils.trim(values.value, ' ') || Utils.ltrim(values.value, ' ').indexOf('#') === 0) {\n          if (this.currentLineNb < this.lines.length - 1 && !this.isNextLineUnIndentedCollection()) {\n            c = this.getRealCurrentLineNb() + 1;\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            data.push(parser.parse(this.getNextEmbedBlock(null, true), exceptionOnInvalidType, objectDecoder));\n          } else {\n            data.push(null);\n          }\n        } else {\n          if (((ref = values.leadspaces) != null ? ref.length : void 0) && (matches = this.PATTERN_COMPACT_NOTATION.exec(values.value))) {\n            c = this.getRealCurrentLineNb();\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            block = values.value;\n            indent = this.getCurrentLineIndentation();\n            if (this.isNextLineIndented(false)) {\n              block += \"\\n\" + this.getNextEmbedBlock(indent + values.leadspaces.length + 1, true);\n            }\n            data.push(parser.parse(block, exceptionOnInvalidType, objectDecoder));\n          } else {\n            data.push(this.parseValue(values.value, exceptionOnInvalidType, objectDecoder));\n          }\n        }\n      } else if ((values = this.PATTERN_MAPPING_ITEM.exec(this.currentLine)) && values.key.indexOf(' #') === -1) {\n        if (this.CONTEXT_SEQUENCE === context) {\n          throw new ParseException('You cannot define a mapping item when in a sequence');\n        }\n        context = this.CONTEXT_MAPPING;\n        if (data == null) {\n          data = {};\n        }\n        Inline.configure(exceptionOnInvalidType, objectDecoder);\n        try {\n          key = Inline.parseScalar(values.key);\n        } catch (error) {\n          e = error;\n          e.parsedLine = this.getRealCurrentLineNb() + 1;\n          e.snippet = this.currentLine;\n          throw e;\n        }\n        if ('<<' === key) {\n          mergeNode = true;\n          allowOverwrite = true;\n          if (((ref1 = values.value) != null ? ref1.indexOf('*') : void 0) === 0) {\n            refName = values.value.slice(1);\n            if (this.refs[refName] == null) {\n              throw new ParseException('Reference \"' + refName + '\" does not exist.', this.getRealCurrentLineNb() + 1, this.currentLine);\n            }\n            refValue = this.refs[refName];\n            if (typeof refValue !== 'object') {\n              throw new ParseException('YAML merge keys used with a scalar value instead of an object.', this.getRealCurrentLineNb() + 1, this.currentLine);\n            }\n            if (refValue instanceof Array) {\n              for (i = j = 0, len = refValue.length; j < len; i = ++j) {\n                value = refValue[i];\n                if (data[name = String(i)] == null) {\n                  data[name] = value;\n                }\n              }\n            } else {\n              for (key in refValue) {\n                value = refValue[key];\n                if (data[key] == null) {\n                  data[key] = value;\n                }\n              }\n            }\n          } else {\n            if ((values.value != null) && values.value !== '') {\n              value = values.value;\n            } else {\n              value = this.getNextEmbedBlock();\n            }\n            c = this.getRealCurrentLineNb() + 1;\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            parsed = parser.parse(value, exceptionOnInvalidType);\n            if (typeof parsed !== 'object') {\n              throw new ParseException('YAML merge keys used with a scalar value instead of an object.', this.getRealCurrentLineNb() + 1, this.currentLine);\n            }\n            if (parsed instanceof Array) {\n              for (l = 0, len1 = parsed.length; l < len1; l++) {\n                parsedItem = parsed[l];\n                if (typeof parsedItem !== 'object') {\n                  throw new ParseException('Merge items must be objects.', this.getRealCurrentLineNb() + 1, parsedItem);\n                }\n                if (parsedItem instanceof Array) {\n                  for (i = m = 0, len2 = parsedItem.length; m < len2; i = ++m) {\n                    value = parsedItem[i];\n                    k = String(i);\n                    if (!data.hasOwnProperty(k)) {\n                      data[k] = value;\n                    }\n                  }\n                } else {\n                  for (key in parsedItem) {\n                    value = parsedItem[key];\n                    if (!data.hasOwnProperty(key)) {\n                      data[key] = value;\n                    }\n                  }\n                }\n              }\n            } else {\n              for (key in parsed) {\n                value = parsed[key];\n                if (!data.hasOwnProperty(key)) {\n                  data[key] = value;\n                }\n              }\n            }\n          }\n        } else if ((values.value != null) && (matches = this.PATTERN_ANCHOR_VALUE.exec(values.value))) {\n          isRef = matches.ref;\n          values.value = matches.value;\n        }\n        if (mergeNode) {\n\n        } else if (!(values.value != null) || '' === Utils.trim(values.value, ' ') || Utils.ltrim(values.value, ' ').indexOf('#') === 0) {\n          if (!(this.isNextLineIndented()) && !(this.isNextLineUnIndentedCollection())) {\n            if (allowOverwrite || data[key] === void 0) {\n              data[key] = null;\n            }\n          } else {\n            c = this.getRealCurrentLineNb() + 1;\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            val = parser.parse(this.getNextEmbedBlock(), exceptionOnInvalidType, objectDecoder);\n            if (allowOverwrite || data[key] === void 0) {\n              data[key] = val;\n            }\n          }\n        } else {\n          val = this.parseValue(values.value, exceptionOnInvalidType, objectDecoder);\n          if (allowOverwrite || data[key] === void 0) {\n            data[key] = val;\n          }\n        }\n      } else {\n        lineCount = this.lines.length;\n        if (1 === lineCount || (2 === lineCount && Utils.isEmpty(this.lines[1]))) {\n          try {\n            value = Inline.parse(this.lines[0], exceptionOnInvalidType, objectDecoder);\n          } catch (error) {\n            e = error;\n            e.parsedLine = this.getRealCurrentLineNb() + 1;\n            e.snippet = this.currentLine;\n            throw e;\n          }\n          if (typeof value === 'object') {\n            if (value instanceof Array) {\n              first = value[0];\n            } else {\n              for (key in value) {\n                first = value[key];\n                break;\n              }\n            }\n            if (typeof first === 'string' && first.indexOf('*') === 0) {\n              data = [];\n              for (n = 0, len3 = value.length; n < len3; n++) {\n                alias = value[n];\n                data.push(this.refs[alias.slice(1)]);\n              }\n              value = data;\n            }\n          }\n          return value;\n        } else if ((ref2 = Utils.ltrim(value).charAt(0)) === '[' || ref2 === '{') {\n          try {\n            return Inline.parse(value, exceptionOnInvalidType, objectDecoder);\n          } catch (error) {\n            e = error;\n            e.parsedLine = this.getRealCurrentLineNb() + 1;\n            e.snippet = this.currentLine;\n            throw e;\n          }\n        }\n        throw new ParseException('Unable to parse.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n      if (isRef) {\n        if (data instanceof Array) {\n          this.refs[isRef] = data[data.length - 1];\n        } else {\n          lastKey = null;\n          for (key in data) {\n            lastKey = key;\n          }\n          this.refs[isRef] = data[lastKey];\n        }\n      }\n    }\n    if (Utils.isEmpty(data)) {\n      return null;\n    } else {\n      return data;\n    }\n  };\n\n  Parser.prototype.getRealCurrentLineNb = function() {\n    return this.currentLineNb + this.offset;\n  };\n\n  Parser.prototype.getCurrentLineIndentation = function() {\n    return this.currentLine.length - Utils.ltrim(this.currentLine, ' ').length;\n  };\n\n  Parser.prototype.getNextEmbedBlock = function(indentation, includeUnindentedCollection) {\n    var data, indent, isItUnindentedCollection, newIndent, removeComments, removeCommentsPattern, unindentedEmbedBlock;\n    if (indentation == null) {\n      indentation = null;\n    }\n    if (includeUnindentedCollection == null) {\n      includeUnindentedCollection = false;\n    }\n    this.moveToNextLine();\n    if (indentation == null) {\n      newIndent = this.getCurrentLineIndentation();\n      unindentedEmbedBlock = this.isStringUnIndentedCollectionItem(this.currentLine);\n      if (!(this.isCurrentLineEmpty()) && 0 === newIndent && !unindentedEmbedBlock) {\n        throw new ParseException('Indentation problem.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n    } else {\n      newIndent = indentation;\n    }\n    data = [this.currentLine.slice(newIndent)];\n    if (!includeUnindentedCollection) {\n      isItUnindentedCollection = this.isStringUnIndentedCollectionItem(this.currentLine);\n    }\n    removeCommentsPattern = this.PATTERN_FOLDED_SCALAR_END;\n    removeComments = !removeCommentsPattern.test(this.currentLine);\n    while (this.moveToNextLine()) {\n      indent = this.getCurrentLineIndentation();\n      if (indent === newIndent) {\n        removeComments = !removeCommentsPattern.test(this.currentLine);\n      }\n      if (removeComments && this.isCurrentLineComment()) {\n        continue;\n      }\n      if (this.isCurrentLineBlank()) {\n        data.push(this.currentLine.slice(newIndent));\n        continue;\n      }\n      if (isItUnindentedCollection && !this.isStringUnIndentedCollectionItem(this.currentLine) && indent === newIndent) {\n        this.moveToPreviousLine();\n        break;\n      }\n      if (indent >= newIndent) {\n        data.push(this.currentLine.slice(newIndent));\n      } else if (Utils.ltrim(this.currentLine).charAt(0) === '#') {\n\n      } else if (0 === indent) {\n        this.moveToPreviousLine();\n        break;\n      } else {\n        throw new ParseException('Indentation problem.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n    }\n    return data.join(\"\\n\");\n  };\n\n  Parser.prototype.moveToNextLine = function() {\n    if (this.currentLineNb >= this.lines.length - 1) {\n      return false;\n    }\n    this.currentLine = this.lines[++this.currentLineNb];\n    return true;\n  };\n\n  Parser.prototype.moveToPreviousLine = function() {\n    this.currentLine = this.lines[--this.currentLineNb];\n  };\n\n  Parser.prototype.parseValue = function(value, exceptionOnInvalidType, objectDecoder) {\n    var e, foldedIndent, matches, modifiers, pos, ref, ref1, val;\n    if (0 === value.indexOf('*')) {\n      pos = value.indexOf('#');\n      if (pos !== -1) {\n        value = value.substr(1, pos - 2);\n      } else {\n        value = value.slice(1);\n      }\n      if (this.refs[value] === void 0) {\n        throw new ParseException('Reference \"' + value + '\" does not exist.', this.currentLine);\n      }\n      return this.refs[value];\n    }\n    if (matches = this.PATTERN_FOLDED_SCALAR_ALL.exec(value)) {\n      modifiers = (ref = matches.modifiers) != null ? ref : '';\n      foldedIndent = Math.abs(parseInt(modifiers));\n      if (isNaN(foldedIndent)) {\n        foldedIndent = 0;\n      }\n      val = this.parseFoldedScalar(matches.separator, this.PATTERN_DECIMAL.replace(modifiers, ''), foldedIndent);\n      if (matches.type != null) {\n        Inline.configure(exceptionOnInvalidType, objectDecoder);\n        return Inline.parseScalar(matches.type + ' ' + val);\n      } else {\n        return val;\n      }\n    }\n    if ((ref1 = value.charAt(0)) === '[' || ref1 === '{' || ref1 === '\"' || ref1 === \"'\") {\n      while (true) {\n        try {\n          return Inline.parse(value, exceptionOnInvalidType, objectDecoder);\n        } catch (error) {\n          e = error;\n          if (e instanceof ParseMore && this.moveToNextLine()) {\n            value += \"\\n\" + Utils.trim(this.currentLine, ' ');\n          } else {\n            e.parsedLine = this.getRealCurrentLineNb() + 1;\n            e.snippet = this.currentLine;\n            throw e;\n          }\n        }\n      }\n    } else {\n      if (this.isNextLineIndented()) {\n        value += \"\\n\" + this.getNextEmbedBlock();\n      }\n      return Inline.parse(value, exceptionOnInvalidType, objectDecoder);\n    }\n  };\n\n  Parser.prototype.parseFoldedScalar = function(separator, indicator, indentation) {\n    var isCurrentLineBlank, j, len, line, matches, newText, notEOF, pattern, ref, text;\n    if (indicator == null) {\n      indicator = '';\n    }\n    if (indentation == null) {\n      indentation = 0;\n    }\n    notEOF = this.moveToNextLine();\n    if (!notEOF) {\n      return '';\n    }\n    isCurrentLineBlank = this.isCurrentLineBlank();\n    text = '';\n    while (notEOF && isCurrentLineBlank) {\n      if (notEOF = this.moveToNextLine()) {\n        text += \"\\n\";\n        isCurrentLineBlank = this.isCurrentLineBlank();\n      }\n    }\n    if (0 === indentation) {\n      if (matches = this.PATTERN_INDENT_SPACES.exec(this.currentLine)) {\n        indentation = matches[0].length;\n      }\n    }\n    if (indentation > 0) {\n      pattern = this.PATTERN_FOLDED_SCALAR_BY_INDENTATION[indentation];\n      if (pattern == null) {\n        pattern = new Pattern('^ {' + indentation + '}(.*)$');\n        Parser.prototype.PATTERN_FOLDED_SCALAR_BY_INDENTATION[indentation] = pattern;\n      }\n      while (notEOF && (isCurrentLineBlank || (matches = pattern.exec(this.currentLine)))) {\n        if (isCurrentLineBlank) {\n          text += this.currentLine.slice(indentation);\n        } else {\n          text += matches[1];\n        }\n        if (notEOF = this.moveToNextLine()) {\n          text += \"\\n\";\n          isCurrentLineBlank = this.isCurrentLineBlank();\n        }\n      }\n    } else if (notEOF) {\n      text += \"\\n\";\n    }\n    if (notEOF) {\n      this.moveToPreviousLine();\n    }\n    if ('>' === separator) {\n      newText = '';\n      ref = text.split(\"\\n\");\n      for (j = 0, len = ref.length; j < len; j++) {\n        line = ref[j];\n        if (line.length === 0 || line.charAt(0) === ' ') {\n          newText = Utils.rtrim(newText, ' ') + line + \"\\n\";\n        } else {\n          newText += line + ' ';\n        }\n      }\n      text = newText;\n    }\n    if ('+' !== indicator) {\n      text = Utils.rtrim(text);\n    }\n    if ('' === indicator) {\n      text = this.PATTERN_TRAILING_LINES.replace(text, \"\\n\");\n    } else if ('-' === indicator) {\n      text = this.PATTERN_TRAILING_LINES.replace(text, '');\n    }\n    return text;\n  };\n\n  Parser.prototype.isNextLineIndented = function(ignoreComments) {\n    var EOF, currentIndentation, ret;\n    if (ignoreComments == null) {\n      ignoreComments = true;\n    }\n    currentIndentation = this.getCurrentLineIndentation();\n    EOF = !this.moveToNextLine();\n    if (ignoreComments) {\n      while (!EOF && this.isCurrentLineEmpty()) {\n        EOF = !this.moveToNextLine();\n      }\n    } else {\n      while (!EOF && this.isCurrentLineBlank()) {\n        EOF = !this.moveToNextLine();\n      }\n    }\n    if (EOF) {\n      return false;\n    }\n    ret = false;\n    if (this.getCurrentLineIndentation() > currentIndentation) {\n      ret = true;\n    }\n    this.moveToPreviousLine();\n    return ret;\n  };\n\n  Parser.prototype.isCurrentLineEmpty = function() {\n    var trimmedLine;\n    trimmedLine = Utils.trim(this.currentLine, ' ');\n    return trimmedLine.length === 0 || trimmedLine.charAt(0) === '#';\n  };\n\n  Parser.prototype.isCurrentLineBlank = function() {\n    return '' === Utils.trim(this.currentLine, ' ');\n  };\n\n  Parser.prototype.isCurrentLineComment = function() {\n    var ltrimmedLine;\n    ltrimmedLine = Utils.ltrim(this.currentLine, ' ');\n    return ltrimmedLine.charAt(0) === '#';\n  };\n\n  Parser.prototype.cleanup = function(value) {\n    var count, i, indent, j, l, len, len1, line, lines, ref, ref1, ref2, smallestIndent, trimmedValue;\n    if (value.indexOf(\"\\r\") !== -1) {\n      value = value.split(\"\\r\\n\").join(\"\\n\").split(\"\\r\").join(\"\\n\");\n    }\n    count = 0;\n    ref = this.PATTERN_YAML_HEADER.replaceAll(value, ''), value = ref[0], count = ref[1];\n    this.offset += count;\n    ref1 = this.PATTERN_LEADING_COMMENTS.replaceAll(value, '', 1), trimmedValue = ref1[0], count = ref1[1];\n    if (count === 1) {\n      this.offset += Utils.subStrCount(value, \"\\n\") - Utils.subStrCount(trimmedValue, \"\\n\");\n      value = trimmedValue;\n    }\n    ref2 = this.PATTERN_DOCUMENT_MARKER_START.replaceAll(value, '', 1), trimmedValue = ref2[0], count = ref2[1];\n    if (count === 1) {\n      this.offset += Utils.subStrCount(value, \"\\n\") - Utils.subStrCount(trimmedValue, \"\\n\");\n      value = trimmedValue;\n      value = this.PATTERN_DOCUMENT_MARKER_END.replace(value, '');\n    }\n    lines = value.split(\"\\n\");\n    smallestIndent = -1;\n    for (j = 0, len = lines.length; j < len; j++) {\n      line = lines[j];\n      if (Utils.trim(line, ' ').length === 0) {\n        continue;\n      }\n      indent = line.length - Utils.ltrim(line).length;\n      if (smallestIndent === -1 || indent < smallestIndent) {\n        smallestIndent = indent;\n      }\n    }\n    if (smallestIndent > 0) {\n      for (i = l = 0, len1 = lines.length; l < len1; i = ++l) {\n        line = lines[i];\n        lines[i] = line.slice(smallestIndent);\n      }\n      value = lines.join(\"\\n\");\n    }\n    return value;\n  };\n\n  Parser.prototype.isNextLineUnIndentedCollection = function(currentIndentation) {\n    var notEOF, ret;\n    if (currentIndentation == null) {\n      currentIndentation = null;\n    }\n    if (currentIndentation == null) {\n      currentIndentation = this.getCurrentLineIndentation();\n    }\n    notEOF = this.moveToNextLine();\n    while (notEOF && this.isCurrentLineEmpty()) {\n      notEOF = this.moveToNextLine();\n    }\n    if (false === notEOF) {\n      return false;\n    }\n    ret = false;\n    if (this.getCurrentLineIndentation() === currentIndentation && this.isStringUnIndentedCollectionItem(this.currentLine)) {\n      ret = true;\n    }\n    this.moveToPreviousLine();\n    return ret;\n  };\n\n  Parser.prototype.isStringUnIndentedCollectionItem = function() {\n    return this.currentLine === '-' || this.currentLine.slice(0, 2) === '- ';\n  };\n\n  return Parser;\n\n})();\n\nmodule.exports = Parser;\n","// Generated by CoffeeScript 1.12.4\nvar Pattern;\n\nPattern = (function() {\n  Pattern.prototype.regex = null;\n\n  Pattern.prototype.rawRegex = null;\n\n  Pattern.prototype.cleanedRegex = null;\n\n  Pattern.prototype.mapping = null;\n\n  function Pattern(rawRegex, modifiers) {\n    var _char, capturingBracketNumber, cleanedRegex, i, len, mapping, name, part, subChar;\n    if (modifiers == null) {\n      modifiers = '';\n    }\n    cleanedRegex = '';\n    len = rawRegex.length;\n    mapping = null;\n    capturingBracketNumber = 0;\n    i = 0;\n    while (i < len) {\n      _char = rawRegex.charAt(i);\n      if (_char === '\\\\') {\n        cleanedRegex += rawRegex.slice(i, +(i + 1) + 1 || 9e9);\n        i++;\n      } else if (_char === '(') {\n        if (i < len - 2) {\n          part = rawRegex.slice(i, +(i + 2) + 1 || 9e9);\n          if (part === '(?:') {\n            i += 2;\n            cleanedRegex += part;\n          } else if (part === '(?<') {\n            capturingBracketNumber++;\n            i += 2;\n            name = '';\n            while (i + 1 < len) {\n              subChar = rawRegex.charAt(i + 1);\n              if (subChar === '>') {\n                cleanedRegex += '(';\n                i++;\n                if (name.length > 0) {\n                  if (mapping == null) {\n                    mapping = {};\n                  }\n                  mapping[name] = capturingBracketNumber;\n                }\n                break;\n              } else {\n                name += subChar;\n              }\n              i++;\n            }\n          } else {\n            cleanedRegex += _char;\n            capturingBracketNumber++;\n          }\n        } else {\n          cleanedRegex += _char;\n        }\n      } else {\n        cleanedRegex += _char;\n      }\n      i++;\n    }\n    this.rawRegex = rawRegex;\n    this.cleanedRegex = cleanedRegex;\n    this.regex = new RegExp(this.cleanedRegex, 'g' + modifiers.replace('g', ''));\n    this.mapping = mapping;\n  }\n\n  Pattern.prototype.exec = function(str) {\n    var index, matches, name, ref;\n    this.regex.lastIndex = 0;\n    matches = this.regex.exec(str);\n    if (matches == null) {\n      return null;\n    }\n    if (this.mapping != null) {\n      ref = this.mapping;\n      for (name in ref) {\n        index = ref[name];\n        matches[name] = matches[index];\n      }\n    }\n    return matches;\n  };\n\n  Pattern.prototype.test = function(str) {\n    this.regex.lastIndex = 0;\n    return this.regex.test(str);\n  };\n\n  Pattern.prototype.replace = function(str, replacement) {\n    this.regex.lastIndex = 0;\n    return str.replace(this.regex, replacement);\n  };\n\n  Pattern.prototype.replaceAll = function(str, replacement, limit) {\n    var count;\n    if (limit == null) {\n      limit = 0;\n    }\n    this.regex.lastIndex = 0;\n    count = 0;\n    while (this.regex.test(str) && (limit === 0 || count < limit)) {\n      this.regex.lastIndex = 0;\n      str = str.replace(this.regex, replacement);\n      count++;\n    }\n    return [str, count];\n  };\n\n  return Pattern;\n\n})();\n\nmodule.exports = Pattern;\n","// Generated by CoffeeScript 1.12.4\nvar Pattern, Unescaper, Utils;\n\nUtils = require('./Utils');\n\nPattern = require('./Pattern');\n\nUnescaper = (function() {\n  function Unescaper() {}\n\n  Unescaper.PATTERN_ESCAPED_CHARACTER = new Pattern('\\\\\\\\([0abt\\tnvfre \"\\\\/\\\\\\\\N_LP]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})');\n\n  Unescaper.unescapeSingleQuotedString = function(value) {\n    return value.replace(/\\'\\'/g, '\\'');\n  };\n\n  Unescaper.unescapeDoubleQuotedString = function(value) {\n    if (this._unescapeCallback == null) {\n      this._unescapeCallback = (function(_this) {\n        return function(str) {\n          return _this.unescapeCharacter(str);\n        };\n      })(this);\n    }\n    return this.PATTERN_ESCAPED_CHARACTER.replace(value, this._unescapeCallback);\n  };\n\n  Unescaper.unescapeCharacter = function(value) {\n    var ch;\n    ch = String.fromCharCode;\n    switch (value.charAt(1)) {\n      case '0':\n        return ch(0);\n      case 'a':\n        return ch(7);\n      case 'b':\n        return ch(8);\n      case 't':\n        return \"\\t\";\n      case \"\\t\":\n        return \"\\t\";\n      case 'n':\n        return \"\\n\";\n      case 'v':\n        return ch(11);\n      case 'f':\n        return ch(12);\n      case 'r':\n        return ch(13);\n      case 'e':\n        return ch(27);\n      case ' ':\n        return ' ';\n      case '\"':\n        return '\"';\n      case '/':\n        return '/';\n      case '\\\\':\n        return '\\\\';\n      case 'N':\n        return ch(0x0085);\n      case '_':\n        return ch(0x00A0);\n      case 'L':\n        return ch(0x2028);\n      case 'P':\n        return ch(0x2029);\n      case 'x':\n        return Utils.utf8chr(Utils.hexDec(value.substr(2, 2)));\n      case 'u':\n        return Utils.utf8chr(Utils.hexDec(value.substr(2, 4)));\n      case 'U':\n        return Utils.utf8chr(Utils.hexDec(value.substr(2, 8)));\n      default:\n        return '';\n    }\n  };\n\n  return Unescaper;\n\n})();\n\nmodule.exports = Unescaper;\n","// Generated by CoffeeScript 1.12.4\nvar Pattern, Utils,\n  hasProp = {}.hasOwnProperty;\n\nPattern = require('./Pattern');\n\nUtils = (function() {\n  function Utils() {}\n\n  Utils.REGEX_LEFT_TRIM_BY_CHAR = {};\n\n  Utils.REGEX_RIGHT_TRIM_BY_CHAR = {};\n\n  Utils.REGEX_SPACES = /\\s+/g;\n\n  Utils.REGEX_DIGITS = /^\\d+$/;\n\n  Utils.REGEX_OCTAL = /[^0-7]/gi;\n\n  Utils.REGEX_HEXADECIMAL = /[^a-f0-9]/gi;\n\n  Utils.PATTERN_DATE = new Pattern('^' + '(?<year>[0-9][0-9][0-9][0-9])' + '-(?<month>[0-9][0-9]?)' + '-(?<day>[0-9][0-9]?)' + '(?:(?:[Tt]|[ \\t]+)' + '(?<hour>[0-9][0-9]?)' + ':(?<minute>[0-9][0-9])' + ':(?<second>[0-9][0-9])' + '(?:\\.(?<fraction>[0-9]*))?' + '(?:[ \\t]*(?<tz>Z|(?<tz_sign>[-+])(?<tz_hour>[0-9][0-9]?)' + '(?::(?<tz_minute>[0-9][0-9]))?))?)?' + '$', 'i');\n\n  Utils.LOCAL_TIMEZONE_OFFSET = new Date().getTimezoneOffset() * 60 * 1000;\n\n  Utils.trim = function(str, _char) {\n    var regexLeft, regexRight;\n    if (_char == null) {\n      _char = '\\\\s';\n    }\n    regexLeft = this.REGEX_LEFT_TRIM_BY_CHAR[_char];\n    if (regexLeft == null) {\n      this.REGEX_LEFT_TRIM_BY_CHAR[_char] = regexLeft = new RegExp('^' + _char + '' + _char + '*');\n    }\n    regexLeft.lastIndex = 0;\n    regexRight = this.REGEX_RIGHT_TRIM_BY_CHAR[_char];\n    if (regexRight == null) {\n      this.REGEX_RIGHT_TRIM_BY_CHAR[_char] = regexRight = new RegExp(_char + '' + _char + '*$');\n    }\n    regexRight.lastIndex = 0;\n    return str.replace(regexLeft, '').replace(regexRight, '');\n  };\n\n  Utils.ltrim = function(str, _char) {\n    var regexLeft;\n    if (_char == null) {\n      _char = '\\\\s';\n    }\n    regexLeft = this.REGEX_LEFT_TRIM_BY_CHAR[_char];\n    if (regexLeft == null) {\n      this.REGEX_LEFT_TRIM_BY_CHAR[_char] = regexLeft = new RegExp('^' + _char + '' + _char + '*');\n    }\n    regexLeft.lastIndex = 0;\n    return str.replace(regexLeft, '');\n  };\n\n  Utils.rtrim = function(str, _char) {\n    var regexRight;\n    if (_char == null) {\n      _char = '\\\\s';\n    }\n    regexRight = this.REGEX_RIGHT_TRIM_BY_CHAR[_char];\n    if (regexRight == null) {\n      this.REGEX_RIGHT_TRIM_BY_CHAR[_char] = regexRight = new RegExp(_char + '' + _char + '*$');\n    }\n    regexRight.lastIndex = 0;\n    return str.replace(regexRight, '');\n  };\n\n  Utils.isEmpty = function(value) {\n    return !value || value === '' || value === '0' || (value instanceof Array && value.length === 0) || this.isEmptyObject(value);\n  };\n\n  Utils.isEmptyObject = function(value) {\n    var k;\n    return value instanceof Object && ((function() {\n      var results;\n      results = [];\n      for (k in value) {\n        if (!hasProp.call(value, k)) continue;\n        results.push(k);\n      }\n      return results;\n    })()).length === 0;\n  };\n\n  Utils.subStrCount = function(string, subString, start, length) {\n    var c, i, j, len, ref, sublen;\n    c = 0;\n    string = '' + string;\n    subString = '' + subString;\n    if (start != null) {\n      string = string.slice(start);\n    }\n    if (length != null) {\n      string = string.slice(0, length);\n    }\n    len = string.length;\n    sublen = subString.length;\n    for (i = j = 0, ref = len; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      if (subString === string.slice(i, sublen)) {\n        c++;\n        i += sublen - 1;\n      }\n    }\n    return c;\n  };\n\n  Utils.isDigits = function(input) {\n    this.REGEX_DIGITS.lastIndex = 0;\n    return this.REGEX_DIGITS.test(input);\n  };\n\n  Utils.octDec = function(input) {\n    this.REGEX_OCTAL.lastIndex = 0;\n    return parseInt((input + '').replace(this.REGEX_OCTAL, ''), 8);\n  };\n\n  Utils.hexDec = function(input) {\n    this.REGEX_HEXADECIMAL.lastIndex = 0;\n    input = this.trim(input);\n    if ((input + '').slice(0, 2) === '0x') {\n      input = (input + '').slice(2);\n    }\n    return parseInt((input + '').replace(this.REGEX_HEXADECIMAL, ''), 16);\n  };\n\n  Utils.utf8chr = function(c) {\n    var ch;\n    ch = String.fromCharCode;\n    if (0x80 > (c %= 0x200000)) {\n      return ch(c);\n    }\n    if (0x800 > c) {\n      return ch(0xC0 | c >> 6) + ch(0x80 | c & 0x3F);\n    }\n    if (0x10000 > c) {\n      return ch(0xE0 | c >> 12) + ch(0x80 | c >> 6 & 0x3F) + ch(0x80 | c & 0x3F);\n    }\n    return ch(0xF0 | c >> 18) + ch(0x80 | c >> 12 & 0x3F) + ch(0x80 | c >> 6 & 0x3F) + ch(0x80 | c & 0x3F);\n  };\n\n  Utils.parseBoolean = function(input, strict) {\n    var lowerInput;\n    if (strict == null) {\n      strict = true;\n    }\n    if (typeof input === 'string') {\n      lowerInput = input.toLowerCase();\n      if (!strict) {\n        if (lowerInput === 'no') {\n          return false;\n        }\n      }\n      if (lowerInput === '0') {\n        return false;\n      }\n      if (lowerInput === 'false') {\n        return false;\n      }\n      if (lowerInput === '') {\n        return false;\n      }\n      return true;\n    }\n    return !!input;\n  };\n\n  Utils.isNumeric = function(input) {\n    this.REGEX_SPACES.lastIndex = 0;\n    return typeof input === 'number' || typeof input === 'string' && !isNaN(input) && input.replace(this.REGEX_SPACES, '') !== '';\n  };\n\n  Utils.stringToDate = function(str) {\n    var date, day, fraction, hour, info, minute, month, second, tz_hour, tz_minute, tz_offset, year;\n    if (!(str != null ? str.length : void 0)) {\n      return null;\n    }\n    info = this.PATTERN_DATE.exec(str);\n    if (!info) {\n      return null;\n    }\n    year = parseInt(info.year, 10);\n    month = parseInt(info.month, 10) - 1;\n    day = parseInt(info.day, 10);\n    if (info.hour == null) {\n      date = new Date(Date.UTC(year, month, day));\n      return date;\n    }\n    hour = parseInt(info.hour, 10);\n    minute = parseInt(info.minute, 10);\n    second = parseInt(info.second, 10);\n    if (info.fraction != null) {\n      fraction = info.fraction.slice(0, 3);\n      while (fraction.length < 3) {\n        fraction += '0';\n      }\n      fraction = parseInt(fraction, 10);\n    } else {\n      fraction = 0;\n    }\n    if (info.tz != null) {\n      tz_hour = parseInt(info.tz_hour, 10);\n      if (info.tz_minute != null) {\n        tz_minute = parseInt(info.tz_minute, 10);\n      } else {\n        tz_minute = 0;\n      }\n      tz_offset = (tz_hour * 60 + tz_minute) * 60000;\n      if ('-' === info.tz_sign) {\n        tz_offset *= -1;\n      }\n    }\n    date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n    if (tz_offset) {\n      date.setTime(date.getTime() - tz_offset);\n    }\n    return date;\n  };\n\n  Utils.strRepeat = function(str, number) {\n    var i, res;\n    res = '';\n    i = 0;\n    while (i < number) {\n      res += str;\n      i++;\n    }\n    return res;\n  };\n\n  Utils.getStringFromFile = function(path, callback) {\n    var data, fs, j, len1, name, ref, req, xhr;\n    if (callback == null) {\n      callback = null;\n    }\n    xhr = null;\n    if (typeof window !== \"undefined\" && window !== null) {\n      if (window.XMLHttpRequest) {\n        xhr = new XMLHttpRequest();\n      } else if (window.ActiveXObject) {\n        ref = [\"Msxml2.XMLHTTP.6.0\", \"Msxml2.XMLHTTP.3.0\", \"Msxml2.XMLHTTP\", \"Microsoft.XMLHTTP\"];\n        for (j = 0, len1 = ref.length; j < len1; j++) {\n          name = ref[j];\n          try {\n            xhr = new ActiveXObject(name);\n          } catch (error) {}\n        }\n      }\n    }\n    if (xhr != null) {\n      if (callback != null) {\n        xhr.onreadystatechange = function() {\n          if (xhr.readyState === 4) {\n            if (xhr.status === 200 || xhr.status === 0) {\n              return callback(xhr.responseText);\n            } else {\n              return callback(null);\n            }\n          }\n        };\n        xhr.open('GET', path, true);\n        return xhr.send(null);\n      } else {\n        xhr.open('GET', path, false);\n        xhr.send(null);\n        if (xhr.status === 200 || xhr.status === 0) {\n          return xhr.responseText;\n        }\n        return null;\n      }\n    } else {\n      req = require;\n      fs = req('fs');\n      if (callback != null) {\n        return fs.readFile(path, function(err, data) {\n          if (err) {\n            return callback(null);\n          } else {\n            return callback(String(data));\n          }\n        });\n      } else {\n        data = fs.readFileSync(path);\n        if (data != null) {\n          return String(data);\n        }\n        return null;\n      }\n    }\n  };\n\n  return Utils;\n\n})();\n\nmodule.exports = Utils;\n","// Generated by CoffeeScript 1.12.4\nvar Dumper, Parser, Utils, Yaml;\n\nParser = require('./Parser');\n\nDumper = require('./Dumper');\n\nUtils = require('./Utils');\n\nYaml = (function() {\n  function Yaml() {}\n\n  Yaml.parse = function(input, exceptionOnInvalidType, objectDecoder) {\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    return new Parser().parse(input, exceptionOnInvalidType, objectDecoder);\n  };\n\n  Yaml.parseFile = function(path, callback, exceptionOnInvalidType, objectDecoder) {\n    var input;\n    if (callback == null) {\n      callback = null;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    if (callback != null) {\n      return Utils.getStringFromFile(path, (function(_this) {\n        return function(input) {\n          var result;\n          result = null;\n          if (input != null) {\n            result = _this.parse(input, exceptionOnInvalidType, objectDecoder);\n          }\n          callback(result);\n        };\n      })(this));\n    } else {\n      input = Utils.getStringFromFile(path);\n      if (input != null) {\n        return this.parse(input, exceptionOnInvalidType, objectDecoder);\n      }\n      return null;\n    }\n  };\n\n  Yaml.dump = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    var yaml;\n    if (inline == null) {\n      inline = 2;\n    }\n    if (indent == null) {\n      indent = 4;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    yaml = new Dumper();\n    yaml.indentation = indent;\n    return yaml.dump(input, inline, 0, exceptionOnInvalidType, objectEncoder);\n  };\n\n  Yaml.stringify = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    return this.dump(input, inline, indent, exceptionOnInvalidType, objectEncoder);\n  };\n\n  Yaml.load = function(path, callback, exceptionOnInvalidType, objectDecoder) {\n    return this.parseFile(path, callback, exceptionOnInvalidType, objectDecoder);\n  };\n\n  return Yaml;\n\n})();\n\nif (typeof window !== \"undefined\" && window !== null) {\n  window.YAML = Yaml;\n}\n\nif (typeof window === \"undefined\" || window === null) {\n  this.YAML = Yaml;\n}\n\nmodule.exports = Yaml;\n","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Structure replacer visual studio code extension\n * Copyright (C) 2021 Grano22 (BSD3 License)\n * \n * @package StructureReplacerExtension\n * @author Adrian Błasiak <grano22@outlook.com>\n */\n\nimport * as vscode from 'vscode';\nimport StructureDetector from './detector/StructureDetector';\nimport subactionSelector from './gui/dialog/subactionSelector';\nimport items, { ConvertToActionQuickPickItem } from './gui/quickPickMenu/items';\nimport StructuresDefinitionManager from './managers/StructuresDefinitionManager';\nimport ToSQLTableDefinitionStructureConverter from \"./converter/fromCurrLang/ToSQLTableDefinitionStructureConveter\";\nimport ToJSONStructureConverter from './converter/fromCurrLang/ToJSONStructureConverter';\nimport ToYMLStructureConverter from './converter/fromCurrLang/ToYMLStructureConverter';\nimport ToPHPArrayStructureConverter from './converter/fromCurrLang/ToPHPArrayStructureConverter';\nimport SidepanelMenuProivder from './gui/sidepanel/SidepanelMenuProvider';\nimport DataReplacerExtensionFasade from './fasades/DataReplacerExtensionFasade';\nimport ToXMLStructureConverter from './converter/fromCurrLang/ToXMLStructureConverter';\n\nexport async function activate(context: vscode.ExtensionContext) {\n\tconst extensionSettings : ExtensionSettings = vscode.workspace.getConfiguration('vestibule-bs') as ExtensionSettings;\n\tconst structMng = new StructuresDefinitionManager({\n\t\tallowedStructures:[],\n\t\tdisallowedStructures:[],\n\t\tnativeLangConverters:[\n\t\t\tnew ToJSONStructureConverter(),\n\t\t\tnew ToPHPArrayStructureConverter(),\n\t\t\tnew ToYMLStructureConverter(),\n\t\t\tnew ToSQLTableDefinitionStructureConverter(),\n\t\t\tnew ToXMLStructureConverter()\n\t\t]\n\t}),\n\textAccessor = new DataReplacerExtensionFasade(\n\t\tstructMng,\n\t\textensionSettings\n\t);\n\n\tconst disposable : Record<string, any> = {}, sidebarProvider = new SidepanelMenuProivder(context.extensionUri, extAccessor);\n\n\tdisposable[\"SidebarStructuresMenu\"] = vscode.window.registerWebviewViewProvider(SidepanelMenuProivder.viewType, sidebarProvider);\n\n\tdisposable[\"ReplaceDataStruct\"] = vscode.commands.registerCommand('data_replacer.replace_data_structure', () => {\n\t\tvar editor = vscode.window.activeTextEditor;\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar selection = editor.selection;\n\t\tvar selectedAllRange = editor.document.getText(selection);\n\n\t\tif (selectedAllRange.length <= 0) {\n\t\t\tvscode.window.showInformationMessage('Any text required to detect data structure');\n\t\t\treturn;\n\t\t}\n\n\t\tconst structureDetector = new StructureDetector(extensionSettings);\n\t\tconst structureID = structureDetector.detect(selectedAllRange, {\n\t\t\tlanguage: editor.document.languageId\n\t\t});\n\n\t\tif (structureID === '') {\n\t\t\tvscode.window.showErrorMessage('Source structure cannot be matched. ' + structureDetector.reason);\n\t\t\treturn;\n\t\t}\n\n\t\tconst allItems = items as ConvertToActionQuickPickItem[];\n\n\t\tvscode.window.showQuickPick(\n\t\t\tallItems,\n\t\t\t{\n\t\t\t\ttitle: 'Select target structure',\n\t\t\t\tplaceHolder: 'Select a subaction'\n\t\t\t}\n\n\t\t).then(selectedOutputStruct => {\n\t\t\tconst tgStruct = selectedOutputStruct?.id || '';\n\n\t\t\tif(tgStruct === '') {\n\t\t\t\tvscode.window.showInformationMessage(`Target structure is invalid`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*if(tgStruct === structureID) {\n\t\t\t\tvscode.window.showInformationMessage(`Structure cannot be converted due is already ${structureID}`);\n\t\t\t\treturn;\n\t\t\t}*/\n\n\t\t\tconst outputStruct = structMng.convertTo(selectedAllRange, structureID, tgStruct, selectedOutputStruct?.convertionOptions);\n\t\t\tif (structMng.hasErrors) {\n\t\t\t\tvscode.window.showErrorMessage(`Failed to convert from ${structureID} to ${tgStruct} structure type due to ${structMng.errors.join(\"\\n\")}`);\n\t\t\t} else {\n\t\t\t\teditor?.edit(editorBuilder => {\n\t\t\t\t\teditorBuilder.replace(selection, outputStruct);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\tdisposable[\"GenerateFileWithDataStruct\"] = vscode.commands.registerCommand('data_replacer.generate_file_data_structure', () => {\n\t\tvar editor = vscode.window.activeTextEditor;\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar selection = editor.selection;\n\t\tvar selectedAllRange = editor.document.getText(selection);\n\n\t\tif (selectedAllRange.length <= 0) {\n\t\t\tvscode.window.showInformationMessage('Any text required to detect data structure');\n\t\t\treturn;\n\t\t}\n\n\t\tconst structureDetector = new StructureDetector(extensionSettings);\n\t\tconst structureID = structureDetector.detect(selectedAllRange, {\n\t\t\tlanguage: editor.document.languageId\n\t\t});\n\n\t\tif (structureID === '') {\n\t\t\tvscode.window.showErrorMessage('Source structure cannot be matched. ' + structureDetector.reason);\n\t\t\treturn;\n\t\t}\n\n\t\tconst allItems = items as ConvertToActionQuickPickItem[];\n\n\t\tvscode.window.showQuickPick(\n\t\t\tallItems,\n\t\t\t{\n\t\t\t\ttitle: 'Select target structure',\n\t\t\t\tplaceHolder: 'Select a subaction'\n\t\t\t}\n\n\t\t).then(async selectedOutputStruct => {\n\t\t\tconst tgStruct = selectedOutputStruct?.id || '';\n\n\t\t\tif(tgStruct === '') {\n\t\t\t\tvscode.window.showInformationMessage(`Target structure is invalid`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*if(tgStruct === structureID) {\n\t\t\t\tvscode.window.showInformationMessage(`Structure cannot be converted due is already ${structureID}`);\n\t\t\t\treturn;\n\t\t\t}*/\n\n\t\t\tconst outputStruct = structMng.convertTo(selectedAllRange, structureID, tgStruct, selectedOutputStruct?.convertionOptions);\n\t\t\tif (structMng.hasErrors) {\n\t\t\t\tvscode.window.showErrorMessage(`Failed to convert from ${structureID} to ${tgStruct} structure type due to ${structMng.errors.join(\"\\n\")}`);\n\t\t\t} else {\n\t\t\t\tconst newDocTab = await vscode.workspace.openTextDocument({\n\t\t\t\t\tlanguage:selectedOutputStruct?.extension || 'txt',\n\t\t\t\t\tcontent:outputStruct\n\t\t\t\t});\n\t\t\t\tvscode.window.showTextDocument(newDocTab);\n\t\t\t}\n\t\t});\n\t});\n\n\tdisposable['ValidateDataStruct'] = vscode.commands.registerCommand('data_replacer.validate_data_structure', () => {\n\t\tvar editor = vscode.window.activeTextEditor;\n\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar selection = editor.selection;\n\t\tvar selectedAllRange = editor.document.getText(selection);\n\n\t\tif (selectedAllRange.length <= 0) {\n\t\t\tvscode.window.showInformationMessage('Any text required to detect data structure');\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst allItems = items as ConvertToActionQuickPickItem[];\n\n\t\tvscode.window.showQuickPick(\n\t\t\tallItems,\n\t\t\t{\n\t\t\t\ttitle: 'Select target structure',\n\t\t\t\tplaceHolder: 'Select a subaction'\n\t\t\t}\n\n\t\t).then(async selectedValidationTypeStruct => {\n\t\t\tconst tgStruct = selectedValidationTypeStruct?.id || '';\n\n\t\t\tif(tgStruct === '') {\n\t\t\t\tvscode.window.showInformationMessage(`Target structure is invalid`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst tgDefinition = structMng.getDefinition(tgStruct), structValidators = tgDefinition?.validators;\n\t\t\tif(Array.isArray(structValidators)) {\n\t\t\t\tfor (const structValidator of structValidators) {\n\t\t\t\t\tstructValidator.validate(selection);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\tfor (const disposableEvent in disposable) {\n\t\tcontext.subscriptions.push(disposable[disposableEvent]);\n\t}\n}\n\nexport function deactivate() {\n\n}"],"names":["Location","Position","AST","withPositions","withSource","this","prototype","position","parser","lexer","yylloc","first_line","first_column","first_offset","precedence","forEach","list","index","operator","isRightAssociative","swapLocations","target","first","last","loc","start","end","source","_input","substring","offset","resolveLocations","resolvePrecedence","result","buffer","lLevel","rLevel","kind","what","right","parenthesizedExpression","type","left","test","falseExpr","expr","expression","prepare","docs","self","location","args","Array","slice","call","arguments","push","src","prev","shift","node","Error","astNode","Object","create","apply","instance","trailingComments","postBuild","debug","stack","stackUid","split","setTrailingComments","destroy","leadingComments","concat","_docIndex","_docs","length","checkNodes","errors","k","hasOwnProperty","ctor","module","exports","Expr","KIND","extends","shortForm","items","Expression","byref","body","nullable","isStatic","Operation","Statement","children","filter","Boolean","Literal","value","raw","level","variable","Declaration","name","ext","impl","flags","isAnonymous","implements","parseFlags","ConstantStatement","ClassConstant","constants","visibility","uses","Node","Comment","isAbstract","isFinal","Block","Declare","directives","mode","MODE_SHORT","MODE_BLOCK","MODE_NONE","key","expressions","Encapsed","TYPE_STRING","TYPE_SHELL","TYPE_HEREDOC","TYPE_OFFSET","syntax","curly","byRef","unpack","message","token","line","expected","useDie","init","increment","label","after","Identifier","alternate","once","require","variables","Function_","Reference","Name","isRelative","resolution","RELATIVE_NAME","UNQUALIFIED_NAME","QUALIFIED_NAME","FULL_QUALIFIED_NAME","join","withBrackets","includeToken","last_line","column","last_column","ast","constructor","Lookup","isRef","isVariadic","variadic","ParentReference","comments","tokens","PropertyStatement","properties","trueExpr","SelfReference","StaticReference","defaultValue","isDoubleQuote","unicode","trait","method","as","instead","traits","adaptations","catches","always","TypeReference","types","UseItem","alias","TYPE_CONST","TYPE_FUNCTION","combine","to","keys","i","val","bind","isArray","Engine","options","version","parseInt","isNaN","getStringBuffer","write","toString","parseEval","mode_eval","all_tokens","parse","parseCode","filename","tokenGetAll","EOF","names","values","setInput","lex","entry","yytext","Lexer","engine","tok","comment_tokens","asp_tags","short_tags","yyprevcol","keywords","__class__","T_CLASS_C","__trait__","T_TRAIT_C","__function__","T_FUNC_C","__method__","T_METHOD_C","__line__","T_LINE","__file__","T_FILE","__dir__","T_DIR","__namespace__","T_NS_C","exit","T_EXIT","die","function","T_FUNCTION","const","T_CONST","return","T_RETURN","try","T_TRY","catch","T_CATCH","finally","T_FINALLY","throw","T_THROW","if","T_IF","elseif","T_ELSEIF","endif","T_ENDIF","else","T_ELSE","while","T_WHILE","endwhile","T_ENDWHILE","do","T_DO","for","T_FOR","endfor","T_ENDFOR","foreach","T_FOREACH","endforeach","T_ENDFOREACH","declare","T_DECLARE","enddeclare","T_ENDDECLARE","instanceof","T_INSTANCEOF","T_AS","switch","T_SWITCH","endswitch","T_ENDSWITCH","case","T_CASE","default","T_DEFAULT","break","T_BREAK","continue","T_CONTINUE","goto","T_GOTO","echo","T_ECHO","print","T_PRINT","class","T_CLASS","interface","T_INTERFACE","T_TRAIT","T_EXTENDS","T_IMPLEMENTS","new","T_NEW","clone","T_CLONE","var","T_VAR","eval","T_EVAL","include","T_INCLUDE","include_once","T_INCLUDE_ONCE","T_REQUIRE","require_once","T_REQUIRE_ONCE","namespace","T_NAMESPACE","use","T_USE","insteadof","T_INSTEADOF","global","T_GLOBAL","isset","T_ISSET","empty","T_EMPTY","__halt_compiler","T_HALT_COMPILER","static","T_STATIC","abstract","T_ABSTRACT","final","T_FINAL","private","T_PRIVATE","protected","T_PROTECTED","public","T_PUBLIC","unset","T_UNSET","T_LIST","array","T_ARRAY","callable","T_CALLABLE","or","T_LOGICAL_OR","and","T_LOGICAL_AND","xor","T_LOGICAL_XOR","castKeywords","int","T_INT_CAST","integer","real","T_DOUBLE_CAST","double","float","string","T_STRING_CAST","binary","T_ARRAY_CAST","object","T_OBJECT_CAST","bool","T_BOOL_CAST","boolean","T_UNSET_CAST","input","size","yylineno","prev_offset","prev_line","prev_column","fn","T_FN","done","conditionStack","begin","heredoc_label","indentation","indentation_uses_spaces","finished","first_encaps_node","ch","unput","c","tryMatch","text","ahead","tryMatchCaseless","toLowerCase","consume","getState","setState","state","appendToken","next","T_WHITESPACE","T_COMMENT","T_DOC_COMMENT","T_OPEN_TAG","T_OPEN_TAG_WITH_ECHO","T_CLOSE_TAG","condition","curCondition","stateCb","popState","pop","tName","e","console","error","aspTagMode","is_WHITESPACE","nextINITIAL","matchINITIAL","T_INLINE_HTML","MAX_LENGTH_OF_LONG","long_min_digits","process","arch","consume_NUM","hasPoint","is_HEX","consume_HNUM","consume_BNUM","is_NUM","undo","is_NUM_START","consume_LNUM","T_DNUMBER","T_LNUMBER","matchST_LOOKING_FOR_PROPERTY","T_OBJECT_OPERATOR","is_LABEL_START","consume_LABEL","T_STRING","matchST_LOOKING_FOR_VARNAME","T_STRING_VARNAME","matchST_VAR_OFFSET","T_NUM_STRING","T_VARIABLE","T_ENCAPSED_AND_WHITESPACE","is_TOKEN","matchST_IN_SCRIPTING","consume_TOKEN","T_CONSTANT_ENCAPSED_STRING","ST_DOUBLE_QUOTES","nextCH","newline","valid_after_heredoc","valid_after_heredoc_73","is_HEREDOC","revert","is_TABSPACE","tChar","yyoffset","is_LABEL","yylabel","includes","prematch_ENDOFDOC","T_START_HEREDOC","prefix","isDOC_MATCH","consumeLeadingSpaces","prev_ch","indentation_uses_tabs","leading_ch","matchST_NOWDOC","T_END_HEREDOC","matchST_HEREDOC","T_DOLLAR_OPEN_CURLY_BRACES","consume_VARIABLE","T_CURLY_OPEN","matchST_BACKQUOTE","matchST_DOUBLE_QUOTES","id","T_YIELD_FROM","T_YIELD","tokenTerminals","$","nchar","T_DEC","T_MINUS_EQUAL","T_NS_SEPARATOR","T_DIV_EQUAL","T_DOUBLE_COLON","initial","consume_TABSPACE","yylen","castToken","castId","T_DOUBLE_ARROW","T_IS_IDENTICAL","T_IS_EQUAL","T_INC","T_PLUS_EQUAL","T_IS_NOT_IDENTICAL","T_IS_NOT_EQUAL","T_COALESCE_EQUAL","T_COALESCE","T_SL_EQUAL","T_SL","T_SPACESHIP","T_IS_SMALLER_OR_EQUAL","T_IS_GREATER_OR_EQUAL","T_SR_EQUAL","T_SR","T_MUL_EQUAL","T_POW_EQUAL","T_POW","T_CONCAT_EQUAL","T_ELLIPSIS","T_MOD_EQUAL","T_AND_EQUAL","T_BOOLEAN_AND","T_OR_EQUAL","T_BOOLEAN_OR","T_XOR_EQUAL","charCodeAt","indexOf","isNumber","n","parseFloat","isFinite","Parser","extractDoc","extractTokens","suppressErrors","mapIt","item","entries","IDENTIFIER","Map","map","VARIABLE","SCALAR","T_MAGIC_CONST","T_MEMBER_FLAGS","EOS","EXPR","getTokenName","code","_errors","currentNamespace","_tokens","_lastNode","innerList","innerListForm","program","childs","read_start","log","raiseError","msgExpect","expect","err","SyntaxError","lineNumber","fileName","columnNumber","msg","symbol","max","expectEndOfStatement","ignoreStack","showlog","trim","found","read_comment","read_doc_comment","is","has","read_array","read_array_pair_list","read_list","read_array_pair","read_variable","read_expr","read_class_declaration_statement","flag","read_class_modifiers","propName","propExtends","read_extends_from","propImplements","read_implements_list","read_class_body","read_class_modifier","read_trait_use_statement","read_member_flags","read_function","read_variable_list","read_constant_list","read_optional_type","constName","asInterface","idx","read_type","variant","read_interface_declaration_statement","read_interface_extends_list","read_interface_body","read_function_declaration","read_trait_declaration_statement","read_namespace_name","read_trait_use_alias","methodName","read_name_list","read_expr_item","read_class_name_reference","trueArg","read_expr_cast","read_isset_variable","read_isset_variables","read_function_list","read_internal_functions_in_yacc","read_optional_expr","stopToken","read_exit_expr","handleDereferencable","read_encapsed_string","assign","isInner","assignList","hasItem","read_new_expr","read_inline_function","backup","isConst","read_assignref","read_scalar","convertToList","convertedItems","is_reference","params","read_parameter_list","returnType","read_argument_list","read_new_class_name","read_static_getter","recursive_variable_chain_scan","read_dereferencable","is_variadic","closure","read_code_block","nodeName","nameNode","read_lexical_vars","read_lexical_var_list","read_lexical_var","read_byref","read_parameter","parameterName","read_non_empty_argument_list","wasVariadic","argument","read_argument","typereference","read_if","read_if_expr","read_elseif_short","read_else_short","read_inner_statement","read_statement","read_while","read_short_form","read_do","read_for","read_foreach","read_foreach_variable","isShort","read_namespace","read_top_statement","read_top_statements","reference","resolveReference","relative","read_use_statement","read_use_type","read_use_declaration","read_use_declarations","typed","read_use_alias","aliasName","useitem","specialChar","r","t","f","String","fromCharCode","v","resolve_special_chars","doubleQuote","replace","$match","p1","p2","fromCodePoint","substr","remove_heredoc_leading_whitespace_chars","check_heredoc_indentation_level","matchedChar","removementRegExp","RegExp","removementFirstEncapsNodeRegExp","textSize","leadingWhitespaceCharCount","inCoutingState","chToCheck","inCheckState","read_dereferencable_scalar","get_magic_constant","lastCh","read_encapsed_string_item","encapsedPart","varName","read_simple_variable","read_encaps_var_offset","isBinary","labelStart","encapsed","toUpperCase","statement","read_const_list","read_inner_statements","read_declare_list","directive","read_switch","current","read_variable_declarations","prevChar","fixFirstLine","read_try","labelNameText","labelName","top","read_switch_case_list","read_case_list","separator","preserveFirstSeparator","itemResult","cb","read_only","read_reference_variable","literal","read_what","is_static_lookup","recursive_scan_loop","isSquareBracket","num","freeze","converterConfig","canConvert","tgStructID","convert","structure","tgMethodName","exc","pathException","converterTarget","set","get","CurrentLangStructureConverter","registerConvertionMethod","tgPartialConverter","defineProperty","objStruct","configurable","writable","enumerable","toJsObjectDeclaration","obj","stringify","jsexc","toCurrLang","valueOf","methName","JSONStructureConverter","toTextPairs","langDataStruct","langDataInd","tgStruct","JSON","PHPArrayStructureConverter","XMLStructureConverter","DOMParser","parseFromString","YMLStructureConverter","YML","ToJSONStructureConverter","replacer","space","ToPHPArrayStructureConverter","newLines","quoteType","singleQuote","ToSQLTableDefinitionStructureConverter","ToXMLStructureConverter","ToYMLStructureConverter","YAML","byJSONFile","extensionSettings","reason","detect","structValue","structMeta","potentiallyStructs","defInd","structDefInfo","qualificationPriority","structDef","createFromObject","structCollInd","structInd","tgStructDef","validatorDef","validators","validate","passed","languages","langIndex","langContextIndex","languageContexts","mimeIndex","mimeType","preferredMimes","totalQualification","validateUncoveredStructures","language","languageContext","fileDetails","structDefManager","settings","getDefintionsNames","getCurrLangConverters","description","detail","extension","primitive","convertionOptions","lastComma","SidepanelMenuProivder","_extensionUri","_accessor","resolveWebviewView","webviewView","context","_token","webview","enableScripts","localResourceRoots","html","onDidReceiveMessage","data","styleResetUri","asWebviewUri","Uri","joinPath","styleVSCodeUri","styleMainUri","toolkitUri","getExtensionURI","nonce","getNonce","cspSource","converter","viewType","parseKey","parseValue","isKeyed","every","reduce","acc","PHPArray","PHPParser","phpArrayStr","before","objKeys","objKeyInd","objProp","objKey","repeat","objValue","xmlStr","startDepth","makeTagSpace","makeValueSpace","depth","setup","hasErrors","convertTo","tgValue","fromType","toType","toOptions","tgConverter","converters","currLangResult","preloadedDefsNames","from","getDefinition","nativeLangConverters","partialConverter","allowedStructures","disallowedStructures","structID","definitionsToLoad","def","definitionInd","tgDefinition","ValidationResult","initialExceptions","Date","addExceptions","isValid","registerDatetime","validationDuration","exceptions","setValidationDuration","duration","exception","byComparing","setParam","getParam","Symbol","toPrimitive","hint","configMeta","uid","setName","StructureDefinitionFactory","tgObject","prepValidators","prepConverters","structValidator","structConverterType","conv","Math","random","previous","versions","__dirname","window","allScriptsTags","document","getElementsByTagName","getMessage","getCode","getFile","getLine","getTrace","getTraceAsSring","getPrevious","ReportError","super","captureStackTrace","StructureConvertionException","StructureValidationException","TypeReportError","targetValue","expectedType","customMessage","baseTypeValue","baseTypeExpected","compareMessage","str","charAt","possible","floor","extensionUri","pathList","AbstractStructureValidator","validatorOrigin","activeValidators","getLastID","getDefaultValidationData","startDatetime","res","validationModel","endDatetime","validatorRef","getValidationAllData","abs","getTime","shortValidate","shortValidationModel","getValidationData","optionName","addValidationData","optionValue","optionKey","Set","updateValidationData","setValidationData","optionCB","getPrototypeOf","cloneEmpty","ERROR_MESSAGES","JSONStructureValidator","structStr","PHPArrayStructureValidator","StringableStructureValidator","positionMarkers","invaildChars","lastPosition","XMLStructureValidator","YMLStructureValidator","locator","DOMHandler","cdata","_locator","l","systemId","_toString","chars","java","lang","appendElement","hander","currentElement","appendChild","doc","sax","XMLReader","domBuilder","errorHandler","defaultNSMap","xmlns","isHTML","entityMap","htmlEntity","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","xml","startDocument","DOMImplementation","createDocument","documentURI","startElement","namespaceURI","localName","qName","attrs","el","createElementNS","len","getURI","getValue","attr","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","tagName","parentNode","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","characters","charNode","createCDATASection","createTextNode","skippedEntity","endDocument","normalize","comment","comm","createComment","startCDATA","endCDATA","startDTD","publicId","implementation","createDocumentType","dt","warning","warn","fatalError","ParseError","XMLSerializer","__DOMHandler","copy","dest","p","_extends","Class","Super","pt","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","_xmlEncoder","_visitNode","callback","firstChild","nextSibling","Document","remove","_onUpdateChild","newChild","cs","childNodes","child","_removeChild","previousSibling","lastChild","_insertBefore","nextChild","cp","removeChild","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","serializeToString","needNamespaceDefine","ns","attributes","pubid","sysid","sub","internalSubset","importNode","deep","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","qualifiedName","doctype","root","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","rtv","getAttribute","getElementsByClassName","className","pattern","base","createElement","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","count","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","lt","gt","amp","quot","apos","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","cap","cup","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","euro","trade","larr","uarr","rarr","darr","harr","crarr","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","nameStartChar","nameChar","tagNamePattern","copyLocator","parseElementStartPart","currentNSMap","entityReplacer","addAttribute","qname","startIndex","attributeNames","addValue","attrName","s","setTagName","closed","match","localNSMap","a","nsp","nsPrefix","_copy","parseHtmlSpecialContent","elStartEnd","elEndStart","fixSelfClosed","closeMap","pos","lastIndexOf","parseDCC","matchs","exec","lastMatch","endDTD","parseInstruction","ElementAttributes","defaultNSMapCopy","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","tagStart","config","endMatch","locator2","getLocalName","Dumper","Inline","Utils","dump","inline","indent","exceptionOnInvalidType","objectEncoder","output","willBeInlined","strRepeat","isEmpty","Escaper","Pattern","LIST_ESCAPEES","LIST_ESCAPED","MAPPING_ESCAPEES_TO_ESCAPED","j","mapping","ref","PATTERN_CHARACTERS_TO_ESCAPE","PATTERN_MAPPING_ESCAPEES","PATTERN_SINGLE_QUOTING","requiresDoubleQuoting","escapeWithDoubleQuotes","_this","requiresSingleQuoting","escapeWithSingleQuotes","DumpException","hasProp","superClass","parsedLine","snippet","parent","__super__","extend","ParseException","ParseMore","Unescaper","REGEX_QUOTED_STRING","PATTERN_TRAILING_COMMENTS","PATTERN_QUOTED_SCALAR","PATTERN_THOUSAND_NUMERIC_SCALAR","PATTERN_SCALAR_BY_DELIMITERS","configure","objectDecoder","parseSequence","parseMapping","parseScalar","toISOString","dumpObject","isDigits","isNumeric","PATTERN_DATE","objectSupport","len1","scalar","delimiters","stringDelimiters","evaluate","joinedDelimiters","ref1","strpos","parseQuotedScalar","ltrim","rtrim","evaluateScalar","unescapeDoubleQuotedString","unescapeSingleQuotedString","sequence","isQuoted","shouldContinueWhileLoop","cast","date","firstSpace","scalarLower","subValue","trimmedScalar","parseBoolean","stringToDate","hexDec","octDec","lines","currentLineNb","currentLine","refs","PATTERN_FOLDED_SCALAR_ALL","PATTERN_FOLDED_SCALAR_END","PATTERN_SEQUENCE_ITEM","PATTERN_ANCHOR_VALUE","PATTERN_COMPACT_NOTATION","PATTERN_MAPPING_ITEM","PATTERN_DECIMAL","PATTERN_INDENT_SPACES","PATTERN_TRAILING_LINES","PATTERN_YAML_HEADER","PATTERN_LEADING_COMMENTS","PATTERN_DOCUMENT_MARKER_START","PATTERN_DOCUMENT_MARKER_END","PATTERN_FOLDED_SCALAR_BY_INDENTATION","CONTEXT_NONE","CONTEXT_SEQUENCE","CONTEXT_MAPPING","allowOverwrite","block","lastKey","len2","len3","lineCount","matches","mergeNode","parsed","parsedItem","ref2","refName","refValue","cleanup","moveToNextLine","isCurrentLineEmpty","getRealCurrentLineNb","isNextLineUnIndentedCollection","getNextEmbedBlock","leadspaces","getCurrentLineIndentation","isNextLineIndented","includeUnindentedCollection","isItUnindentedCollection","newIndent","removeComments","removeCommentsPattern","unindentedEmbedBlock","isStringUnIndentedCollectionItem","isCurrentLineComment","isCurrentLineBlank","moveToPreviousLine","foldedIndent","modifiers","parseFoldedScalar","indicator","notEOF","ignoreComments","currentIndentation","ret","trimmedLine","smallestIndent","trimmedValue","replaceAll","subStrCount","rawRegex","_char","capturingBracketNumber","cleanedRegex","subChar","regex","replacement","limit","PATTERN_ESCAPED_CHARACTER","_unescapeCallback","unescapeCharacter","utf8chr","REGEX_LEFT_TRIM_BY_CHAR","REGEX_RIGHT_TRIM_BY_CHAR","REGEX_SPACES","REGEX_DIGITS","REGEX_OCTAL","REGEX_HEXADECIMAL","LOCAL_TIMEZONE_OFFSET","getTimezoneOffset","regexLeft","regexRight","isEmptyObject","results","subString","sublen","strict","lowerInput","day","fraction","hour","info","minute","month","second","tz_offset","year","UTC","tz","tz_hour","tz_minute","tz_sign","setTime","number","getStringFromFile","path","fs","xhr","XMLHttpRequest","ActiveXObject","onreadystatechange","readyState","status","responseText","open","send","readFile","readFileSync","Yaml","parseFile","yaml","load","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","async","vscode","workspace","getConfiguration","structMng","extAccessor","disposable","sidebarProvider","registerWebviewViewProvider","commands","registerCommand","editor","activeTextEditor","selection","selectedAllRange","getText","showInformationMessage","structureDetector","structureID","languageId","showErrorMessage","allItems","showQuickPick","title","placeHolder","then","selectedOutputStruct","outputStruct","edit","editorBuilder","newDocTab","openTextDocument","content","showTextDocument","selectedValidationTypeStruct","structValidators","disposableEvent","subscriptions"],"sourceRoot":""}